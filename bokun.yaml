swagger: '2.0'
info:
  title: Bokun API
  description: <p>Further documentation of this api is available <a href="https://docs.google.com/document/d/1tkLLqeAvVtRrDpsM1uJZJvhHg3EfsMw1z_SN8Lbe2Rs/pub" target="_blank">here</a>.</p>
               <p>You can generate a client in your preferred language using <a href="http://editor.swagger.io/#/?import=https://bokun.github.io/api-docs/bokun.yaml">swagger editor</a></p>
  version: '1.0-SNAPSHOT'
schemes:
  - https
host: api.bokun.io
tags:
  - name: accommodation
    description: Operations for Accommodation
  - name: activity
    description: 'Operations for Tours & Activities'
  - name: booking
    description: Operations for Bookings
  - name: car-rental
    description: Operations for Rental Cars
  - name: category
    description: Operations for Categories
  - name: country
    description: Operations for countries and nationalities
  - name: currency
    description: Operations for Supported Currencies
  - name: question
    description: Operations for Booking questions and answers
  - name: checkout
    description: Operations for Checkout
  - name: language
    description: Operations for Supported Languages
  - name: product-list
    description: Operations for Product Lists
  - name: route
    description: Operations for Transport routes
  - name: shopping-cart
    description: Operations for Shopping carts
  - name: shore-excursions
    description: Operations for Shore Excursions
  - name: tag
    description: Operations for Tags
paths:
  /accommodation.json/search:
    post:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: accommodationSearch
      summary: Search accommodations and availability
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccommodationQuery'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SearchResultsDto'
  /accommodation.json/check-room-availability:
    post:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: checkRoomAvailability
      summary: Get a list of all rooms available for a given stay interval.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RoomAvailabilityRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RoomAvailabilityResponseDto'
  '/accommodation.json/{id}/check-availability':
    post:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: checkAccommodationAvailability
      summary: Check availability for a selected Accommodation
      parameters:
        - in: path
          description: ID of the Accommodation
          name: id
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccommodationQuery'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AccommodationAvailabilityReportDto'
  '/accommodation.json/{id}':
    get:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: getAccommodation
      summary: Get Accommodation by ID
      parameters:
        - in: path
          description: ID of accommodation to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AccommodationDto'
  '/accommodation.json/{id}/rooms':
    get:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: getRoomsByRoomType
      summary: Get a list of all rooms for a particular Accommodation.
      parameters:
        - in: path
          description: ID of the accommodation
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RoomsGroupedByTypeContainer'
  /accommodation.json/availabilities:
    get:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: getAccommodationAvailabilities
      summary: Get room availabilities for one or more accommodations over an interval
      parameters:
        - in: query
          description: Comma separated IDs of the Accommodations
          name: ids
          required: true
          type: string
        - in: query
          description: The start date of the interval (yyyy-MM-dd)
          name: start
          required: true
          type: string
        - in: query
          description: The end date of the interval (yyyy-MM-dd)
          name: end
          required: true
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
      responses:
        '200':
          description: Activity availability response.
          schema:
            $ref: '#/definitions/AccommodationAvailabilitiesDto'
  '/accommodation.json/slug/{slug}':
    get:
      produces:
        - application/json
      tags:
        - accommodation
      operationId: findAccommodationBySlug
      summary: Look up Accommodation by slug
      parameters:
        - in: path
          description: The slug of the accommodation to be fetched
          name: slug
          required: true
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AccommodationDto'
  /car-rental.json/list:
    get:
      produces:
        - application/json
      tags:
        - car-rental
      operationId: listCarRentals
      summary: List all car rentals
      parameters:
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarRentalSearchResultsDto'
  '/car-rental.json/slug/{slug}':
    get:
      produces:
        - application/json
      tags:
        - car-rental
      operationId: findCarRentalBySlug
      summary: Look up Car Rental by slug
      parameters:
        - in: path
          description: The slug of the car rental to be fetched
          name: slug
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarRentalDto'
  '/car-rental.json/{id}':
    get:
      produces:
        - application/json
      tags:
        - car-rental
      operationId: getCarRental
      summary: Get Car Rental by ID
      parameters:
        - in: path
          description: ID of car rentals to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarRentalDto'
  /car-rental.json/search-cars:
    post:
      produces:
        - application/json
      tags:
        - car-rental
      operationId: searchCars
      summary: Search types of rental cars
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CarQuery'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarSearchResultsDto'
  /currency.json/findAll:
    get:
      produces:
        - application/json
      tags:
        - currency
      operationId: allCurrencies
      summary: Get all Supported Currencies
      description: 'Get a list of all the available currencies, along with conversion rates.'
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/CurrencyDto'
  /tag.json/groups:
    get:
      produces:
        - application/json
      tags:
        - tag
      operationId: getTagGroups
      summary: Get the tag groups
      parameters:
        - in: query
          description: Comma separated list of required flags
          name: flags
          required: false
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/TagGroupDto'
  '/category.json/{productType}':
    get:
      produces:
        - application/json
      tags:
        - category
      operationId: categoriesByProductType
      summary: Get all categories for the specified product type
      parameters:
        - in: path
          description: The product type to be categorized
          name: productType
          required: true
          type: string
        - in: query
          description: Specifies whether to get only categories for bookable items in this product type or not
          name: item
          required: false
          type: string
        - in: query
          description: Comma separated list of required flags
          name: flags
          required: false
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryDto'
  '/activity.json/{id}/upcoming-availabilities/{max}':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: getUpcomingAvailabilities
      summary: Get the next upcoming Activity availabilities
      parameters:
        - in: path
          description: ID of activity to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: path
          description: The max number of upcoming availabilities to get.
          name: max
          required: true
          type: integer
          format: int32
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
        - in: query
          description: Specify whether to include availabilities that are sold out.
          name: includeSoldOut
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityAvailabilityDto'
  '/activity.json/slug/{slug}':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: findActivityBySlug
      summary: Look up Activity by slug
      parameters:
        - in: path
          description: The slug of the activity to be fetched
          name: slug
          required: true
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityDto'
  '/activity.json/{id}/pickup-places':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: getPickupPlaces
      summary: Get Pickup / Dropoff places for an Activity
      parameters:
        - in: path
          description: ID of the Activity
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityPlacesDto'
  /activity.json/search:
    post:
      produces:
        - application/json
      tags:
        - activity
      operationId: activitySearch
      summary: Search activities and availability
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/ActivityQuery'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/SearchResultsDto'
  '/activity.json/{id}/availabilities':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: getActivityAvailabilities
      summary: Get Activity availabilities for an interval
      parameters:
        - in: path
          description: ID of activity to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: "The start date of the interval ('yyyy-MM-dd')"
          name: start
          required: true
          type: string
        - in: query
          description: "The end date of the interval ('yyyy-MM-dd')"
          name: end
          required: true
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: Specify whether to include availabilities that are sold out.
          name: includeSoldOut
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/ActivityAvailabilityDto'
  '/activity.json/{id}/price-list':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: priceList
      summary: Get Activity price list
      parameters:
        - in: path
          description: ID of activity for which we want prices
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code in which we want the prices.
          name: currency
          required: false
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityPriceListDto'
  '/activity.json/{id}':
    get:
      produces:
        - application/json
      tags:
        - activity
      operationId: getActivity
      summary: Get Activity by ID
      parameters:
        - in: path
          description: ID of activity to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityDto'
  '/shopping-cart.json/session/{sessionId}/car-rental':
    post:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: addCarRentalToSessionCart
      summary: Add car rental booking to a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: body
          description: 'JSON object describing the car rental booking request, can be array of such objects'
          name: body
          required: true
          schema:
            $ref: '#/definitions/CarRentalBookingRequestDto'
        - in: query
          description: Affiliate tracking code.
          name: trackingCode
          required: false
          type: string
        - in: query
          description: ID of the vessel associated with this booking.
          name: vesselId
          required: false
          type: integer
          format: int64
        - in: query
          description: ID of the harbour associated with this booking.
          name: harbourId
          required: false
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: getSessionCart
      summary: Get a session shopping cart
      parameters:
        - in: path
          description: The session ID of shopping cart to be fetched
          name: sessionId
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-car/{carBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeCarFromSessionCart
      summary: Remove a car booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the car booking to remove
          name: carBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/route':
    post:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: addRouteToSessionCart
      summary: Add route booking to a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: body
          description: 'JSON object describing the route booking request, can be array of such objects'
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransportBookingRequestDto'
        - in: query
          description: Affiliate tracking code.
          name: trackingCode
          required: false
          type: string
        - in: query
          description: ID of the vessel associated with this booking.
          name: vesselId
          required: false
          type: integer
          format: int64
        - in: query
          description: ID of the harbour associated with this booking.
          name: harbourId
          required: false
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-room/{roomBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeRoomFromSessionCart
      summary: Remove a room booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the room booking to remove
          name: roomBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-extra/{bType}/{bId}/{eId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeExtraBookingFromSessionCart
      summary: Remove an extra booking from an existing parent booking in a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The booking type
          name: bType
          required: true
          type: string
        - in: path
          description: The ID of the parent booking of this type
          name: bId
          required: true
          type: integer
          format: int64
        - in: path
          description: The ID of the extra to be removed (NOT the extra booking)
          name: eId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/accommodation':
    post:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: addAccommodationToSessionCart
      summary: Add accommodation booking to a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: body
          description: 'JSON object describing the accommodation booking request, can be array of such objects'
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccommodationBookingRequestDto'
        - in: query
          description: Affiliate tracking code.
          name: trackingCode
          required: false
          type: string
        - in: query
          description: ID of the vessel associated with this booking.
          name: vesselId
          required: false
          type: integer
          format: int64
        - in: query
          description: ID of the harbour associated with this booking.
          name: harbourId
          required: false
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/activity':
    post:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: addActivityToSessionCart
      summary: Add activity booking to a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: body
          description: 'JSON object describing the activity booking request, can be array of such objects'
          name: body
          required: true
          schema:
            $ref: '#/definitions/ActivityBookingRequestDto'
        - in: query
          description: Affiliate tracking code.
          name: trackingCode
          required: false
          type: string
        - in: query
          description: ID of the vessel associated with this booking.
          name: vesselId
          required: false
          type: integer
          format: int64
        - in: query
          description: ID of the harbour associated with this booking.
          name: harbourId
          required: false
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-accommodation/{accommodationBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeAccommodationFromSessionCart
      summary: Remove an accommodation booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the accommodation booking to remove
          name: accommodationBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-activity/{activityBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeActivityFromSessionCart
      summary: Remove an activity booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the activity booking to remove
          name: activityBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-car-rental/{carRentalBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeCarRentalFromSessionCart
      summary: Remove a car rental booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the car rental booking to remove
          name: carRentalBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/add-or-update-extra/{bType}/{bId}':
    post:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: addOrUpdateExtraBookingInSessionCart
      summary: Add or update an extra booking for an existing parent booking in a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The booking type
          name: bType
          required: true
          type: string
        - in: path
          description: The ID of the parent booking of this type
          name: bId
          required: true
          type: integer
          format: int64
        - in: body
          description: JSON object describing the extra booking request
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExtraBookingRequestDto'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/shopping-cart.json/session/{sessionId}/remove-route/{routeBookingId}':
    get:
      produces:
        - application/json
      tags:
        - shopping-cart
      operationId: removeRouteFromSessionCart
      summary: Remove a route booking from a session cart
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: path
          description: The ID of the route booking to remove
          name: routeBookingId
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  /language.json/findAll:
    get:
      produces:
        - application/json
      tags:
        - language
      operationId: allLanguages
      summary: Get all Languages supported by the Channel
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/TranslationLanguageDto'
  /route.json/list:
    get:
      produces:
        - application/json
      tags:
        - route
      operationId: listRoutes
      summary: 'List '
      parameters:
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RouteDto'
  /route.json/check-availability:
    post:
      produces:
        - application/json
      tags:
        - route
      operationId: checkRouteAvailability
      summary: Get availability report for a particular route
      parameters:
        - in: body
          description: JSON query
          name: query
          required: true
          schema:
            $ref: '#/definitions/TransportQuery'
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RouteAvailabilityReportDto'
  '/route.json/{id}':
    get:
      produces:
        - application/json
      tags:
        - route
      operationId: getRoute
      summary: Get Route by ID
      parameters:
        - in: path
          description: ID of transport route to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RouteDto'
  '/question.json/shopping-cart/{sessionId}':
    get:
      produces:
        - application/json
      tags:
        - question
      operationId: forShoppingCart
      summary: Get questions for the shopping cart specified
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
      responses:
        '200':
          description: The questions
          schema:
            $ref: '#/definitions/BookingQuestionsDto'
    post:
      produces:
        - application/json
      tags:
        - question
      operationId: answerShoppingCart
      summary: Answer questions for the shopping cart specified
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
        - in: body
          description: The answers
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingAnswersDto'
      responses:
        '200':
          description: API response
          schema:
            $ref: '#/definitions/ApiResponse'
  '/question.json/booking/{bookingId}':
    get:
      produces:
        - application/json
      tags:
        - question
      operationId: forBooking
      summary: Get questions for the booking specified
      parameters:
        - in: path
          description: The ID of the booking
          name: bookingId
          required: true
          format: int64
          type: integer
      responses:
        '200':
          description: The questions
          schema:
            $ref: '#/definitions/BookingQuestionsDto'
    post:
      produces:
        - application/json
      tags:
        - question
      operationId: answerBooking
      summary: Answer questions for the booking specified
      parameters:
        - in: path
          description: The ID of the booking
          name: bookingId
          required: true
          format: int64
          type: integer
        - in: body
          description: The answers
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingAnswersDto'
      responses:
        '200':
          description: API Response
          schema:
            $ref: '#/definitions/ApiResponse'
  '/question.json/activity-booking/{activityBookingId}':
    get:
      produces:
        - application/json
      tags:
        - question
      operationId: forActivityBooking
      summary: Get questions for the activity booking specified
      parameters:
        - in: path
          description: The ID of the activity booking
          name: activityBookingId
          required: true
          format: int64
          type: integer
      responses:
        '200':
          description: Questions
          schema:
            $ref: '#/definitions/BookingQuestionsDto'
    post:
      produces:
        - application/json
      tags:
        - question
      operationId: answerActivityBooking
      summary: Answer questions for the activity booking specified
      parameters:
        - in: path
          description: The ID of the activity booking
          name: activityBookingId
          required: true
          format: int64
          type: integer
        - in: body
          description: The answers
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingAnswersDto'
      responses:
        '200':
          description: API response
          schema:
            $ref: '#/definitions/ApiResponse'
  '/checkout.json/options/shopping-cart/{sessionId}':
    get:
      produces:
        - application/json
      tags:
        - checkout
      operationId: checkoutOptionsForShoppingCart
      summary: Get checkout options for the shopping cart specified
      parameters:
        - in: path
          description: The session ID of shopping cart
          name: sessionId
          required: true
          type: string
      responses:
        '200':
          description: The checkout options
          schema:
            $ref: '#/definitions/Checkout'
  '/checkout.json/options/booking-request':
    post:
      produces:
        - application/json
      tags:
        - checkout
      operationId: checkoutOptionsForBookingRequest
      summary: Get checkout options for the booking request specified
      parameters:
        - in: body
          description: The booking request
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingRequest'
      responses:
        '200':
          description: The checkout options
          schema:
            $ref: '#/definitions/Checkout'
  '/checkout.json/submit':
    post:
      produces:
        - application/json
      tags:
        - checkout
      operationId: processCheckout
      summary: Process the checkout request
      parameters:
        - in: body
          description: The booking request
          name: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutRequest'
      responses:
        '200':
          description: The checkout response
          schema:
            $ref: '#/definitions/CheckoutResponse'
  '/checkout.json/confirm-reserved/{code}':
    post:
      produces:
        - application/json
      tags:
        - checkout
      operationId: confirmReservedCheckout
      summary: Confirm a reservation made via checkout
      parameters:
        - in: path
          description: The booking confirmation code
          name: code
          required: true
          type: string
        - in: body
          description: The booking request
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingConfirmation'
      responses:
        '200':
          description: The checkout response
          schema:
            $ref: '#/definitions/CheckoutResponse'
  '/booking.json/guest/{sessionId}/reserved':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: guestGetReserved
      summary: Get a list of reserved bookings for the guest (if any exist)
      parameters:
        - in: path
          description: The session ID of the guest
          name: sessionId
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingDto'
  '/booking.json/activity-booking/{confirmationCode}/customer-status/{status}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: setActivityBookingCustomerStatus
      summary: Change the arrived status of an activity booking
      parameters:
        - in: path
          description: The confirmation code for the product booking
          name: confirmationCode
          required: true
          type: string
        - in: path
          description: The arrived status (yes/no true/false)
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityBookingDetailsDto'
  '/booking.json/cancel-product-booking/{productConfirmationCode}':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: cancelProductBooking
      summary: Cancel for given product booking
      parameters:
        - in: path
          description: The confirmation code for the activity booking
          name: productConfirmationCode
          required: true
          type: string
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/cancelProductBooking'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResponse'
  '/booking.json/cancel-booking/{confirmationCode}':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: cancelBooking
      summary: Cancel for given booking
      parameters:
        - in: path
          description: The confirmation code for the booking that you want to cancel
          name: confirmationCode
          required: true
          type: string
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/cancelBooking'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResponse'
  '/booking.json/accommodation-booking/{id}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: accommodationBooking
      summary: Show accommodation booking information
      parameters:
        - in: path
          description: The id or confirmation code for the product booking
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AccommodationBookingDetailsDto'
  /booking.json/car-rental-booking/reserve-and-confirm:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: reserveAndConfirmCarRentalBooking
      summary: Reserve and confirm a single car rental booking (bypasses shopping cart)
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/SingleCarRentalBookingRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/{confirmationCode}/abort-reserved':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: abortReservedBooking
      summary: Abort a reserved booking
      parameters:
        - in: path
          description: The confirmation code of the booking. The booking ID can also be used.
          name: confirmationCode
          required: true
          type: string
        - in: query
          description: Specifies whether the booking is aborted due to a timeout.
          name: timeout
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResponse'
  '/booking.json/car-rental-booking/{confirmationCode}/customer-status/{status}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: setCarRentalBookingCustomerStatus
      summary: Change the arrived status of a car rental booking
      parameters:
        - in: path
          description: The confirmation code for the product booking
          name: confirmationCode
          required: true
          type: string
        - in: path
          description: The arrived status (yes/no or true/false)
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarRentalBookingDetailsDto'
  '/booking.json/accommodation-booking/{confirmationCode}/customer-status/{status}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: setAccommodationBookingCustomerStatus
      summary: Change the arrived status of an accommodation booking
      parameters:
        - in: path
          description: The confirmation code for the product booking
          name: confirmationCode
          required: true
          type: string
        - in: path
          description: The arrived status (yes/no true/false)
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/AccommodationBookingDetailsDto'
  /booking.json/activity-booking/reserve-and-confirm:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: reserveAndConfirmActivityBooking
      summary: Reserve and confirm a single activity booking (bypasses shopping cart)
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/SingleActivityBookingRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/accommodation-booking/{productConfirmationCode}/ticket':
    get:
      produces:
        - application/pdf
      tags:
        - booking
      operationId: getAccommodationTicket
      summary: Get ticket for given accommodation booking
      parameters:
        - in: path
          description: The confirmation code of the accommodation booking
          name: productConfirmationCode
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
  '/booking.json/{confirmationCode}/confirm':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: confirmBooking
      summary: Confirm a booking (after payment)
      parameters:
        - in: path
          description: The confirmation code of the booking. The booking ID can also be used.
          name: confirmationCode
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: IS
        - in: query
          description: Specifies whether to send email booking confirmation to the customer
          name: sendCustomerNotification
          required: false
          type: boolean
          default: true
        - in: body
          description: 'The confirmation object, which can optionally contain payments and other data'
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingConfirmationDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/booking/{confirmationCode}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: booking
      summary: Fetch a booking by confirmation code
      parameters:
        - in: path
          description: The confirmation code of the booking
          name: confirmationCode
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: IS
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/activity-booking/{id}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: activityBooking
      summary: Show activity booking information
      parameters:
        - in: path
          description: The id or confirmation code for the product booking
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ActivityBookingDetailsDto'
  '/booking.json/route-booking/{confirmationCode}/customer-status/{status}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: setRouteBookingCustomerStatus
      summary: Change the arrived status of a route booking
      parameters:
        - in: path
          description: The confirmation code for the product booking
          name: confirmationCode
          required: true
          type: string
        - in: path
          description: The arrived status (yes/no or true/false)
          name: status
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RouteBookingDetailsDto'
  '/booking.json/{confirmationCode}/payment-error':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: paymentError
      summary: Indicate that an error occurred in payment
      parameters:
        - in: path
          description: The confirmation code of the booking. The booking ID can also be used.
          name: confirmationCode
          required: true
          type: string
        - in: body
          description: JSON object describing the error
          name: body
          required: true
          schema:
            $ref: '#/definitions/ErrorDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ApiResponse'
  /booking.json/accommodation-booking/reserve-and-confirm:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: reserveAndConfirmAccommodationBooking
      summary: Reserve and confirm a single accommodation booking (bypasses shopping cart)
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/SingleAccommodationBookingRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/guest/{sessionId}/reserve-pay-confirm':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: guestReserveChargeAndConfirm
      summary: 'Reserve the booking for the guest, charge the card and confirm'
      parameters:
        - in: path
          description: The session ID of the guest
          name: sessionId
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: Specifies whether to send email booking confirmation to the customer
          name: sendCustomerNotification
          required: false
          type: boolean
          default: true
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingReservationRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ChargeResponseDto'
  '/booking.json/transport-booking/{productConfirmationCode}/ticket':
    get:
      produces:
        - application/pdf
      tags:
        - booking
      operationId: getTransportTicket
      summary: Get ticket for given transport booking
      parameters:
        - in: path
          description: The confirmation code of the transport booking
          name: productConfirmationCode
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
  /booking.json/product-booking-search:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: productBookingSearch
      summary: Search for bookings and return a list of booking information
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductBookingQuery'
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductBookingSearchResultsDto'
  /booking.json/booking-search:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: bookingSearch
      summary: Search for bookings and return a list of booking information
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/ItineraryBookingQuery'
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/BookingSearchResultsDto'
  '/booking.json/{confirmationCode}/move-back-to-cart/session/{sessionId}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: moveReservedBookingBackToSessionCart
      summary: Move a reserved booking back to a session cart
      parameters:
        - in: path
          description: The session ID of the guest
          name: sessionId
          required: true
          type: string
        - in: path
          description: The confirmation code of the booking. The booking ID can also be used.
          name: confirmationCode
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: IS
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ShoppingCartDto'
  '/booking.json/guest/{sessionId}/reserve':
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: guestReserve
      summary: Reserve the booking for the guest (before payment)
      parameters:
        - in: path
          description: The session ID of the guest
          name: sessionId
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: Comma separated names of parameters for the payment provider.
          name: paymentParameters
          required: false
          type: string
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/BookingReservationRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/route-booking/{id}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: routeBooking
      summary: Show route booking information
      parameters:
        - in: path
          description: The id or confirmation code for the product booking
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/RouteBookingDetailsDto'
  '/booking.json/{id}/summary':
    get:
      produces:
        - application/pdf
      tags:
        - booking
      operationId: getSummary
      summary: Get summary for given booking
      parameters:
        - in: path
          description: The id of the booking
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: No response was specified
  /booking.json/edit:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: bookingExecuteEdit
      summary: Edit bookings
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingEditResult'
  '/booking.json/car-rental-booking/{productConfirmationCode}/ticket':
    get:
      produces:
        - application/pdf
      tags:
        - booking
      operationId: getCarRentalTicket
      summary: Get ticket for given car rental booking
      parameters:
        - in: path
          description: The confirmation code of the car rental booking
          name: productConfirmationCode
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
  /booking.json/route-booking/reserve-and-confirm:
    post:
      produces:
        - application/json
      tags:
        - booking
      operationId: reserveAndConfirmRouteBooking
      summary: Reserve and confirm a single route booking (bypasses shopping cart)
      parameters:
        - in: body
          description: JSON object
          name: body
          required: true
          schema:
            $ref: '#/definitions/SingleTransportBookingRequestDto'
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/BookingDto'
  '/booking.json/activity-booking/{productConfirmationCode}/ticket':
    get:
      produces:
        - application/pdf
      tags:
        - booking
      operationId: getActivityTicket
      summary: Get ticket for given activity booking
      parameters:
        - in: path
          description: The confirmation code of the activity booking
          name: productConfirmationCode
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
  '/booking.json/car-rental-booking/{id}':
    get:
      produces:
        - application/json
      tags:
        - booking
      operationId: carRentalBooking
      summary: Show car rental booking information
      parameters:
        - in: path
          description: The id or confirmation code for the product booking
          name: id
          required: true
          type: string
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/CarRentalBookingDetailsDto'
  '/product-list.json/slug/{slug}':
    get:
      produces:
        - application/json
      tags:
        - product-list
      operationId: getProductListBySlug
      summary: Get Product List by slug
      parameters:
        - in: path
          description: The slug of the Product List to be fetched
          name: slug
          required: true
          type: string
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: Comma separated list of required flags
          name: flags
          required: false
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ProductListDto'
  /product-list.json/list:
    get:
      produces:
        - application/json
      tags:
        - product-list
      operationId: getAllProductLists
      summary: Get all available Product Lists
      parameters:
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductListDescriptionDto'
  '/product-list.json/{id}':
    get:
      produces:
        - application/json
      tags:
        - product-list
      operationId: getProductListById
      summary: Get Product List by ID
      parameters:
        - in: path
          description: ID of the Product List to be fetched
          name: id
          required: true
          type: integer
          format: int64
        - in: query
          description: The currency code to use for calculating prices.
          name: currency
          required: false
          type: string
          default: ISK
        - in: query
          description: Comma separated list of required flags
          name: flags
          required: false
          type: string
        - in: query
          description: The language the content should be served in
          name: lang
          required: false
          type: string
          default: EN
      responses:
        '200':
          description: No response was specified
          schema:
            $ref: '#/definitions/ProductListDto'
  /country.json/findAll:
    get:
      produces:
        - application/json
      tags:
        - country
      operationId: allCountries
      summary: Get all supported countries/nationalities
      description: 'Get a list of all the available countries, along with the ISO code for each country.'
      responses:
        '200':
          description: No response was specified
          schema:
            type: array
            items:
              $ref: '#/definitions/CountryDto'
definitions:
  ProductDto:
    type: object
    discriminator: productType
    properties:
      productType:
        type: string
      actualVendor:
        $ref: '#/definitions/VendorDto'
      actualId:
        type: integer
        format: int64
      baseLanguage:
        type: string
        description: 'The language that the product description is written in. There may also be translations available.'
      box:
        type: boolean
        description: 'Specifies whether this is a boxed version of another product.'
      boxedVendor:
        $ref: '#/definitions/VendorDto'
        description: 'If this is a box, then this field holds the ID of the vendor that owns the product inside the box.'
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDto'
      paymentCurrencies:
        type: array
        items:
          type: string
      customFields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldDto'
      description:
        type: string
        description: 'Text describing this product. May contain HTML markup.'
      excerpt:
        type: string
        description: 'A short, non-HTML text (max 255 chars) describing the product.'
      externalId:
        type: string
        description: 'A short unique code for the product. Also called product code.'
      flags:
        type: array
        description: 'Optional list of flags which the product owner has added to the product. Flags are just simple text labels.'
        items:
          type: string
      id:
        type: integer
        format: int64
        description: 'Unique identifier for this product'
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
        description: 'The photo selected for use as the key photo for the product in lists and overviews.'
      keywords:
        type: array
        description: 'A list of keywords describing the product.'
        items:
          type: string
      languages:
        type: array
        items:
          type: string
        description: 'A list of languages which the product content is available in.'
      lastPublished:
        type: string
        description: 'The date that the product content was last changed.'
      overrideBarcodeFormat:
        type: boolean
      photos:
        type: array
        description: 'A list of photos showcasing this product.'
        items:
          $ref: '#/definitions/PhotoDto'
      productCategory:
        type: string
        description: 'The product category, will be one of: ACTIVITIES, ACCOMMODATION, TRANSPORT, CAR_RENTALS'
      productGroupId:
        type: integer
        format: int64
        description: 'The commission group this product belongs to, if any.'
      published:
        type: boolean
      slug:
        type: string
        description: 'Human readable string that may be used to identify the product.'
      tagGroups:
        type: array
        items:
          $ref: '#/definitions/TagGroupDto'
      title:
        type: string
        description: 'The name of the product.'
      vendor:
        $ref: '#/definitions/VendorDto'
        description: 'The company that operates this activity.'
      videos:
        type: array
        description: 'A list of videos showcasing the product.'
        items:
          $ref: '#/definitions/VideoDto'
      cancellationPolicy:
        $ref: '#/definitions/CancellationPolicyDto'
        description: 'A cancellation policy, describing any cancellation fees incurred when cancelling bookings.'
      barcodeType:
        $ref: '#/definitions/BarcodeTypeEnum'
      timeZone:
        type: string
      storedExternally:
        type: boolean
      pluginId:
        type: integer
        format: int64
      reviewRating:
        type: number
        format: double
      reviewCount:
        type: integer
        format: int64
      mainContactFields:
        type: array
        items:
          $ref: '#/definitions/CustomerFieldReferenceDto'
      requiredCustomerFields:
        type: array
        items:
          $ref: '#/definitions/CustomerFieldEnum'
  CustomerFieldReferenceDto:
    type: object
    properties:
      field:
        $ref: '#/definitions/CustomerFieldEnum'
      required:
        type: boolean
  ItemQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      itemTypeId:
        format: int64
        type: integer
      itemTypeTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      people:
        items:
          $ref: '#/definitions/PersonQuestionsDto'
        type: array
      extras:
        items:
          $ref: '#/definitions/ExtraQuestionsDto'
        type: array
  AccommodationBookingAnswersDto:
    type: object
    properties:
      accommodationId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      bookingId:
        format: int64
        type: integer
      rooms:
        items:
          $ref: '#/definitions/RoomAnswersDto'
        type: array
  RoomBookingRequest:
    type: object
    properties:
      roomTypeId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      guests:
        items:
          $ref: '#/definitions/PersonAnswersDto'
        type: array
      roomRateId:
        format: int64
        type: integer
      roomId:
        format: int64
        type: integer
      externalReference:
        type: string
      checkInDate:
        type: string
      checkOutDate:
        type: string
      adults:
        format: int32
        type: integer
      children:
        format: int32
        type: integer
      infants:
        format: int32
        type: integer
      extras:
        items:
          $ref: '#/definitions/ExtraBookingRequest'
        type: array
  QuestionSpecificationDto:
    type: object
    properties:
      questionId:
        type: string
      questionCode:
        type: string
      label:
        type: string
      help:
        type: string
      placeholder:
        type: string
      dataType:
        enum:
        - SHORT_TEXT
        - LONG_TEXT
        - INT
        - DOUBLE
        - BOOLEAN
        - DATE
        - DATE_AND_TIME
        type: string
      dataFormat:
        enum:
        - EMAIL_ADDRESS
        - URL
        - PHONE_NUMBER
        - COUNTRY
        - LANGUAGE
        - TIME
        - DAY_OF_MONTH
        - MONTH
        - YEAR
        - PATTERN
        type: string
      pattern:
        type: string
      required:
        type: boolean
      defaultValue:
        type: string
      flags:
        items:
          type: string
        type: array
      selectFromOptions:
        type: boolean
      selectMultiple:
        type: boolean
      answerOptions:
        items:
          $ref: '#/definitions/AnswerOptionDto'
        type: array
      answers:
        items:
          type: string
        type: array
      originalQuestion:
        type: string
  AccommodationBookingQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      accommodationId:
        format: int64
        type: integer
      accommodationTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      rooms:
        items:
          $ref: '#/definitions/RoomQuestionsDto'
        type: array
  AnswerDto:
    type: object
    properties:
      questionId:
        type: string
      values:
        items:
          type: string
        type: array
  AnswerDetails:
    allOf:
      - $ref: '#/definitions/AnswerDto'
      - properties:
          label:
            type: string
          options:
            type: array
            items:
              $ref: '#/definitions/AnswerOptionDto'
  ItemBookingRequest:
    type: object
    properties:
      itemTypeId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      people:
        items:
          $ref: '#/definitions/PersonAnswersDto'
        type: array
      quantity:
        format: int32
        type: integer
      extras:
        items:
          $ref: '#/definitions/ExtraBookingRequest'
        type: array
  BookingDetailsDto:
    type: object
    properties:
      creationDate:
        format: date-time
        type: string
      bookingId:
        format: int64
        type: integer
        xml:
          name: id
      language:
        type: string
      confirmationCode:
        type: string
      externalBookingReference:
        type: string
      status:
        $ref: '#/definitions/BookingStatusEnum'
      qrCodeUrl:
        type: string
      currency:
        type: string
      totalPrice:
        type: number
      totalPaid:
        type: number
      totalDue:
        type: number
      totalPriceConverted:
        type: number
      paymentProviderDetails:
        $ref: '#/definitions/PaymentProviderDetailsDto'
      customer:
        $ref: '#/definitions/CustomerDto'
      invoice:
        $ref: '#/definitions/CustomerInvoiceDto'
      customerPayments:
        items:
          $ref: '#/definitions/CustomerPaymentDto'
          xml:
            name: customerPayment
        type: array
        xml:
          wrapped: true
      extranetUser:
        $ref: '#/definitions/ExtranetUserDto'
      paymentType:
        $ref: '#/definitions/PaymentPaidTypeEnum'
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      vessel:
        $ref: '#/definitions/VesselDto'
      harbour:
        $ref: '#/definitions/HarbourDto'
      agent:
        $ref: '#/definitions/BookingAgentWithLinksDto'
      seller:
        $ref: '#/definitions/VendorDto'
      bookingChannel:
        $ref: '#/definitions/BookingChannelDto'
      systemConfig:
        $ref: '#/definitions/IntegratedSystemConfigDto'
      accommodationBookings:
        items:
          $ref: '#/definitions/AccommodationBookingDetailsDto'
          xml:
            name: accommodationBooking
        type: array
        xml:
          wrapped: true
      carRentalBookings:
        items:
          $ref: '#/definitions/CarRentalBookingDetailsDto'
          xml:
            name: carRentalBooking
        type: array
        xml:
          wrapped: true
      activityBookings:
        items:
          $ref: '#/definitions/ActivityBookingDetailsDto'
          xml:
            name: activityBooking
        type: array
        xml:
          wrapped: true
      routeBookings:
        items:
          $ref: '#/definitions/RouteBookingDetailsDto'
          xml:
            name: routeBooking
        type: array
        xml:
          wrapped: true
      bookingFields:
        items:
          $ref: '#/definitions/BookingFieldDto'
          xml:
            name: bookingField
        type: array
        xml:
          wrapped: true
    xml:
      name: booking
  PersonAnswersDto:
    type: object
    properties:
      details:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
  NameValuePairDto:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  PaymentProviderDetailsDto:
    type: object
    properties:
      url:
        type: string
      supportedMethods:
        items:
          type: string
          xml:
            name: supportedMethod
        type: array
        xml:
          wrapped: true
      parameters:
        items:
          $ref: '#/definitions/PaymentProviderParam'
          xml:
            name: paymentProviderParam
        type: array
        xml:
          wrapped: true
  PaymentProviderParam:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  AffiliateDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      idNumber:
        type: string
      externalId:
        type: string
      title:
        type: string
      trackingCode:
        type: string
      flags:
        items:
          type: string
          xml:
            name: flag
        type: array
        xml:
          wrapped: true
    xml:
      name: affiliate
  TicketReference:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      productTitle:
        type: string
      productConfirmationCode:
        type: string
      ticket:
        type: string
  LightweightBookingChannelDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      title:
        type: string
      channelType:
        $ref: '#/definitions/BookingChannelType'
      showToSuppliers:
        type: boolean
  BookingChannelDto:
    type: object
    properties:
      id:
        format: int64
        type: integer
      externalId:
        type: string
      uuid:
        type: string
      title:
        type: string
      backend:
        type: boolean
      overrideVoucherHeader:
        type: boolean
      voucherName:
        type: string
      voucherPhoneNumber:
        type: string
      voucherEmailAddress:
        type: string
      voucherLogoStyle:
        type: string
      voucherWebsite:
        type: string
      voucherLogo:
        $ref: '#/definitions/PhotoDto'
      flags:
        items:
          type: string
          xml:
            name: flag
        type: array
        xml:
          wrapped: true
    xml:
      name: bookingChannel
  OnRequestSettings:
    type: object
    properties:
      responseDeadline:
        type: string
      responseCallbackUrl:
        type: string
  BookingAnswersDto:
    type: object
    properties:
      mainContactDetails:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      activityBookings:
        items:
          $ref: '#/definitions/ActivityBookingAnswersDto'
        type: array
      accommodationBookings:
        items:
          $ref: '#/definitions/AccommodationBookingAnswersDto'
        type: array
      customerInfo:
        $ref: '#/definitions/CustomerDto'
      rentalBookings:
        items:
          $ref: '#/definitions/RentalBookingAnswersDto'
        type: array
      subscribeToEmailList:
        type: boolean
      transportBookings:
        items:
          $ref: '#/definitions/TransportBookingAnswersDto'
        type: array
  ShoppingCartCheckout:
    type: object
    properties:
      uuid:
        type: string
      externalBookingReference:
        type: string
      bookingAnswers:
        $ref: '#/definitions/BookingAnswersDto'
  TransportBookingQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      routeId:
        format: int64
        type: integer
      routeTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      passengers:
        items:
          $ref: '#/definitions/PassengerQuestionsDto'
        type: array
      pickupQuestions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      dropoffQuestions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
  RentalBookingQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      rentalId:
        format: int64
        type: integer
      rentalTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      items:
        items:
          $ref: '#/definitions/ItemQuestionsDto'
        type: array
  ActivityBookingRequest:
    type: object
    properties:
      activityId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      pickupAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      dropoffAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      rateId:
        format: int64
        type: integer
      startTimeId:
        format: int64
        type: integer
      date:
        type: string
      pickup:
        type: boolean
      pickupPlaceId:
        format: int64
        type: integer
      pickupDescription:
        type: string
      dropoff:
        type: boolean
      dropoffPlaceId:
        format: int64
        type: integer
      dropoffDescription:
        type: string
      checkedIn:
        type: boolean
      note:
        type: string
      customized:
        type: boolean
      customizedTime:
        type: string
      customizedPrice:
        type: number
      onRequest:
        $ref: '#/definitions/OnRequestSettings'
      passengers:
        items:
          $ref: '#/definitions/PassengerBookingRequest'
        type: array
  PersonQuestionsDto:
    type: object
    properties:
      personId:
        format: int64
        type: integer
      details:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
  PassengerBookingRequest:
    type: object
    properties:
      pricingCategoryId:
        format: int64
        type: integer
      passengerDetails:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      extras:
        items:
          $ref: '#/definitions/ExtraBookingRequest'
        type: array
  RoomQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      roomTypeId:
        format: int64
        type: integer
      roomTypeTitle:
        type: string
      roomRateTitle:
        type: string
      startDate:
        type: string
      endDate:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      guests:
        items:
          $ref: '#/definitions/PersonQuestionsDto'
        type: array
      extras:
        items:
          $ref: '#/definitions/ExtraQuestionsDto'
        type: array
  BookingQuestionsDto:
    type: object
    properties:
      mainContactDetails:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      activityBookings:
        items:
          $ref: '#/definitions/ActivityBookingQuestionsDto'
        type: array
      accommodationBookings:
        items:
          $ref: '#/definitions/AccommodationBookingQuestionsDto'
        type: array
      rentalBookings:
        items:
          $ref: '#/definitions/RentalBookingQuestionsDto'
        type: array
      transportBookings:
        items:
          $ref: '#/definitions/TransportBookingQuestionsDto'
        type: array
  CheckoutResponse:
    type: object
    properties:
      redirectRequest:
        $ref: '#/definitions/RedirectRequest'
      dccQuote:
        $ref: '#/definitions/DccQuoteDto'
      booking:
        $ref: '#/definitions/BookingDetailsDto'
      bookingHash:
        type: string
      travelDocuments:
        $ref: '#/definitions/TravelDocuments'
  BookingConfirmation:
    type: object
    properties:
      externalBookingReference:
        type: string
      showPricesInNotification:
        type: boolean
      sendNotificationToMainContact:
        type: boolean
      transactionDetails:
        $ref: '#/definitions/TransactionDetails'
      amount:
        format: double
        type: number
      currency:
        type: string
  ActivityBookingQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      activityId:
        format: int64
        type: integer
      activityTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      passengers:
        items:
          $ref: '#/definitions/PassengerQuestionsDto'
        type: array
      pickupQuestions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      dropoffQuestions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
  PaymentMethods:
    type: object
    properties:
      allowedMethods:
        items:
          enum:
          - CARD
          - CASH
          - VOUCHER
          - RESERVE_FOR_EXTERNAL_PAYMENT
          type: string
        type: array
      cardProvider:
        $ref: '#/definitions/CardPaymentProvider'
  TokenCharge:
    type: object
    properties:
      token:
        type: string
  Checkout:
    type: object
    properties:
      options:
        items:
          $ref: '#/definitions/CheckoutOption'
        type: array
      questions:
        $ref: '#/definitions/BookingQuestionsDto'
  CardCharge:
    type: object
    properties:
      name:
        type: string
      cardNumber:
        type: string
      expiryMonth:
        format: int32
        type: integer
      expiryYear:
        format: int32
        type: integer
      cvc:
        type: string
  BookingRequest:
    type: object
    properties:
      mainContactDetails:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      activityBookings:
        items:
          $ref: '#/definitions/ActivityBookingRequest'
        type: array
      accommodationBookings:
        items:
          $ref: '#/definitions/AccommodationBookingRequest'
        type: array
      rentalBookings:
        items:
          $ref: '#/definitions/RentalBookingRequest'
        type: array
      discountPercentage:
        format: double
        type: number
      externalBookingReference:
        type: string
      labels:
        items:
          type: string
        type: array
  RentalBookingRequest:
    type: object
    properties:
      rentalId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      pickupDateAndTime:
        type: string
      dropoffDateAndTime:
        type: string
      pickupPlaceId:
        format: int64
        type: integer
      dropoffPlaceId:
        format: int64
        type: integer
      note:
        type: string
      items:
        items:
          $ref: '#/definitions/ItemBookingRequest'
        type: array
  RoomAnswersDto:
    type: object
    properties:
      roomTypeId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      guests:
        items:
          $ref: '#/definitions/PersonAnswersDto'
        type: array
      bookingId:
        format: int64
        type: integer
      extras:
        items:
          $ref: '#/definitions/ExtraAnswersDto'
        type: array
  DccQuoteDto:
    type: object
    properties:
      currency:
        type: string
      amount:
        type: number
      exchangeRate:
        type: number
      markup:
        type: number
      markupPercentage:
        type: number
      fee:
        type: number
      message:
        type: string
      formattedAmount:
        type: string
  RedirectRequest:
    type: object
    properties:
      url:
        type: string
      method:
        type: string
      parameters:
        items:
          $ref: '#/definitions/NameValuePairDto'
        type: array
  ItemAnswersDto:
    type: object
    properties:
      itemTypeId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      people:
        items:
          $ref: '#/definitions/PersonAnswersDto'
        type: array
      bookingId:
        format: int64
        type: integer
      extras:
        items:
          $ref: '#/definitions/ExtraAnswersDto'
        type: array
  CheckoutOption:
    type: object
    properties:
      type:
        enum:
        - AGENT_AFFILIATE
        - AGENT_CUSTOMER
        - AGENT_RESELLER
        - CUSTOMER_FULL_PAYMENT
        - CUSTOMER_PARTIAL_PAYMENT
        - CUSTOMER_NO_PAYMENT
        type: string
      label:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      amount:
        type: number
      currency:
        type: string
      formattedAmount:
        type: string
      partialPayment:
        type: boolean
      minPartialAmount:
        type: number
      formattedMinPartialAmount:
        type: string
      invoice:
        $ref: '#/definitions/CustomerInvoiceDto'
      paymentMethods:
        $ref: '#/definitions/PaymentMethods'
  ExtraBookingRequest:
    type: object
    properties:
      extraId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      quantity:
        format: int32
        type: integer
  PassengerAnswersDto:
    type: object
    properties:
      pricingCategoryId:
        format: int64
        type: integer
      passengerDetails:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      bookingId:
        format: int64
        type: integer
      extras:
        items:
          $ref: '#/definitions/ExtraAnswersDto'
        type: array
  RentalBookingAnswersDto:
    type: object
    properties:
      rentalId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      bookingId:
        format: int64
        type: integer
      items:
        items:
          $ref: '#/definitions/ItemAnswersDto'
        type: array
  TransactionDetails:
    type: object
    properties:
      transactionDate:
        type: string
      transactionId:
        type: string
      cardBrand:
        type: string
      last4:
        type: string
  TravelDocuments:
    type: object
    properties:
      invoice:
        type: string
      activityTickets:
        items:
          $ref: '#/definitions/TicketReference'
        type: array
      accommodationTickets:
        items:
          $ref: '#/definitions/TicketReference'
        type: array
      rentalTickets:
        items:
          $ref: '#/definitions/TicketReference'
        type: array
      transportTickets:
        items:
          $ref: '#/definitions/TicketReference'
        type: array
  ExtraAnswersDto:
    type: object
    properties:
      extraId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      bookingId:
        format: int64
        type: integer
  CardPaymentProvider:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      logo:
        type: string
      providerId:
        type: string
      providerType:
        type: string
      uti:
        type: string
      token:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
  ActivityBookingAnswersDto:
    type: object
    properties:
      activityId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      pickupAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      dropoffAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      bookingId:
        format: int64
        type: integer
      passengers:
        items:
          $ref: '#/definitions/PassengerAnswersDto'
        type: array
  ExtraQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      extraId:
        format: int64
        type: integer
      extraTitle:
        type: string
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
  PassengerQuestionsDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      pricingCategoryId:
        format: int64
        type: integer
      pricingCategoryTitle:
        type: string
      passengerDetails:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      questions:
        items:
          $ref: '#/definitions/QuestionSpecificationDto'
        type: array
      extras:
        items:
          $ref: '#/definitions/ExtraQuestionsDto'
        type: array
  CheckoutRequest:
    type: object
    properties:
      checkoutOption:
        enum:
        - AGENT_AFFILIATE
        - AGENT_CUSTOMER
        - AGENT_RESELLER
        - CUSTOMER_FULL_PAYMENT
        - CUSTOMER_PARTIAL_PAYMENT
        - CUSTOMER_NO_PAYMENT
        type: string
      paymentMethod:
        enum:
        - CARD
        - CASH
        - VOUCHER
        - RESERVE_FOR_EXTERNAL_PAYMENT
        type: string
      source:
        enum:
        - SHOPPING_CART
        - DIRECT_REQUEST
        type: string
      shoppingCart:
        $ref: '#/definitions/ShoppingCartCheckout'
      directBooking:
        $ref: '#/definitions/BookingRequest'
      sendNotificationToMainContact:
        type: boolean
      showPricesInNotification:
        type: boolean
      amount:
        format: double
        type: number
      currency:
        type: string
      uti:
        type: string
      paymentToken:
        $ref: '#/definitions/TokenCharge'
      paymentCard:
        $ref: '#/definitions/CardCharge'
      transactionDetails:
        $ref: '#/definitions/TransactionDetails'
      successUrl:
        type: string
      errorUrl:
        type: string
      cancelUrl:
        type: string
      acceptDccQuote:
        type: boolean
      providerPaymentParameters:
        type: object
        additionalProperties:
          type: string
      cardPaymentProviderAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      checkoutOptionAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
  TransportBookingAnswersDto:
    type: object
    properties:
      bookingId:
        format: int64
        type: integer
      routeId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      pickupAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      dropoffAnswers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      passengers:
        items:
          $ref: '#/definitions/PassengerAnswersDto'
        type: array
  AccommodationBookingRequest:
    type: object
    properties:
      accommodationId:
        format: int64
        type: integer
      answers:
        items:
          $ref: '#/definitions/AnswerDto'
        type: array
      travelType:
        enum:
        - BUSINESS
        - LEISURE
        - CONFERENCE
        type: string
      note:
        type: string
      rooms:
        items:
          $ref: '#/definitions/RoomBookingRequest'
        type: array
  AnswerOptionDto:
    type: object
    properties:
      value:
        type: string
      label:
        type: string
  AccommodationAvailabilitiesDto:
    type: object
    properties:
      startDate:
        type: string
      endDate:
        type: string
      accommodations:
        items:
          $ref: '#/definitions/AccommodationReport'
        type: array
  AccommodationReport:
    type: object
    properties:
      accommodation:
        $ref: '#/definitions/AccommodationDto'
      rooms:
        items:
          $ref: '#/definitions/RoomReport'
        type: array
  RoomReport:
    type: object
    properties:
      room:
        $ref: '#/definitions/RoomTypeDto'
      availabilities:
        items:
          $ref: '#/definitions/RoomAvailabilityReport'
        type: array
      minimumAvailability:
        format: int32
        type: integer
  RoomAvailabilityReport:
    type: object
    properties:
      date:
        type: string
      available:
        format: int32
        type: integer
      price:
        type: number
      ratePrices:
        items:
          $ref: '#/definitions/RatePriceReport'
        type: array
  RatePriceReport:
    type: object
    properties:
      rateId:
        format: int64
        type: integer
      price:
        type: number
      closed:
        default: false
        type: boolean
      closedForArrival:
        default: false
        type: boolean
      closedForDeparture:
        default: false
        type: boolean
  AccommodationAvailabilityReportDto:
    properties:
      availableRooms:
        type: array
        items:
          $ref: '#/definitions/RoomTypeCheckinReport'
      checkInDate:
        type: string
        format: date-time
      checkOutDate:
        type: string
        format: date-time
      nightCount:
        type: integer
        format: int32
  AccommodationDto:
    allOf:
      - $ref: '#/definitions/ProductDto'
      - properties:
          bookableExtras:
            type: array
            items:
              $ref: '#/definitions/BookableExtraDto'
          boxedAccommodationId:
            type: integer
            format: int64
          checkInHour:
            type: integer
            format: int32
          checkInMinute:
            type: integer
            format: int32
          checkOutHour:
            type: integer
            format: int32
          checkOutMinute:
            type: integer
            format: int32
          location:
            $ref: '#/definitions/LocationDto'
          rating:
            type: integer
            format: int32
          roomTypes:
            type: array
            items:
              $ref: '#/definitions/RoomTypeDto'
  AccommodationQuery:
    allOf:
      - $ref: '#/definitions/AbstractQuery'
      - properties:
          accommodationId:
            type: integer
            format: int64
          externalId:
            type: string
          excludedAccommodationIds:
            type: array
            items:
              type: integer
              format: int64
          locationFilters:
            $ref: '#/definitions/LocationFilters'
          rooms:
            type: array
            items:
              $ref: '#/definitions/RoomQuery'
          sortField:
            $ref: '#/definitions/AccommodationSortField'
          vendorId:
            type: integer
            format: int64
  AvailabilityInfoDto:
    properties:
      availableCount:
        type: integer
        format: int32
      day:
        type: string
      price:
        type: number
      ratePrices:
        type: object
        additionalProperties:
          type: number
          format: double
  AvailableRoomDto:
    properties:
      availabilities:
        type: array
        items:
          $ref: '#/definitions/AvailabilityInfoDto'
      extraPrices:
        type: object
        additionalProperties:
          type: number
      guestCounts:
        type: array
        items:
          type: integer
          format: int32
      id:
        type: integer
        format: int64
      maxBookableCount:
        type: integer
        format: int32
      rateTotalPrices:
        type: object
        additionalProperties:
          type: number
      roomType:
        $ref: '#/definitions/RoomTypeDto'
      totalPrice:
        type: number
      rateAvailability:
        type: object
        additionalProperties:
          type: integer
          format: int32
      distance:
        type: number
        format: double
  RoomTypeCheckinReport:
    properties:
      date:
        type: string
      roomTypeId:
        type: integer
        format: int64
      availableRooms:
        type: integer
        format: int32
      lowestRateUnitPrice:
        type: number
      roomRateReports:
        type: array
        items:
          $ref: '#/definitions/RoomRateCheckinReport'
      extraReports:
        type: array
        items:
          $ref: '#/definitions/RoomExtraCheckinReport'
  RoomRateCheckinReport:
    properties:
      roomRateId:
        type: integer
        format: int64
      price:
        type: number
  RoomExtraCheckinReport:
    properties:
      roomRateId:
        type: integer
        format: int64
      price:
        type: number
  BookableExtraDto:
    properties:
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      free:
        type: boolean
      id:
        type: integer
        format: int64
      included:
        type: boolean
      increasesCapacity:
        type: boolean
      information:
        type: string
      maxPerBooking:
        type: integer
        format: int32
      price:
        type: number
      pricingType:
        type: string
      pricingTypeLabel:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/QuestionDto'
      title:
        type: string
      productGroupId:
        type: integer
        format: int64
      limitByPax:
        type: boolean
  CategoryDto:
    properties:
      allowsSelectingMultipleChildren:
        type: boolean
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDto'
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      title:
        type: string
  CustomFieldDto:
    properties:
      flags:
        type: array
        items:
          type: string
      code:
        type: string
      title:
        type: string
    discriminator: type
  CustomFieldBooleanValueDto:
    allOf:
      - $ref: '#/definitions/CustomFieldDto'
      - properties:
          value:
            type: boolean
  CustomFieldDateValueDto:
    allOf:
    - $ref: '#/definitions/CustomFieldDto'
    - properties:
        value:
          type: string
          format: date-time
  CustomFieldDoubleValueDto:
    allOf:
    - $ref: '#/definitions/CustomFieldDto'
    - properties:
        value:
          type: number
          format: double
  CustomFieldIntValueDto:
    allOf:
    - $ref: '#/definitions/CustomFieldDto'
    - properties:
        value:
          type: integer
          format: int32
  CustomFieldTextValueDto:
    allOf:
    - $ref: '#/definitions/CustomFieldDto'
    - properties:
        value:
          type: string
  DerivedPhotoDto:
    properties:
      cleanUrl:
        type: string
      name:
        type: string
      url:
        type: string
  FacetFilter:
    properties:
      excluded:
        type: boolean
      name:
        type: string
      values:
        type: array
        items:
          type: string
  GeoBoundingBoxFilter:
    properties:
      bottomRight:
        $ref: '#/definitions/GeoPoint'
      topLeft:
        $ref: '#/definitions/GeoPoint'
  GeoDistanceFilter:
    properties:
      center:
        $ref: '#/definitions/GeoPoint'
      distance:
        type: string
  GeoDistanceRangeFilter:
    properties:
      center:
        $ref: '#/definitions/GeoPoint'
      fromDistance:
        type: string
      includeLower:
        type: boolean
      includeUpper:
        type: boolean
      toDistance:
        type: string
  GeoPoint:
    properties:
      lat:
        type: number
        format: double
      lng:
        type: number
        format: double
  GeoPolygonFilter:
    properties:
      points:
        type: array
        items:
          $ref: '#/definitions/GeoPoint'
  ItemDto:
    properties:
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      title:
        type: string
  LocationCodeDto:
    properties:
      coordinates:
        type: string
      country:
        type: string
      date:
        type: integer
        format: int32
      function:
        type: string
      iata:
        type: string
      id:
        type: integer
        format: int64
      location:
        type: string
      name:
        type: string
      nameWoDiacritics:
        type: string
      recentChange:
        type: string
      remarks:
        type: string
      status:
        type: string
      subdivision:
        type: string
  LocationDto:
    properties:
      address:
        type: string
      city:
        type: string
      countryCode:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      postCode:
        type: string
      zoomLevel:
        type: integer
        format: int32
  LocationFilters:
    properties:
      geoBoundingBoxFilter:
        $ref: '#/definitions/GeoBoundingBoxFilter'
      geoDistanceFilter:
        $ref: '#/definitions/GeoDistanceFilter'
      geoDistanceRangeFilter:
        $ref: '#/definitions/GeoDistanceRangeFilter'
      geoPolygonFilter:
        $ref: '#/definitions/GeoPolygonFilter'
  PhotoDto:
    properties:
      alternateText:
        type: string
      derived:
        type: array
        items:
          $ref: '#/definitions/DerivedPhotoDto'
      description:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      originalUrl:
        type: string
  PlaceDto:
    properties:
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/LocationDto'
      title:
        type: string
  QuestionDto:
    properties:
      active:
        type: boolean
      answerRequired:
        type: boolean
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      label:
        type: string
      options:
        type: string
      type:
        type: string
  RoomQuery:
    properties:
      adults:
        type: integer
        format: int32
      children:
        type: array
        items:
          type: integer
          format: int32
  RoomRateDto:
    properties:
      id:
        type: integer
        format: int64
      maxNightsStay:
        type: integer
        format: int32
      maxOccupants:
        type: integer
        format: int32
      minNightsStay:
        type: integer
        format: int32
      stayRestrictions:
        type: boolean
      stayRestrictionsAllMonths:
        type: boolean
      stayRestrictionsAllWeekdays:
        type: boolean
      stayRestrictionsMonths:
        type: array
        items:
          type: integer
          format: int32
      stayRestrictionsWeekdays:
        type: array
        items:
          type: integer
          format: int32
      title:
        type: string
      cancellationPolicy:
        $ref: '#/definitions/CancellationPolicyDto'
  RoomDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      building:
        $ref: '#/definitions/BuildingDto'
      floor:
        type: integer
        format: int32
      roomType:
        $ref: '#/definitions/LightweightRoomTypeDto'
  BuildingDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      floorsAboveGroundLevel:
        type: integer
        format: int32
      floorsBelowGroundLevel:
        type: integer
        format: int32
  RoomTypeDto:
    properties:
      accommodationId:
        type: integer
        format: int64
      accommodationTitle:
        type: string
      bunkBedCount:
        type: integer
        format: int32
      capacity:
        type: integer
        format: int32
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDto'
      code:
        type: string
      defaultRateId:
        type: integer
        format: int64
      description:
        type: string
      doubleBedCount:
        type: integer
        format: int32
      excerpt:
        type: string
      externalId:
        type: string
      extraLargeDoubleBedCount:
        type: integer
        format: int32
      extras:
        type: array
        items:
          $ref: '#/definitions/BookableExtraDto'
      flags:
        type: array
        items:
          type: string
      futonMatCount:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      internalUseOnly:
        type: boolean
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      largeDoubleBedCount:
        type: integer
        format: int32
      photos:
        type: array
        items:
          $ref: '#/definitions/PhotoDto'
      roomCount:
        type: integer
        format: int32
      roomRates:
        type: array
        items:
          $ref: '#/definitions/RoomRateDto'
      shared:
        type: boolean
      singleBedCount:
        type: integer
        format: int32
      sofaBedCount:
        type: integer
        format: int32
      tags:
        type: array
        items:
          $ref: '#/definitions/TagGroupDto'
      title:
        type: string
      vendorId:
        type: integer
        format: int64
      productGroupId:
        type: integer
        format: int64
      bookingCutoff:
        type: integer
        format: int32
  SearchResultItem:
    properties:
      baseLanguage:
        type: string
      box:
        type: boolean
      boxedProductId:
        type: integer
        format: int64
      boxedSupplierId:
        type: integer
        format: int64
      customFields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldDto'
      excerpt:
        type: string
      externalId:
        type: string
      fields:
        type: object
        additionalProperties:
          type: object
      flags:
        type: array
        items:
          type: string
      id:
        type: string
      inventoryLocal:
        type: boolean
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      keywords:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      location:
        $ref: '#/definitions/LocationDto'
      locationCode:
        $ref: '#/definitions/LocationCodeDto'
      paymentCurrencies:
        type: array
        items:
          type: string
      photos:
        type: array
        items:
          $ref: '#/definitions/PhotoDto'
      places:
        type: array
        items:
          $ref: '#/definitions/PlaceDto'
      price:
        type: number
      productGroupId:
        type: integer
        format: int64
      slug:
        type: string
      summary:
        type: string
      title:
        type: string
      vendor:
        $ref: '#/definitions/ItemDto'
      videos:
        type: array
        items:
          $ref: '#/definitions/VideoDto'
      googlePlace:
        $ref: '#/definitions/GooglePlaceDto'
      reviewRating:
        type: number
        format: double
      reviewCount:
        type: integer
        format: int64
  AbstractSearchResultsDto:
    discriminator: type
    properties:
      tagFacets:
        type: array
        items:
          $ref: '#/definitions/TermsFacetDto'
      tagFilters:
        type: array
        items:
          $ref: '#/definitions/TermFilter'
      termFacets:
        type: object
        additionalProperties:
          $ref: '#/definitions/TermsFacetDto'
      tagFacetHierarchy:
        type: array
        items:
          $ref: '#/definitions/TermsFacetHierarchy'
      tookInMillis:
        type: integer
        format: int64
      totalHits:
        type: integer
        format: int64
  SearchResultsDto:
    allOf:
      - $ref: '#/definitions/AbstractSearchResultsDto'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/SearchResultItem'
  RoomSearchResultsDto:
    allOf:
      - $ref: '#/definitions/AbstractSearchResultsDto'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/AvailableRoomDto'
  RoomsByAccommodationResultsDto:
    allOf:
      - $ref: '#/definitions/AbstractSearchResultsDto'
      - properties:
          availabilityResults:
            type: boolean
          roomsByAccommodation:
            type: array
            items:
              $ref: '#/definitions/RoomsByAccommodationDto'
  RoomsByAccommodationDto:
    properties:
      accommodation:
        $ref: '#/definitions/LightweightAccommodationDto'
      items:
        type: array
        items:
          $ref: '#/definitions/AvailableRoomDto'
  TagDto:
    properties:
      exclusive:
        type: boolean
      facetName:
        type: string
      flags:
        type: array
        items:
          type: string
      groupId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      ownerId:
        type: integer
        format: int64
      parentTagId:
        type: integer
        format: int64
      title:
        type: string
  TagGroupDto:
    properties:
      exclusive:
        type: boolean
      externalId:
        type: string
      facetName:
        type: string
      flags:
        type: array
        items:
          type: string
      group:
        type: boolean
      id:
        type: integer
        format: int64
      ownerId:
        type: integer
        format: int64
      productCategory:
        $ref: '#/definitions/ProductCategoryEnum'
      sharedWithSuppliers:
        type: boolean
      subCategory:
        $ref: '#/definitions/TagGroupSubcategoryEnum'
      tags:
        type: array
        items:
          $ref: '#/definitions/TagDto'
      title:
        type: string
  TermFilter:
    properties:
      excluded:
        type: boolean
      facetName:
        type: string
      groupTitle:
        type: string
      title:
        type: string
      value:
        type: string
  TermsFacetDto:
    discriminator: type
    properties:
      entries:
        type: array
        items:
          $ref: '#/definitions/TermsFacetEntryDto'
      flags:
        type: array
        items:
          type: string
      name:
        type: string
      sortedEntries:
        type: array
        items:
          $ref: '#/definitions/TermsFacetEntryDto'
      title:
        type: string
      multipleSelection:
        type: boolean
  TermsFacetHierarchy:
    allOf:
      - $ref: '#/definitions/TermsFacetDto'
      - properties:
          children:
            type: array
            items:
              $ref: '#/definitions/TermsFacetDto'
  TermsFacetEntryDto:
    properties:
      count:
        type: integer
        format: int64
      flags:
        type: array
        items:
          type: string
      term:
        type: string
      title:
        type: string
  TextFilter:
    properties:
      operator:
        type: string
      searchExternalId:
        type: boolean
      searchFullText:
        type: boolean
      searchKeywords:
        type: boolean
      searchTitle:
        type: boolean
      text:
        type: string
      wildcard:
        type: boolean
  VendorDto:
    discriminator: type
    properties:
      countryCode:
        type: string
      currencyCode:
        type: string
      description:
        type: string
      emailAddress:
        type: string
      id:
        type: integer
        format: int64
      invoiceIdNumber:
        type: string
      logo:
        $ref: '#/definitions/PhotoDto'
      logoStyle:
        type: string
      phoneNumber:
        type: string
      showAgentDetailsOnTicket:
        type: boolean
      showInvoiceIdOnTicket:
        type: boolean
      showPaymentsOnInvoice:
        type: boolean
      title:
        type: string
      website:
        type: string
  VideoDto:
    properties:
      cleanPreviewUrl:
        type: string
      cleanThumbnailUrl:
        type: string
      html:
        type: string
      id:
        type: integer
        format: int64
      previewUrl:
        type: string
      providerName:
        type: string
      sourceUrl:
        type: string
      thumbnailUrl:
        type: string
      title:
        type: string
  CarQuery:
    allOf:
      - $ref: '#/definitions/AbstractQuery'
      - properties:
          airConditioning:
            type: boolean
          carRentalIds:
            type: array
            items:
              type: integer
              format: int64
          carRentalSlug:
            type: string
          carTypeIds:
            type: array
            items:
              type: integer
              format: int64
          co2EmissionFilter:
            $ref: '#/definitions/NumericRangeFilter'
          driverAge:
            type: integer
            format: int32
          dropoffLocationFilters:
            $ref: '#/definitions/LocationFilters'
          dropoffLocationIds:
            type: array
            items:
              type: integer
              format: int64
          flags:
            type: array
            items:
              type: string
          fuelEconomyFilter:
            $ref: '#/definitions/NumericRangeFilter'
          luggage:
            type: integer
            format: int32
          minDoorCount:
            type: integer
            format: int32
          passengers:
            type: integer
            format: int32
          pickupLocationFilters:
            $ref: '#/definitions/LocationFilters'
          pickupLocationIds:
            type: array
            items:
              type: integer
              format: int64
          sortField:
            $ref: '#/definitions/CarSortField'
          vendorId:
            type: integer
            format: int64
  CarRentalDto:
    allOf:
      - $ref: '#/definitions/ProductDto'
      - properties:
          bookableExtras:
            type: array
            items:
              $ref: '#/definitions/BookableExtraDto'
          carTypes:
            type: array
            items:
              $ref: '#/definitions/CarTypeDto'
          defaultDropoffHour:
            type: integer
            format: int32
          defaultDropoffLocationId:
            type: integer
            format: int64
          defaultDropoffMinute:
            type: integer
            format: int32
          defaultPickupHour:
            type: integer
            format: int32
          defaultPickupLocationId:
            type: integer
            format: int64
          defaultPickupMinute:
            type: integer
            format: int32
          dropoffLocations:
            type: array
            items:
              $ref: '#/definitions/CarRentalLocationDto'
          pickupLocations:
            type: array
            items:
              $ref: '#/definitions/CarRentalLocationDto'
          pricingMode:
            $ref: '#/definitions/RentalPricingModeEnum'
  CarRentalLocationDto:
    properties:
      allDay:
        type: boolean
      closingHour:
        type: integer
        format: int32
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/LocationDto'
      openingHour:
        type: integer
        format: int32
      priceForDropoff:
        type: number
        format: double
      priceForPickup:
        type: number
        format: double
      priceForPickupAndDropoff:
        type: number
        format: double
      title:
        type: string
  CarRentalSearchResultsDto:
    properties:
      carRentals:
        type: array
        items:
          $ref: '#/definitions/CarRentalDto'
  CarSearchResultsDto:
    allOf:
      - $ref: '#/definitions/AbstractSearchResultsDto'
      - properties:
          items:
            type: array
            items:
              $ref: '#/definitions/CarTypeDto'
  CarTypeDto:
    properties:
      acrissCategory:
        type: string
      acrissCode:
        type: string
      acrissType:
        type: string
      airConditioning:
        type: boolean
      avgRentalPricePerDay:
        type: number
      baseLanguage:
        type: string
      bookingCutoff:
        type: integer
        format: int32
      carRental:
        $ref: '#/definitions/ItemDto'
      categories:
        type: array
        items:
          $ref: '#/definitions/CategoryDto'
      co2Emission:
        type: number
        format: double
      paymentCurrencies:
        type: array
        items:
          type: string
      defaultDropoffHour:
        type: integer
        format: int32
      defaultDropoffLocationId:
        type: integer
        format: int64
      defaultDropoffMinute:
        type: integer
        format: int32
      defaultPickupHour:
        type: integer
        format: int32
      defaultPickupLocationId:
        type: integer
        format: int64
      defaultPickupMinute:
        type: integer
        format: int32
      deliveryFee:
        type: number
      description:
        type: string
      doorCount:
        type: integer
        format: int32
      driveType:
        type: string
      dropoffLocations:
        type: array
        items:
          $ref: '#/definitions/CarRentalLocationDto'
      exampleCarModel:
        type: string
      excerpt:
        type: string
      externalId:
        type: string
      extras:
        type: array
        items:
          $ref: '#/definitions/BookableExtraDto'
      flags:
        type: array
        items:
          type: string
      fuelEconomy:
        type: number
        format: double
      fuelType:
        type: string
      id:
        type: integer
        format: int64
      includedExtrasPrice:
        type: number
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      keywords:
        type: array
        items:
          type: string
      languages:
        type: array
        items:
          type: string
      luggageCapacity:
        type: integer
        format: int32
      maxBookableCount:
        type: integer
        format: int32
      maxRentalHours:
        type: integer
        format: int32
      minDriverAge:
        type: integer
        format: int32
      minRentalHours:
        type: integer
        format: int32
      passengerCapacity:
        type: integer
        format: int32
      photos:
        type: array
        items:
          $ref: '#/definitions/PhotoDto'
      pickupLocations:
        type: array
        items:
          $ref: '#/definitions/CarRentalLocationDto'
      productGroupId:
        type: integer
        format: int64
      rentalPrice:
        type: number
      rentalRestrictions:
        type: boolean
      summary:
        type: string
      tagGroups:
        type: array
        items:
          $ref: '#/definitions/TagGroupDto'
      title:
        type: string
      totalPrice:
        type: number
      transmissionType:
        type: string
      vendor:
        $ref: '#/definitions/ItemDto'
  NumericRangeFilter:
    properties:
      excluded:
        type: boolean
      from:
        type: integer
        format: int32
      includeLower:
        type: boolean
      includeUpper:
        type: boolean
      to:
        type: integer
        format: int32
  CurrencyDto:
    properties:
      code:
        type: string
      payment:
        type: boolean
      rate:
        type: number
        format: double
  ActivityAvailabilityReportDto:
    properties:
      availabilities:
        type: array
        items:
          $ref: '#/definitions/ActivityAvailabilityDto'
  ActivityAvailabilityDto:
    properties:
      activityId:
        type: integer
        format: int64
      activityOwnerId:
        type: integer
        format: int64
      availabilityCount:
        type: integer
        format: int32
      bookedParticipants:
        type: integer
        format: int32
      comboActivity:
        type: boolean
      comboStartTimes:
        type: array
        items:
          $ref: '#/definitions/ComboStartTimeInfoDto'
      date:
        type: string
        format: date-time
      defaultPrice:
        type: number
      dropoffPrice:
        type: number
      dropoffPricesByCategory:
        type: object
        additionalProperties:
          type: number
          format: double
      extraPrices:
        type: object
        additionalProperties:
          type: number
          format: double
      flags:
        type: array
        items:
          type: string
      flexible:
        type: boolean
      id:
        type: string
      localizedDate:
        type: string
      minParticipants:
        type: integer
        format: int32
      pickupAllotment:
        type: boolean
      pickupAvailabilityCount:
        type: integer
        format: int32
      pickupPrice:
        type: number
      pickupPricesByCategory:
        type: object
        additionalProperties:
          type: number
          format: double
      pricesByCategory:
        type: object
        additionalProperties:
          type: number
          format: double
      soldOut:
        type: boolean
      startTime:
        type: string
      startTimeId:
        type: integer
        format: int64
      unavailable:
        type: boolean
      unlimitedAvailability:
        type: boolean
      guidedLanguages:
        type: array
        items:
          type: string
      defaultRateId:
        type: integer
        format: int64
      rates:
        type: array
        items:
          $ref: '#/definitions/ActivityRateDto'
      pricesByRate:
        type: array
        items:
          $ref: '#/definitions/ActivityRatePrices'
      productGroupId:
        type: integer
        format: int64
      minParticipantsToBookNow:
        type: integer
        format: int32
  ActivityRatePrices:
    properties:
      activityRateId:
        type: integer
        format: int64
      pricePerBooking:
        $ref: '#/definitions/SimpleMoney'
      pricePerCategoryUnit:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
      pickupPrice:
        $ref: '#/definitions/SimpleMoney'
      pickupPricePerCategoryUnit:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
      dropoffPrice:
        $ref: '#/definitions/SimpleMoney'
      dropoffPricePerCategoryUnit:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
      extraPricePerUnit:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
      extraPricePerCategoryUnit:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
  PriceByItem:
    properties:
      id:
        type: integer
        format: int64
      amount:
        $ref: '#/definitions/SimpleMoney'
      prices:
        type: array
        items:
          $ref: '#/definitions/PriceByItem'
  ProductBookingDto:
    discriminator: type
    properties:
      id:
        type: integer
        format: int64
      productConfirmationCode:
        type: string
      creationDate:
        type: string
        format: date-time
      lastModifiedDate:
        type: string
        format: date-time
      customerUuid:
        type: string
      bookingStatus:
        type: string
      includedOnCustomerInvoice:
        type: boolean
  ActivityBookingDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDto'
      - properties:
          activity:
            $ref: '#/definitions/ProductInfoDto'
          activityPrice:
            type: number
          date:
            type: string
            format: date-time
          dropoff:
            type: boolean
          dropoffPlace:
            $ref: '#/definitions/PickupPlaceDto'
          dropoffPlaceDescription:
            type: string
          dropoffPrice:
            type: number
          extraBookings:
            type: array
            items:
              $ref: '#/definitions/ExtraBookingDto'
          extrasPrice:
            type: number
          firstLineItemDiscount:
            type: number
            format: double
          flexible:
            type: boolean
          maxBookableCount:
            type: integer
            format: int32
          pickup:
            type: boolean
          pickupPlace:
            $ref: '#/definitions/PickupPlaceDto'
          pickupPlaceDescription:
            type: string
          pickupPlaceRoomNumber:
            type: string
          pickupPrice:
            type: number
          pricingCategoryBookings:
            type: array
            items:
              $ref: '#/definitions/ActivityPricingCategoryBookingDto'
          productCategory:
            type: string
          rate:
            $ref: '#/definitions/ActivityRateDto'
          selectedFlexDayOption:
            type: string
          startTime:
            $ref: '#/definitions/StartTimeDto'
          totalPrice:
            type: number
          unlimitedAvailability:
            type: boolean
          vendor:
            $ref: '#/definitions/VendorDto'
  ActivityPriceListDto:
    type: object
    properties:
      activityId:
        format: int64
        type: integer
      pricesByDateRange:
        items:
          $ref: '#/definitions/ActivityPriceListDateRange'
        type: array
  CategoryPriceDto:
    type: object
    properties:
      pricingCategoryId:
        format: int64
        type: integer
      title:
        type: string
      ticketCategory:
        $ref: '#/definitions/TicketCategoryEnum'
      price:
        $ref: '#/definitions/PriceDto'
      pickupPrice:
        $ref: '#/definitions/PriceDto'
      dropoffPrice:
        $ref: '#/definitions/PriceDto'
      extras:
        items:
          $ref: '#/definitions/ExtraPriceDto'
        type: array
  ActivityRatePricesDto:
    type: object
    properties:
      rateId:
        format: int64
        type: integer
      title:
        type: string
      price:
        $ref: '#/definitions/PriceDto'
      passengers:
        items:
          $ref: '#/definitions/CategoryPriceDto'
        type: array
      pickupPrice:
        $ref: '#/definitions/PriceDto'
      dropoffPrice:
        $ref: '#/definitions/PriceDto'
      extras:
        items:
          $ref: '#/definitions/ExtraPriceDto'
        type: array
  ActivityPriceListDateRange:
    type: object
    properties:
      from:
        type: string
      to:
        type: string
      rates:
        items:
          $ref: '#/definitions/ActivityRatePricesDto'
        type: array
  PriceDto:
    type: object
    properties:
      currency:
        type: string
      amount:
        format: double
        type: number
      ofWhichTax:
        format: double
        type: number
      priceNotFound:
        type: boolean
  ExtraPriceDto:
    type: object
    properties:
      extraId:
        format: int64
        type: integer
      title:
        type: string
      price:
        $ref: '#/definitions/PriceDto'
  GooglePlaceDto:
    properties:
      countryCode:
        type: string
      country:
        type: string
      cityCode:
        type: string
      city:
        type: string
      geoLocationCenter:
        $ref: '#/definitions/GeoPoint'
      id:
        type: integer
        format: int64
  ActivityDto:
    allOf:
      - $ref: '#/definitions/ProductDto'
      - properties:
          activityType:
            $ref: '#/definitions/ActivityType'
            description: 'Specifies the type of the activity.'
          allowCustomizedBookings:
            type: boolean
          privateActivity:
            type: boolean
          bookingType:
            $ref: '#/definitions/ActivityBookingType'
            description: 'Specifies how the activity is booked: as a pass, date based, or date and time based.'
          scheduleType:
            $ref: '#/definitions/ActivityScheduleType'
            description: 'Specifies how activity start times are scheduled. Only used if bookingType != PASS.'
          capacityType:
            $ref: '#/definitions/ActivityCapacityType'
            description: 'Specifies whether capacity is limited, free sell, or on request.'
          passExpiryType:
            $ref: '#/definitions/PassExpiryType'
            description: 'Only used if bookingType == PASS. Specifies how the pass expires after purchase.'
          fixedPassExpiryDate:
            type: string
            format: date
          meetingType:
            $ref: '#/definitions/ActivityMeetingType'
            description: 'Describes how passengers meet at the beginning of a tour/activity.'
          passCapacity:
            type: integer
            format: int32
            description: 'Only used if bookingType == PASS and capacityType == LIMITED. Since passes are not date based, this is simply the global capacity for selling the pass: specifies how many total passes can be sold.'
          passesAvailable:
            type: integer
            format: int32
            description: 'Only used if bookingType == PASS and capacityType == LIMITED. Specifies how many passes are currently available for booking.'
          passValidForDays:
            type: integer
            format: int32
          dressCode:
            type: boolean
            description: 'Specifies if there is a particular dress code that the participants need to adhere to. The type of dress code should be described in text items.'
          passportRequired:
            type: boolean
            description: 'Whether passenger needs to bring their passport for this activity.'
          ticketPerPerson:
            type: boolean
            description: 'Whether ticket is generated per person or per booking.'
          supportedAccessibilityTypes:
            type: array
            description: 'Specifies whether the activity is suitable for individuals with accessibility issues.'
            items:
              $ref: '#/definitions/AccessibilityType'
          startPoints:
            type: array
            description: 'Only relevant if meetingType == MEET_ON_LOCATION or MEET_ON_LOCATION_OR_PICK_UP. List of all places where this activity can start or be joined.'
            items:
              $ref: '#/definitions/Place'
          guidanceTypes:
            type: array
            description: 'Specifies the types of guidance on offer, along with what languages each is offered in.'
            items:
              $ref: '#/definitions/Guidance'
          inventoryLocal:
            type: boolean
          inventorySupportsPricing:
            type: boolean
          inventorySupportsAvailability:
            type: boolean
          activityCategories:
            type: array
            description: 'A list of categories that the tour/activity/attraction falls into.'
            items:
              $ref: '#/definitions/ActivityCategory'
          activityAttributes:
            type: array
            description: 'Attributes that describe the tour/activity/attraction.'
            items:
              $ref: '#/definitions/ActivityAttribute'
          agendaItems:
            type: array
            description: 'An optional list of agenda / itinerary items for this tour/activity.'
            items:
              $ref: '#/definitions/AgendaItemDto'
          knowBeforeYouGoItems:
            items:
              enum:
              - STROLLER_OR_PRAM_ACCESSIBLE
              - WHEELCHAIR_ACCESSIBLE
              - LIMITED_MOBILITY_ACCESSIBLE
              - LIMITED_SIGHT_ACCESSIBLE
              - ANIMALS_OR_PETS_ALLOWED
              - PUBLIC_TRANSPORTATION_NEARBY
              - INFANT_SEATS_AVAILABLE
              - INFANTS_MUST_SIT_ON_LAPS
              - PASSPORT_REQUIRED
              - DRESS_CODE
              type: string
            type: array
          attention:
            type: string
          bookableExtras:
            type: array
            description: 'A list of extras available for this product. Note that not all of these extras may be available for all bookable items. For example, different rates may offer different extras.'
            items:
              $ref: '#/definitions/BookableExtraDto'
          bookingCutoffDays:
            type: integer
            format: int32
            description: 'The number of days before the activity when we stop accepting bookings.'
          bookingCutoffHours:
            type: integer
            format: int32
            description: 'The number of hours before the activity when we stop accepting bookings.'
          bookingCutoffMinutes:
            type: integer
            format: int32
            description: 'The number of minutes before the activity when we stop accepting bookings.'
          bookingCutoffWeeks:
            type: integer
            format: int32
            description: 'The number of weeks before the activity when we stop accepting bookings.'
          bookingQuestions:
            type: array
            items:
              $ref: '#/definitions/ActivityBookingQuestionDto'
          boxedActivityId:
            type: integer
            format: int64
            description: 'If this is a box, then this field holds the ID of the activity inside the box.'
          comboActivity:
            type: boolean
            description: 'Specifies whether this is a combo activity.'
          comboParts:
            type: array
            items:
              $ref: '#/definitions/ActivityOverviewItem'
          customDropoffAllowed:
            type: boolean
            description: 'Only relevant if dropoffService is TRUE. Specifies whether the customer should be allowed to enter their drop off place in free text.'
          customFields:
            type: array
            items:
              $ref: '#/definitions/CustomFieldDto'
          customPickupAllowed:
            type: boolean
            description: 'Only used if meetingType != MEET_ON_LOCATION. Specifies whether the customer should be allowed to enter their pick up place in free text.'
          dayBasedAvailability:
            type: boolean
            description: 'Deprecated.'
          dayOptions:
            type: array
            items:
              type: string
            description: 'Deprecated.'
          difficultyLevel:
            type: string
            description: 'Specifies how physically demanding this tour/activity is.'
          displaySettings:
            $ref: '#/definitions/ActivityDisplaySettingsDto'
          dropoffFlags:
            type: array
            items:
              type: string
          dropoffPlaceGroups:
            type: array
            items:
              $ref: '#/definitions/PlaceGroupDto'
          dropoffPricingType:
            $ref: '#/definitions/PickupPricingTypeEnum'
            description: 'Deprecated. Pricing type for drop off is now specified in the rate.'
          dropoffService:
            type: boolean
            description: 'Specifies whether this activity offers drop off service.'
          duration:
            type: integer
            format: int32
            description: 'Deprecated. Use duration minutes, hours, days and weeks instead.'
          durationDays:
            type: integer
            format: int32
            description: 'Duration in days. Total duration is calculated by summing the duration in minutes, hours, days, weeks.'
          durationHours:
            type: integer
            format: int32
            description: 'Duration in hours. Total duration is calculated by summing the duration in minutes, hours, days, weeks.'
          durationMinutes:
            type: integer
            format: int32
            description: 'Duration in minutes. Total duration is calculated by summing the duration in minutes, hours, days, weeks.'
          durationType:
            type: string
            description: 'Deprecated. Use duration minutes, hours, days and weeks instead.'
          durationWeeks:
            type: integer
            format: int32
            description: 'Duration in weeks. Total duration is calculated by summing the duration in minutes, hours, days, weeks.'
          durationText:
            type: string
          inclusions:
            items:
              enum:
              - ENTRY_OR_ADMISSION_FEE
              - FUEL_SURCHARGE
              - LANDING_AND_FACILITY_FEES
              - PARKING_FEES
              - ENTRY_TAX
              - DEPARTURE_TAX
              - NATIONAL_PARK_ENTRANCE_FEE
              - GOODS_AND_SERVICES_TAX
              - TIP_OR_GRATUITY
              - FOOD_AND_DRINKS
              type: string
            type: array
          included:
            type: string
            description: 'Optional text describing what is included when you book this product. May contain HTML markup.'
          exclusions:
            items:
              enum:
              - ENTRY_OR_ADMISSION_FEE
              - FUEL_SURCHARGE
              - LANDING_AND_FACILITY_FEES
              - PARKING_FEES
              - ENTRY_TAX
              - DEPARTURE_TAX
              - NATIONAL_PARK_ENTRANCE_FEE
              - GOODS_AND_SERVICES_TAX
              - TIP_OR_GRATUITY
              - FOOD_AND_DRINKS
              type: string
            type: array
          excluded:
            type: string
            description: 'Optional text describing what is excluded when you book this product. May contain HTML markup.'
          locationCode:
            $ref: '#/definitions/LocationCodeDto'
            description: 'The city that represents the main location for this activity. Specified as a location from the United Nations Code for Trade and Transport Locations (UN/LOCODE).'
          minAge:
            type: integer
            format: int32
            description: 'Represents the age limit for the activity, if any.'
          nextDefaultPrice:
            type: number
            description: 'The price for 1 person in the default category, assuming the future departure date nearest in time to the current time.'
          nextDefaultPriceMoney:
            $ref: '#/definitions/SimpleMoney'
          noPickupMsg:
            type: string
          passengerFields:
            type: array
            items:
              $ref: '#/definitions/CustomerFieldReferenceDto'
          pickupActivityId:
            type: integer
            format: int64
          pickupAllotment:
            type: boolean
            description: 'Whether pick up has separate capacity from the activity (for example, activity can take 60 pax but the pick up bus can only take 30).'
          pickupAllotmentType:
            type: string
            enum:
            - NO_ALLOTMENT
            - USE_ALLOTMENT
            - USE_COMBO_ALLOTMENT
          pickupFlags:
            type: array
            items:
              type: string
          pickupMinutesBefore:
            type: integer
            format: int32
            description: 'Specifies how many minutes before departure the pick up service starts.'
          pickupPlaceGroups:
            type: array
            items:
              $ref: '#/definitions/PlaceGroupDto'
          pickupPricingType:
            $ref: '#/definitions/PickupPricingTypeEnum'
            description: 'Deprecated. Pick up pricing is now specified in the rate.'
          pickupService:
            type: boolean
            description: 'Deprecated. Pick up service is now specified in meetingType.'
          pricingCategories:
            type: array
            description: 'A list of all pricing categories offered by this product.'
            items:
              $ref: '#/definitions/PricingCategoryDto'
          requirements:
            type: string
            description: 'A text describing what you need to bring for this activity. May contain HTML.'
          route:
            $ref: '#/definitions/ActivityRouteDto'
            description: 'Optional travel directions that show the start point, end point, and any waypoints in between.'
          requestDeadlineMinutes:
            type: integer
            format: int32
          requestDeadlineHours:
            type: integer
            format: int32
          requestDeadlineDays:
            type: integer
            format: int32
          requestDeadlineWeeks:
            type: integer
            format: int32
          seasonAllYear:
            type: boolean
            description: 'Deprecated.'
          seasonEndDate:
            type: integer
            format: int32
            description: 'Deprecated.'
          seasonEndMonth:
            type: integer
            format: int32
            description: 'Deprecated.'
          seasonStartDate:
            type: integer
            format: int32
            description: 'Deprecated.'
          seasonStartMonth:
            type: integer
            format: int32
            description: 'Deprecated.'
          selectFromDayOptions:
            type: boolean
            description: 'Deprecated.'
          showGlobalPickupMsg:
            type: boolean
          showNoPickupMsg:
            type: boolean
          startTimes:
            type: array
            description: 'Only used if bookingType == DATE_AND_TIME. A list of scheduled start times for this tour/activity.'
            items:
              $ref: '#/definitions/StartTimeDto'
          ticketMsg:
            type: string
          useComponentPickupAllotments:
            type: boolean
          useSameAsPickUpPlaces:
            type: boolean
          weekdays:
            type: array
            items:
              $ref: '#/definitions/WeekdayDto'
          defaultRateId:
            type: integer
            format: int64
            description: 'The ID of the default rate for this activity.'
          rates:
            type: array
            description: 'A list of all rates offered by the product.'
            items:
              $ref: '#/definitions/ActivityRateDto'
          hasOpeningHours:
            type: boolean
            description: 'Specifies whether this product has specific opening hours.'
          defaultOpeningHours:
            $ref: '#/definitions/OpeningHours'
            description: 'Only used if hasOpeningHours == true. The default opening hours by weekday. These may be overridden by seasonal opening hours.'
          seasonalOpeningHours:
            type: array
            description: 'Optional seasonal opening hours. If date falls within the season then this will override the default opening hours.'
            items:
              $ref: '#/definitions/SeasonalOpeningHours'
          googlePlace:
            $ref: '#/definitions/GooglePlaceDto'
          hasBoxes:
            type: boolean
  ActivityOverviewItem:
    properties:
      id:
        type: integer
        format: int64
      externalId:
        type: string
      title:
        type: string
      excerpt:
        type: string
      inventoryLocal:
        type: boolean
      comboActivity:
        type: boolean
      box:
        type: boolean
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      published:
        type: boolean
      lastPublished:
        type: string
      publishedOutOfDate:
        type: boolean
      timeZone:
        type: string
      baseLanguage:
        type: string
      languages:
        type: array
        items:
          type: string
      privateActivity:
        type: boolean
      activityType:
        $ref: '#/definitions/ActivityType'
      bookingType:
        $ref: '#/definitions/ActivityBookingType'
      capacityType:
        $ref: '#/definitions/ActivityCapacityType'
  AbstractBookingQuestionDto:
    properties:
      id:
        type: integer
        format: int64
      personalData:
        type: boolean
      questionCode:
        type: string
      label:
        type: string
      help:
        type: string
      placeholder:
        type: string
      required:
        type: boolean
      defaultValue:
        type: string
      dataType:
        $ref: '#/definitions/QuestionDataTypeEnum'
      dataFormat:
        $ref: '#/definitions/QuestionDataFormatEnum'
      pattern:
        type: string
      selectFromOptions:
        type: boolean
      selectMultiple:
        type: boolean
      options:
        type: array
        items:
          $ref: '#/definitions/NameValuePairDto'
      flags:
        type: array
        items:
          type: string
  ActivityBookingQuestionDto:
    allOf:
      - $ref: '#/definitions/AbstractBookingQuestionDto'
      - properties:
          context:
              $ref: '#/definitions/ActivityQuestionContextEnum'
          pricingCategoryTriggerSelection:
              $ref: '#/definitions/QuestionTriggerSelectionTypeEnum'
          pricingCategoryTriggers:
            type: array
            items:
              type: integer
              format: int64
          rateTriggerSelection:
              $ref: '#/definitions/QuestionTriggerSelectionTypeEnum'
          rateTriggers:
            type: array
            items:
              type: integer
              format: int64
          extraTriggerSelection:
              $ref: '#/definitions/QuestionTriggerSelectionTypeEnum'
          extraTriggers:
            type: array
            items:
              type: integer
              format: int64
  ActivityDisplaySettingsDto:
    properties:
      showPickupPlaces:
        type: boolean
      showRouteMap:
        type: boolean
      selectRateBasedOnStartTime:
        type: boolean
      customFields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldDto'
  OpeningHours:
    properties:
      id:
        type: integer
        format: int64
      monday:
        $ref: '#/definitions/OpeningHoursWeekday'
      tuesday:
        $ref: '#/definitions/OpeningHoursWeekday'
      wednesday:
        $ref: '#/definitions/OpeningHoursWeekday'
      thursday:
        $ref: '#/definitions/OpeningHoursWeekday'
      friday:
        $ref: '#/definitions/OpeningHoursWeekday'
      saturday:
        $ref: '#/definitions/OpeningHoursWeekday'
      sunday:
        $ref: '#/definitions/OpeningHoursWeekday'
  SeasonalOpeningHours:
    properties:
      id:
        type: integer
        format: int64
      monday:
        $ref: '#/definitions/OpeningHoursWeekday'
      tuesday:
        $ref: '#/definitions/OpeningHoursWeekday'
      wednesday:
        $ref: '#/definitions/OpeningHoursWeekday'
      thursday:
        $ref: '#/definitions/OpeningHoursWeekday'
      friday:
        $ref: '#/definitions/OpeningHoursWeekday'
      saturday:
        $ref: '#/definitions/OpeningHoursWeekday'
      sunday:
        $ref: '#/definitions/OpeningHoursWeekday'
      startMonth:
        type: integer
        format: int32
      startDay:
        type: integer
        format: int32
      endMonth:
        type: integer
        format: int32
      endDay:
        type: integer
        format: int32
  OpeningHoursWeekday:
    properties:
      id:
        type: integer
        format: int64
      open24Hours:
        type: boolean
      timeIntervals:
        type: array
        items:
          $ref: '#/definitions/OpeningHoursTimeInterval'
  OpeningHoursTimeInterval:
    properties:
      openFrom:
        type: string
      openForHours:
        type: integer
        format: int32
      openForMinutes:
        type: integer
        format: int32
      frequency:
        $ref: '#/definitions/Duration'
  Duration:
    properties:
      minutes:
        type: integer
        format: int32
      hours:
        type: integer
        format: int32
      days:
        type: integer
        format: int32
      weeks:
        type: integer
        format: int32
  ActivityRateDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      index:
        type: integer
        format: int32
      rateCode:
        type: string
      pricedPerPerson:
        type: boolean
      minPerBooking:
        type: integer
        format: int32
      maxPerBooking:
        type: integer
        format: int32
      cancellationPolicy:
        $ref: '#/definitions/CancellationPolicyDto'
      passValidForDays:
        type: integer
        format: int32
      fixedPassExpiryDate:
        type: string
        format: date-time
      pickupSelectionType:
        $ref: '#/definitions/AddonSelectionType'
      pickupPricingType:
        $ref: '#/definitions/AddonPricingType'
      pickupPricedPerPerson:
        type: boolean
      dropoffSelectionType:
        $ref: '#/definitions/AddonSelectionType'
      dropoffPricingType:
        $ref: '#/definitions/AddonPricingType'
      dropoffPricedPerPerson:
        type: boolean
      startTimeIds:
        type: array
        items:
          type: integer
          format: int64
      pricingCategoryIds:
        type: array
        items:
          type: integer
          format: int64
      extraConfigs:
        type: array
        items:
          $ref: '#/definitions/ActivityRateExtraConfig'
  ActivityRateExtraConfig:
    properties:
      id:
        type: integer
        format: int64
      activityExtraId:
        type: integer
        format: int64
      selectionType:
        $ref: '#/definitions/ExtraSelectionType'
      pricingType:
        $ref: '#/definitions/AddonPricingType'
      pricedPerPerson:
        type: boolean
  ActivityPlacesDto:
    properties:
      dropoffPlaces:
        type: array
        items:
          $ref: '#/definitions/PickupPlaceDto'
      pickupPlaces:
        type: array
        items:
          $ref: '#/definitions/PickupPlaceDto'
  ActivityPricingCategoryBookingDto:
    properties:
      age:
        type: integer
        format: int32
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      barcode:
        $ref: '#/definitions/BarcodeValueDto'
      bookedDropoffPrice:
        type: number
      bookedPickupPrice:
        type: number
      bookedPrice:
        type: number
      bookedTitle:
        type: string
      bookingAnswers:
        type: array
        items:
          $ref: '#/definitions/AnswerDetails'
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingDetailsDto'
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      leadPassenger:
        type: boolean
      passengerInfo:
        $ref: '#/definitions/CustomerDto'
      pricingCategory:
        $ref: '#/definitions/PricingCategoryDto'
      pricingCategoryId:
        type: integer
        format: int64
  AbstractQuery:
    discriminator: type
    properties:
      dateFormats:
        type: array
        items:
          type: string
      endDate:
        type: string
      excludeBoxes:
        type: boolean
      excludedIds:
        type: array
        items:
          type: integer
          format: int64
      includedIds:
        type: array
        items:
          type: integer
          format: int64
      externalId:
        type: string
      facetFilters:
        type: array
        items:
          $ref: '#/definitions/FacetFilter'
      page:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      publishedSince:
        type: string
      sortOrder:
        type: string
      startDate:
        type: string
      startPointLocationFilters:
        $ref: '#/definitions/LocationFilters'
      textFilter:
        $ref: '#/definitions/TextFilter'
      useLanguageForTranslationOnly:
        type: boolean
  ActivityQuery:
    allOf:
      - $ref: '#/definitions/AbstractQuery'
      - properties:
          agendaLocationFilters:
            $ref: '#/definitions/LocationFilters'
          comboActivity:
            type: boolean
          excludeOnRequest:
            type: boolean
          participants:
            type: integer
            format: int32
          participantsByAge:
            type: array
            items:
              type: integer
              format: int32
          sortField:
            $ref: '#/definitions/ActivitySortField'
          vendorId:
            type: integer
            format: int64
  ActivityRouteDto:
    properties:
      center:
        $ref: '#/definitions/GeoPoint'
      end:
        $ref: '#/definitions/GeoPoint'
      mapZoomLevel:
        type: integer
        format: int32
      sameStartEnd:
        type: boolean
      start:
        $ref: '#/definitions/GeoPoint'
      waypoints:
        type: array
        items:
          $ref: '#/definitions/GeoPoint'
  AgendaItemDto:
    properties:
      body:
        type: string
      excerpt:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      index:
        type: integer
        format: int32
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      photos:
        type: array
        items:
          $ref: '#/definitions/PhotoDto'
      place:
        $ref: '#/definitions/PlaceDto'
      possibleStartPoint:
        type: boolean
      title:
        type: string
      day:
        type: integer
        format: int32
  BookingAnswerDto:
    properties:
      answer:
        type: string
      group:
        type: string
      id:
        type: integer
        format: int64
      question:
        type: string
      type:
        type: string
  BookingAnswerGroupDto:
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerDto'
      group:
        type: string
      name:
        type: string
      qandA:
        type: array
        items:
          $ref: '#/definitions/QuestionAnswerPairDto'
      questionsAndAnswers:
        type: array
        items:
          $ref: '#/definitions/QuestionAnswerPairDto'
  BookingAnswerWithIdDto:
    properties:
      answer:
        type: string
      flags:
        type: array
        items:
          type: string
      group:
        type: string
      id:
        type: integer
        format: int64
      question:
        type: string
      questionId:
        type: integer
        format: int64
      type:
        type: string
  BookingItemInfoDto:
    discriminator: type
    properties:
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      price:
        type: number
      title:
        type: string
  BookingChannelItemInfoDto:
    allOf:
      - $ref: '#/definitions/BookingItemInfoDto'
      - properties:
          channelType:
            $ref: '#/definitions/BookingChannelType'
  ComboStartTimeInfoDto:
    properties:
      id:
        type: integer
        format: int64
      targetActivityId:
        type: integer
        format: int64
      targetStartTimeId:
        type: integer
        format: int64
  ExtraBookingDetailsDto:
    properties:
      title:
        type: string
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      bookableExtra:
        $ref: '#/definitions/BookableExtraDto'
      extra:
        $ref: '#/definitions/BookableExtraDto'
      groupedAnswers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingAnswers:
        type: array
        items:
          $ref: '#/definitions/AnswerDetails'
      id:
        type: integer
        format: int64
      bookingId:
        type: integer
        format: int64
      unitCount:
        type: integer
        format: int32
  ExtraBookingDto:
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      description:
        type: string
      extra:
        $ref: '#/definitions/BookingItemInfoDto'
      free:
        type: boolean
      id:
        type: integer
        format: int64
      included:
        type: boolean
      pricingType:
        type: string
      pricingTypeLabel:
        type: string
      unitCount:
        type: integer
        format: int32
  PickupPlaceDto:
    properties:
      askForRoomNumber:
        type: boolean
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/LocationDto'
      title:
        type: string
      type:
        $ref: '#/definitions/PlaceTypeEnum'
  PlaceGroupDto:
    properties:
      id:
        type: integer
        format: int64
      active:
        type: boolean
      title:
        type: string
      excludedFlags:
        type: string
      includedFlags:
        type: string
      excludedPlaces:
        type: array
        items:
          $ref: '#/definitions/PickupPlaceDto'
      includedPlaces:
        type: array
        items:
          $ref: '#/definitions/PickupPlaceDto'
      inclusionType:
        $ref: '#/definitions/PlaceInclusionTypeEnum'
      exclusionType:
        $ref: '#/definitions/PlaceExclusionTypeEnum'
      places:
        type: array
        items:
          $ref: '#/definitions/PickupPlaceDto'
  ProductPricingCategoryDto:
    properties:
      id:
        type: integer
        format: int64
      index:
        type: integer
        format: int32
      pricingCategory:
        $ref: '#/definitions/PricingCategoryDto'
  PricingCategoryDto:
    properties:
      ticketCategory:
        $ref: '#/definitions/TicketCategoryEnum'
      ageQualified:
        type: boolean
      defaultCategory:
        type: boolean
      dependent:
        type: boolean
      flags:
        type: array
        items:
          type: string
      fullTitle:
        type: string
      id:
        type: integer
        format: int64
      internalUseOnly:
        type: boolean
      masterCategoryId:
        type: integer
        format: int64
      maxAge:
        type: integer
        format: int32
      maxDependentSum:
        type: integer
        format: int32
      maxPerMaster:
        type: integer
        format: int32
      minAge:
        type: integer
        format: int32
      sumDependentCategories:
        type: boolean
      title:
        type: string
      occupancy:
        type: integer
        format: int32
  ProductInfoDto:
    properties:
      cancellationPolicy:
        $ref: '#/definitions/CancellationPolicyDto'
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      price:
        type: number
      productCategory:
        $ref: '#/definitions/ProductCategoryEnum'
      slug:
        type: string
      title:
        type: string
      vendor:
        $ref: '#/definitions/VendorDto'
  QuestionAnswerPairDto:
    properties:
      answer:
        $ref: '#/definitions/BookingAnswerWithIdDto'
      answerAsString:
        type: string
      question:
        $ref: '#/definitions/QuestionDto'
      questionAsString:
        type: string
  StartTimeDto:
    properties:
      duration:
        type: integer
        format: int32
      durationDays:
        type: integer
        format: int32
      durationHours:
        type: integer
        format: int32
      durationMinutes:
        type: integer
        format: int32
      durationType:
        type: string
      durationWeeks:
        type: integer
        format: int32
      flags:
        type: array
        items:
          type: string
      hour:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      minute:
        type: integer
        format: int32
      overrideTimeWhenPickup:
        type: boolean
      pickupHour:
        type: integer
        format: int32
      pickupMinute:
        type: integer
        format: int32
  WeekdayDto:
    properties:
      index:
        type: integer
        format: int32
      name:
        type: string
  HarbourDto:
    properties:
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      pickupPlace:
        $ref: '#/definitions/PickupPlaceDto'
      productListId:
        type: integer
        format: int64
      title:
        type: string
  StopoverDto:
    properties:
      arrivalDate:
        type: string
        format: date-time
      departureDate:
        type: string
        format: date-time
      harbourId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
  VesselDto:
    properties:
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      stopovers:
        type: array
        items:
          $ref: '#/definitions/StopoverDto'
      title:
        type: string
  AccommodationBookingDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDto'
      - properties:
          accommodation:
            $ref: '#/definitions/ProductInfoDto'
          allotment:
            $ref: '#/definitions/AllotmentDto'
          endDate:
            type: string
            format: date-time
          firstStartDate:
            type: string
            format: date-time
          includedOnCustomerInvoice:
            type: boolean
          lastEndDate:
            type: string
            format: date-time
          productCategory:
            type: string
          roomBookings:
            type: array
            items:
              $ref: '#/definitions/RoomBookingDto'
          sortDate:
            type: string
            format: date-time
          startDate:
            type: string
            format: date-time
          totalPrice:
            type: number
          vendor:
            $ref: '#/definitions/VendorDto'
  AccommodationBookingRequestDto:
    properties:
      accommodationId:
        type: integer
        format: int64
      checkinDate:
        type: string
      checkoutDate:
        type: string
      ignoreAssignmentIfFull:
        type: boolean
      rooms:
        type: array
        items:
          $ref: '#/definitions/RoomBookingRequestDto'
      travelType:
        $ref: '#/definitions/TravelTypeEnum'
  RoomBookingRequestDto:
    properties:
      roomTypeId:
        type: integer
        format: int64
      roomRateId:
        type: integer
        format: int64
      roomId:
        type: integer
        format: int64
      guests:
        type: array
        items:
          $ref: '#/definitions/CustomerDto'
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingRequestDto'
      answers:
        type: array
        items:
          $ref: '#/definitions/RoomBookingAnswersDto'
      externalReference:
        type: string
      checkinDate:
        type: string
      checkoutDate:
        type: string
      adults:
        type: number
        format: int32
      children:
        type: number
        format: int32
      infants:
        type: number
        format: int32
  ActivityBookingRequestDto:
    properties:
      activityId:
        type: integer
        format: int64
      date:
        type: string
      dropoff:
        type: boolean
      dropoffPlaceDescription:
        type: string
      dropoffPlaceId:
        type: integer
        format: int64
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingRequestDto'
      flexibleDayOption:
        type: string
      pickup:
        type: boolean
      pickupPlaceDescription:
        type: string
      pickupPlaceId:
        type: integer
        format: int64
      pickupPlaceRoomNumber:
        type: string
      pricingCategoryBookings:
        type: array
        items:
          $ref: '#/definitions/ActivityPricingCategoryBookingRequestDto'
      rateId:
        type: integer
        format: int64
      requestDeadline:
        type: string
      requestCallbackUrl:
        type: string
      startTimeId:
        type: integer
        format: int64
  ActivityPricingCategoryBookingRequestDto:
    properties:
      age:
        type: integer
        format: int32
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingRequestDto'
      leadPassenger:
        type: boolean
      name:
        type: string
      passengerInfo:
        $ref: '#/definitions/CustomerDto'
      pricingCategoryId:
        type: integer
        format: int64
  AllotmentDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
  TicketCategoryEnum:
    type: string
    enum:
      - ADULT
      - CHILD
      - TEENAGER
      - INFANT
      - SENIOR
      - STUDENT
      - MILITARY
      - OTHER
  BarcodeTypeEnum:
    type: string
    enum:
      - QR_CODE
      - CODE_128
      - PDF_417
      - DATA_MATRIX
      - AZTEC
  BarcodeValueDto:
    properties:
      value:
        type: string
      offlineCode:
        type: string
      barcodeType:
        $ref: '#/definitions/BarcodeTypeEnum'
  BookingAnswerWithIdGroupDto:
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      name:
        type: string
  CarBookingDto:
    properties:
      availabilityBookings:
        type: array
        items:
          $ref: '#/definitions/CarTypeAvailabilityBookingDto'
      availabilityCount:
        type: integer
        format: int32
      carPrice:
        type: number
      carType:
        $ref: '#/definitions/CarTypeInfoDto'
      endDate:
        type: string
        format: date-time
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingDto'
      extrasPrice:
        type: number
      id:
        type: integer
        format: int64
      locationPrice:
        type: number
      startDate:
        type: string
        format: date-time
      unavailable:
        type: boolean
      unitCount:
        type: integer
        format: int32
  CarRentalBookingDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDto'
      - properties:
          carBookings:
            type: array
            items:
              $ref: '#/definitions/CarBookingDto'
          carRental:
            $ref: '#/definitions/ProductInfoDto'
          dayCount:
            type: integer
            format: int32
          dropoffLocation:
            $ref: '#/definitions/CarRentalLocationDto'
          endDate:
            type: string
            format: date-time
          includedOnCustomerInvoice:
            type: boolean
          pickupLocation:
            $ref: '#/definitions/CarRentalLocationDto'
          productCategory:
            type: string
          startDate:
            type: string
            format: date-time
          totalPrice:
            type: number
          vendor:
            $ref: '#/definitions/VendorDto'
  CarBookingRequestDto:
    properties:
      carTypeId:
        type: integer
        format: int64
      unitCount:
        type: integer
        format: int32
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingRequestDto'
  CarRentalBookingRequestDto:
    properties:
      carRentalId:
        type: integer
        format: int64
      cars:
        type: array
        items:
          $ref: '#/definitions/CarBookingRequestDto'
      dropoffDate:
        type: string
      dropoffLocationId:
        type: integer
        format: int64
      pickupDate:
        type: string
      pickupLocationId:
        type: integer
        format: int64
  CarTypeAvailabilityBookingDto:
    properties:
      availability:
        $ref: '#/definitions/CarTypeAvailabilityDto'
      id:
        type: integer
        format: int64
  CarTypeAvailabilityDto:
    properties:
      availabilityCount:
        type: integer
        format: int32
      carTypeId:
        type: integer
        format: int64
      closed:
        type: boolean
      dayOfMonth:
        type: string
        format: date-time
      id:
        type: string
      unlimitedAvailability:
        type: boolean
  CarTypeInfoDto:
    properties:
      exampleCarModel:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      title:
        type: string
  ExtraBookingRequestDto:
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdGroupDto'
      extraId:
        type: integer
        format: int64
      unitCount:
        type: integer
        format: int32
  PricingCategoryPassengerSpecificationDto:
    properties:
      categoryId:
        type: integer
        format: int64
      passengers:
        type: integer
        format: int32
  RegionDto:
    properties:
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      title:
        type: string
  RoomBookingDto:
    properties:
      adults:
        type: integer
        format: int32
      availabilityCount:
        type: integer
        format: int32
      children:
        type: integer
        format: int32
      endDate:
        type: string
        format: date-time
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingDto'
      extrasPrice:
        type: number
      id:
        type: integer
        format: int64
      infants:
        type: integer
        format: int32
      roomAssignments:
        type: array
        items:
          $ref: '#/definitions/RoomAssignmentDto'
      roomPrice:
        type: number
      roomRate:
        $ref: '#/definitions/RoomRateDto'
      roomType:
        $ref: '#/definitions/BookingItemInfoDto'
      startDate:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/RoomBookingStatusEnum'
      unavailable:
        type: boolean
  RoomAssignmentDto:
    properties:
      id:
        type: integer
        format: int64
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      roomId:
        type: integer
        format: int64
      roomTitle:
        type: string
  RouteBookingDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDto'
      - properties:
          date:
            type: string
            format: date-time
          flexible:
            type: boolean
          includedOnCustomerInvoice:
            type: boolean
          lastModifiedDate:
            type: string
            format: date-time
          legBookings:
            type: array
            items:
              $ref: '#/definitions/RouteLegBookingDto'
          lineItemSpecs:
            type: array
            items:
              $ref: '#/definitions/RouteBookingLineItemSpecDto'
          passengerBookings:
            type: array
            items:
              $ref: '#/definitions/RoutePassengerBookingDto'
          productCategory:
            type: string
          returnBooking:
            $ref: '#/definitions/RouteBookingDto'
          route:
            $ref: '#/definitions/ProductInfoDto'
          totalPrice:
            type: number
          vendor:
            $ref: '#/definitions/VendorDto'
  RouteBookingLineItemSpecDto:
    properties:
      pricePerPassenger:
        type: number
      pricingCategory:
        $ref: '#/definitions/PricingCategoryDto'
      quantity:
        type: integer
        format: int32
      totalPrice:
        type: number
  RouteLegBookingDto:
    properties:
      date:
        type: string
        format: date-time
      departure:
        $ref: '#/definitions/RouteScheduleDto'
      dropoffPlaceId:
        type: integer
        format: int64
      dropoffPlaceTitle:
        type: string
      id:
        type: integer
        format: int64
      leg:
        $ref: '#/definitions/RouteLegDto'
      peak:
        type: boolean
      pickupPlaceId:
        type: integer
        format: int64
      pickupPlaceTitle:
        type: string
  RouteLegDto:
    properties:
      distance:
        type: integer
        format: int32
      distanceUnit:
        $ref: '#/definitions/DistanceUnitEnum'
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      flexibleSchedule:
        type: boolean
      from:
        $ref: '#/definitions/RouteStationDto'
      id:
        type: integer
        format: int64
      schedules:
        type: array
        items:
          $ref: '#/definitions/RouteScheduleDto'
      to:
        $ref: '#/definitions/RouteStationDto'
  RoutePassengerBookingDto:
    properties:
      id:
        type: integer
        format: int64
      pricingCategory:
        $ref: '#/definitions/PricingCategoryDto'
      barcode:
        $ref: '#/definitions/BarcodeValueDto'
  RoutePathSegmentBookingRequest:
    properties:
      departureSchedules:
        type: array
        items:
          $ref: '#/definitions/RouteScheduleBookingRequestDto'
      passengerSpecification:
        $ref: '#/definitions/SegmentPassengerSpecificationDto'
      returnSchedules:
        type: array
        items:
          $ref: '#/definitions/RouteScheduleBookingRequestDto'
      returning:
        type: boolean
      routeId:
        type: integer
        format: int64
  RouteScheduleBookingRequestDto:
    properties:
      dropoffPlaceId:
        type: integer
        format: int64
      pickupPlaceId:
        type: integer
        format: int64
      routeLegId:
        type: integer
        format: int64
      scheduleId:
        type: integer
        format: int64
  RouteScheduleDto:
    properties:
      arrivalHour:
        type: integer
        format: int32
      arrivalMinute:
        type: integer
        format: int32
      arrivalTimeStr:
        type: string
      departureHour:
        type: integer
        format: int32
      departureMinute:
        type: integer
        format: int32
      departureTimeStr:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      peak:
        type: boolean
  RouteStationDto:
    properties:
      airportStation:
        type: boolean
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/LocationDto'
      pickupFlags:
        type: array
        items:
          type: string
      pickupPlaceId:
        type: integer
        format: int64
      pickupStation:
        type: boolean
      regions:
        type: array
        items:
          $ref: '#/definitions/RegionDto'
      shortOrLongTitle:
        type: string
      shortTitle:
        type: string
      title:
        type: string
  SegmentPassengerSpecificationDto:
    properties:
      passengerSpecifications:
        type: array
        items:
          $ref: '#/definitions/PricingCategoryPassengerSpecificationDto'
  ShoppingCartDto:
    properties:
      accommodationBookings:
        type: array
        items:
          $ref: '#/definitions/AccommodationBookingDto'
      activityBookings:
        type: array
        items:
          $ref: '#/definitions/ActivityBookingDto'
      carRentalBookings:
        type: array
        items:
          $ref: '#/definitions/CarRentalBookingDto'
      customerInvoice:
        $ref: '#/definitions/CustomerInvoiceDto'
      customerInvoiceInInvoiceCurrency:
        $ref: '#/definitions/CustomerInvoiceDto'
      customerUUID:
        type: string
      giftCard:
        $ref: '#/definitions/GiftCardDto'
      harbour:
        $ref: '#/definitions/HarbourDto'
      lastAccessDate:
        type: string
        format: date-time
      promoCode:
        $ref: '#/definitions/PromoCodeDto'
      routeBookings:
        type: array
        items:
          $ref: '#/definitions/RouteBookingDto'
      sessionId:
        type: string
      size:
        type: integer
        format: int32
      totalPrice:
        type: number
      totalPriceInInvoiceCurrency:
        type: number
      vessel:
        $ref: '#/definitions/VesselDto'
  TransportBookingRequestDto:
    properties:
      departureDate:
        type: string
      pathSegments:
        type: array
        items:
          $ref: '#/definitions/RoutePathSegmentBookingRequest'
      returnDate:
        type: string
  TranslationLanguageDto:
    properties:
      code:
        type: string
      id:
        type: integer
        format: int64
  AvailableDepartureReturnPathPairDto:
    properties:
      departurePath:
        $ref: '#/definitions/AvailablePathDto'
      resultsType:
        $ref: '#/definitions/RouteResultsType'
      returnPath:
        $ref: '#/definitions/AvailablePathDto'
  AvailableLegDto:
    properties:
      departure:
        $ref: '#/definitions/AvailableScheduleDto'
      departureDate:
        type: string
        format: date-time
      leg:
        $ref: '#/definitions/RouteLegDto'
      route:
        $ref: '#/definitions/RouteDto'
  AvailablePathDto:
    properties:
      legs:
        type: array
        items:
          $ref: '#/definitions/AvailableLegDto'
  AvailableScheduleDto:
    properties:
      availableSeats:
        type: array
        items:
          $ref: '#/definitions/AvailableSeatsDto'
      prices:
        $ref: '#/definitions/TransportPricesDto'
      schedule:
        $ref: '#/definitions/RouteScheduleDto'
  AvailableSeatsDto:
    properties:
      capacity:
        $ref: '#/definitions/CapacityDto'
  CapacityDto:
    properties:
      capacity:
        type: integer
        format: int32
      capacityType:
        $ref: '#/definitions/CapacityTypeEnum'
  SimpleMoney:
    properties:
      amount:
        type: number
      currency:
        type: string
  PassengerCategoryPricesDto:
    properties:
      peak:
        type: boolean
      price:
        $ref: '#/definitions/SimpleMoney'
      priceWithDiscount:
        $ref: '#/definitions/SimpleMoney'
      unModulatedPrice:
        $ref: '#/definitions/SimpleMoney'
      pricingCategory:
        $ref: '#/definitions/PricingCategoryDto'
      returnTicket:
        type: boolean
  RouteAvailabilityReportDto:
    properties:
      departureDate:
        type: string
        format: date-time
      from:
        $ref: '#/definitions/RouteStationDto'
      query:
        $ref: '#/definitions/TransportQuery'
      results:
        type: array
        items:
          $ref: '#/definitions/AvailableDepartureReturnPathPairDto'
      returnDate:
        type: string
        format: date-time
      to:
        $ref: '#/definitions/RouteStationDto'
  RouteDto:
    allOf:
      - $ref: '#/definitions/ProductDto'
      - properties:
          availabilityExpressions:
            type: array
            items:
              $ref: '#/definitions/AvailabilityExpressionDto'
          closures:
            type: array
            items:
              $ref: '#/definitions/AvailabilityClosureDto'
          defaultDestStationId:
            type: integer
            format: int64
          defaultSourceStationId:
            type: integer
            format: int64
          endStationIds:
            type: array
            items:
              type: integer
              format: int64
          flexibleTickets:
            type: boolean
          legs:
            type: array
            items:
              $ref: '#/definitions/RouteLegDto'
          peakPricing:
            type: boolean
          pricingCategories:
            type: array
            items:
              $ref: '#/definitions/PricingCategoryDto'
          returnPricing:
            type: boolean
          stationGroups:
            type: string
          tagGroups:
            type: array
            items:
              $ref: '#/definitions/TagGroupDto'
          timeSelectionRequired:
            type: boolean
  TransportPricesDto:
    properties:
      priceList:
        type: array
        items:
          $ref: '#/definitions/PassengerCategoryPricesDto'
  TransportQuery:
    properties:
      departureDate:
        type: string
      departureTime:
        type: string
      destPickupPlaceId:
        type: integer
        format: int64
      destStationId:
        type: integer
        format: int64
      maxLegs:
        type: integer
        format: int32
      maxPaths:
        type: integer
        format: int32
      maxRoutes:
        type: integer
        format: int32
      maxStopoverDuration:
        type: string
      maxTotalDuration:
        type: string
      passengers:
        type: integer
        format: int32
      pricingCategories:
        type: array
        items:
          $ref: '#/definitions/PricingCategoryPassengerSpecificationDto'
      returnDate:
        type: string
      returnTime:
        type: string
      routeIds:
        type: array
        items:
          type: integer
          format: int64
      sourcePickupPlaceId:
        type: integer
        format: int64
      sourceStationId:
        type: integer
        format: int64
      weightType:
        $ref: '#/definitions/RouteWeightType'
  AvailabilityBaseDto:
    discriminator: type
    properties:
      type:
        type: string
      comment:
        type: string
      cron:
        type: string
      cronConditionActive:
        type: boolean
      dateRangeConditionActive:
        type: boolean
      endDate:
        type: string
        format: date-time
      flags:
        type: array
        items:
          type: string
      flagConditionActive:
        type: boolean
      id:
        type: integer
        format: int64
      recurringDateRange:
        type: boolean
      recurringEndDay:
        type: integer
        format: int32
      recurringEndMonth:
        type: integer
        format: int32
      recurringStartDay:
        type: integer
        format: int32
      recurringStartMonth:
        type: integer
        format: int32
      startDate:
        type: string
        format: date-time
  AvailabilityClosureDto:
    allOf:
      - $ref: '#/definitions/AvailabilityBaseDto'
      - properties:
          closedItems:
            type: array
            items:
              $ref: '#/definitions/AvailabilityItemClosureDto'
  AvailabilityExpressionDto:
    allOf:
      - $ref: '#/definitions/AvailabilityBaseDto'
      - properties:
          capacities:
            type: array
            items:
              $ref: '#/definitions/AvailabilityItemCapacityDto'
  AvailabilityItemCapacityDto:
    properties:
      availabilityItemId:
        type: string
      capacity:
        type: integer
        format: int32
      capacityType:
        $ref: '#/definitions/CapacityTypeEnum'
      id:
        type: integer
        format: int64
  AvailabilityItemClosureDto:
    properties:
      id:
        type: integer
        format: int64
      item:
        type: string
  RoomAvailabilityRequestDto:
    properties:
      accommodationId:
        type: integer
        format: int64
      checkIn:
        type: string
        format: date
      checkOut:
        type: string
        format: date
  SingleRoomStatusDto:
    properties:
      roomId:
        type: integer
        format: int64
      roomTitle:
        type: string
      roomAvailable:
        type: boolean
  RoomAvailabilityResponseDto:
    properties:
      roomAvailabilities:
        type: array
        items:
          $ref: '#/definitions/SingleRoomStatusDto'
  RoomInfo:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
  RoomTypeRooms:
    properties:
      roomType:
        $ref: '#/definitions/LightweightRoomTypeDto'
      rooms:
        type: array
        items:
          $ref: '#/definitions/RoomInfo'
  RoomsGroupedByTypeContainer:
    properties:
      roomsGroupedByType:
        type: array
        items:
          $ref: '#/definitions/RoomTypeRooms'
  OldAccommodationBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
      roomBookings:
        type: array
        items:
          $ref: '#/definitions/RoomBookingAnswersDto'
  ProductBookingDetailsDto:
    discriminator: type
    properties:
      id:
        type: integer
        format: int64
      bookingId:
        type: integer
        format: int64
      parentBookingId:
        type: integer
        format: int64
      confirmationCode:
        type: string
      productConfirmationCode:
        type: string
      barcode:
        $ref: '#/definitions/BarcodeValueDto'
      hasTicket:
        type: boolean
      boxBooking:
        type: boolean
      boxProduct:
        $ref: '#/definitions/ProductInfoDto'
      startDateTime:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/BookingStatusEnum'
      supplier:
        $ref: '#/definitions/VendorWithLinksDto'
      totalPrice:
        type: number
      cancellationDate:
        type: string
        format: date-time
      cancelledBy:
        type: string
      cancelNote:
        type: string
      cancellationPolicy:
        $ref: '#/definitions/CancellationPolicyDto'
      includedOnCustomerInvoice:
        type: boolean
      title:
        type: string
      discountAmount:
        type: number
      discountPercentage:
        type: number
        format: double
      priceWithDiscount:
        type: number
      seller:
        $ref: '#/definitions/VendorWithLinksDto'
      sellerCommission:
        type: number
        format: double
      notes:
        type: array
        items:
          $ref: '#/definitions/BookingNoteDto'
      paidType:
        $ref: '#/definitions/PaymentPaidTypeEnum'
      parentBooking:
        $ref: '#/definitions/BookingDetailsDto'
      product:
        $ref: '#/definitions/ProductInfoDto'
      productCategory:
        $ref: '#/definitions/ProductCategoryEnum'
      productId:
        type: integer
        format: int64
      affiliateCommission:
        type: number
        format: double
      agent:
        $ref: '#/definitions/BookingAgentWithLinksDto'
      agentCommission:
        type: number
        format: double
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      linksToExternalProducts:
        type: array
        items:
          $ref: '#/definitions/IntegratedSystemProductLinkDto'
      supplierContractFlags:
        type: array
        items:
          type: string
      sellerContractFlags:
        type: array
        items:
          type: string
      invoice:
        $ref: '#/definitions/ProductInvoiceDto'
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      sellerInvoice:
        $ref: '#/definitions/SellerInvoiceDto'
      bookingRoles:
        type: array
        items:
          type: string
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
  AccommodationBookingDetailsDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDetailsDto'
      - properties:
          accommodation:
            $ref: '#/definitions/AccommodationDto'
          allotment:
            $ref: '#/definitions/AllotmentDto'
          endDate:
            type: string
            format: date-time
          firstStartDate:
            type: string
            format: date-time
          lastEndDate:
            type: string
            format: date-time
          lodgingTax:
            $ref: '#/definitions/SimpleMoney'
          rooms:
            type: array
            items:
              $ref: '#/definitions/RoomBookingDetailsDto'
          savedAmount:
            type: number
          sortDate:
            type: string
            format: date-time
          startDate:
            type: string
            format: date-time
  Action:
    properties:
      type:
        type: string
        description: The discriminator field
    discriminator: type
  OldActivityBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
      dropoffPlaceDescription:
        type: string
      dropoffPlaceId:
        type: integer
        format: int64
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingAnswersDto'
      pickupPlaceDescription:
        type: string
      pickupPlaceId:
        type: integer
        format: int64
      pickupPlaceRoomNumber:
        type: string
      pricingCategoryBookings:
        type: array
        items:
          $ref: '#/definitions/ActivityPricingCategoryBookingAnswersDto'
  ActivityBookingDetailsDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDetailsDto'
      - properties:
          activity:
            $ref: '#/definitions/ActivityDto'
          bookedDropoffPricingType:
            $ref: '#/definitions/PickupPricingTypeEnum'
          bookedPickupPricingType:
            $ref: '#/definitions/PickupPricingTypeEnum'
          bookedPricingCategories:
            type: array
            items:
              $ref: '#/definitions/PricingCategoryDto'
          comboChildBookings:
            type: array
            items:
              $ref: '#/definitions/ProductBookingBasicsDto'
          comboParentBooking:
            $ref: '#/definitions/ProductBookingBasicsDto'
          customized:
            type: boolean
          date:
            type: string
            format: date-time
          dropoff:
            type: boolean
          dropoffPlace:
            $ref: '#/definitions/PickupPlaceDto'
          dropoffPlaceDescription:
            type: string
          expiryDate:
            type: string
            format: date-time
          extras:
            type: array
            items:
              $ref: '#/definitions/ExtraBookingDetailsDto'
          flexible:
            type: boolean
          inventoryServiceRefNumber:
            type: string
          pickup:
            type: boolean
          pickupPlace:
            $ref: '#/definitions/PickupPlaceDto'
          pickupPlaceDescription:
            type: string
          pickupPlaceRoomNumber:
            type: string
          pickupTime:
            type: string
          pricingCategoryBookings:
            type: array
            items:
              $ref: '#/definitions/ActivityPricingCategoryBookingDto'
          quantityByPricingCategory:
            type: object
            additionalProperties:
              type: number
              format: int32
          rateId:
            type: integer
            format: int64
          rateTitle:
            type: string
          requestDeadline:
            type: string
            format: date-time
          requestResponseDate:
            type: string
            format: date-time
          requestResponseBy:
            type: string
          requestResponseNote:
            type: string
          selectedFlexDayOption:
            type: string
          startTime:
            type: string
          startTimeId:
            type: integer
            format: int64
          ticketPerPerson:
            type: boolean
          totalParticipants:
            type: integer
            format: int32
          bookingAnswers:
            type: array
            items:
              $ref: '#/definitions/AnswerDetails'
          pickupAnswers:
            type: array
            items:
              $ref: '#/definitions/AnswerDetails'
          dropoffAnswers:
            type: array
            items:
              $ref: '#/definitions/AnswerDetails'
  ActivityPricingCategoryBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
  ActivityPricingCategoryBookingQuestionsDto:
    properties:
      bookingId:
        type: integer
        format: int64
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingQuestionsDto'
      pricingCategory:
        $ref: '#/definitions/BookingItemInfoDto'
      quantity:
        type: integer
        format: int32
      questionGroups:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionGroupDto'
  AgentBookingDetailsDto:
    properties:
      contractId:
        type: integer
        format: int64
      contractType:
        type: string
      id:
        type: integer
        format: int64
      title:
        type: string
  ApiResponse:
    properties:
      fields:
        type: object
        additionalProperties:
          type: object
      message:
        type: string
  AppliedTaxDto:
    properties:
      currency:
        type: string
      tax:
        type: number
      taxAsMoney:
        $ref: '#/definitions/SimpleMoney'
      taxAsText:
        type: string
      title:
        type: string
  BookingAgentUserDto:
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  BookingAgentWithLinksDto:
    properties:
      id:
        type: integer
        format: int64
      idNumber:
        type: string
      linkedExternalCustomers:
        type: array
        items:
          $ref: '#/definitions/LinkedExternalCustomerDto'
      referenceCode:
        type: string
      title:
        type: string
  OldBookingAnswersDto:
    properties:
      accommodationsBookings:
        type: array
        items:
          $ref: '#/definitions/OldAccommodationBookingAnswersDto'
      activityBookings:
        type: array
        items:
          $ref: '#/definitions/OldActivityBookingAnswersDto'
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerDto'
      carRentalBookings:
        type: array
        items:
          $ref: '#/definitions/CarRentalBookingAnswersDto'
      routeBookings:
        type: array
        items:
          $ref: '#/definitions/RouteBookingAnswersDto'
  BookingConfirmationDto:
    properties:
      externalBookingReference:
        type: string
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
      bookingLabels:
        type: array
        items:
          type: string
      payment:
        $ref: '#/definitions/CustomerPaymentDto'
  BookingEditResult:
    properties:
      actions:
        type: array
        items:
          $ref: '#/definitions/Action'
      status:
        $ref: '#/definitions/Status'
  BookingFieldDto:
    properties:
      name:
        type: string
      value:
        type: string
  BookingQuestionDto:
    properties:
      answerRequired:
        type: boolean
      defaultAnswer:
        type: string
      id:
        type: integer
        format: int64
      options:
        type: array
        items:
          type: string
      question:
        type: string
      selectFromOptions:
        type: boolean
      type:
        type: string
  BookingQuestionGroupDto:
    properties:
      answersNeeded:
        type: integer
        format: int32
      name:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionDto'
  BookingQuestionWithIdDto:
    properties:
      answerRequired:
        type: boolean
      defaultAnswer:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      options:
        type: array
        items:
          type: string
      question:
        type: string
      selectFromOptions:
        type: boolean
      type:
        type: string
  BookingQuestionWithIdGroupDto:
    properties:
      answersNeeded:
        type: integer
        format: int32
      name:
        type: string
      questions:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionWithIdDto'
  BookingReservationRequestDto:
    properties:
      answers:
        $ref: '#/definitions/OldBookingAnswersDto'
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
      chargeRequest:
        $ref: '#/definitions/ChargeRequestDto'
      createPaymentsAutomatically:
        type: boolean
      deposit:
        type: boolean
      depositAmount:
        type: number
      depositPercentage:
        type: number
        format: double
      discountAmount:
        type: number
      discountPercentage:
        type: number
        format: double
      paymentInfo:
        $ref: '#/definitions/CustomerPaymentDto'
  ChargeResponseDto:
    properties:
      charge:
        $ref: '#/definitions/ChargeDto'
      booking:
        $ref: '#/definitions/BookingDetailsDto'
  ChargeDto:
    properties:
      creationDate:
        type: string
      amount:
        type: number
      currency:
        type: string
      card:
        $ref: '#/definitions/CardDto'
  CarBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingAnswersDto'
  CarBookingDetailsDto:
    properties:
      title:
        type: string
      answers:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdDto'
      carType:
        $ref: '#/definitions/CarTypeDto'
      dayCount:
        type: integer
        format: int32
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingDetailsDto'
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
      id:
        type: integer
        format: int64
      bookingId:
        type: integer
        format: int64
      unitCount:
        type: integer
        format: int32
  CarBookingQuestionsDto:
    properties:
      bookingId:
        type: integer
        format: int64
      carType:
        $ref: '#/definitions/CarTypeInfoDto'
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingQuestionsDto'
      questionGroups:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionGroupDto'
      unitCount:
        type: integer
        format: int32
  CarRentalBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
      carBookings:
        type: array
        items:
          $ref: '#/definitions/CarBookingAnswersDto'
  CarRentalBookingDetailsDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDetailsDto'
      - properties:
          cars:
            type: array
            items:
              $ref: '#/definitions/CarBookingDetailsDto'
          carRental:
            $ref: '#/definitions/CarRentalDto'
          dayCount:
            type: integer
            format: int32
          dropoffLocation:
            $ref: '#/definitions/CarRentalLocationDto'
          endDate:
            type: string
            format: date-time
          pickupLocation:
            $ref: '#/definitions/CarRentalLocationDto'
          startDate:
            type: string
            format: date-time
  CarRentalBookingQuestionsDto:
    properties:
      bookingId:
        type: integer
        format: int64
      carBookings:
        type: array
        items:
          $ref: '#/definitions/CarBookingQuestionsDto'
      carRental:
        $ref: '#/definitions/BookingItemInfoDto'
      dropoffLocation:
        $ref: '#/definitions/CarRentalLocationDto'
      endDate:
        type: string
        format: date-time
      pickupLocation:
        $ref: '#/definitions/CarRentalLocationDto'
      questionGroups:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionGroupDto'
      startDate:
        type: string
        format: date-time
  CardDto:
    properties:
      addressCity:
        type: string
      addressCountry:
        type: string
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressPostCode:
        type: string
      cardNumber:
        type: string
      cvc:
        type: string
      expMonth:
        type: string
      expYear:
        type: string
      name:
        type: string
  ChargeRequest:
    properties:
      amount:
        type: number
      approvePageURL:
        type: string
      cancelPageURL:
        type: string
      cardNumber:
        type: string
      contractId:
        type: integer
        format: int64
      customer:
        $ref: '#/definitions/ChargeCustomerDto'
      currency:
        type: string
      cvc:
        type: string
      errorPageURL:
        type: string
      expMonth:
        type: string
      expYear:
        type: string
      formLanguage:
        type: string
      name:
        type: string
      uti:
        type: string
  ChargeRequestDto:
    properties:
      card:
        $ref: '#/definitions/CardDto'
      confirmBookingOnSuccess:
        type: boolean
  CustomLineItemDto:
    allOf:
      - $ref: '#/definitions/AbstractLineItemDto'
      - properties:
          lineItemType:
            $ref: '#/definitions/CustomLineItemTypeEnum'
          commission:
            type: number
            format: double
  CustomerCredentialsDto:
    properties:
      username:
        type: string
  CustomerDto:
    properties:
      address:
        type: string
      contactDetailsHidden:
        type: boolean
      contactDetailsHiddenUntil:
        type: string
        format: date-time
      country:
        type: string
      created:
        type: string
        format: date-time
      credentials:
        $ref: '#/definitions/CustomerCredentialsDto'
      dateOfBirth:
        type: string
        format: date-time
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      language:
        type: string
      lastName:
        type: string
      nationality:
        type: string
      organization:
        type: string
      passportExpDay:
        type: string
      passportExpMonth:
        type: string
      passportExpYear:
        type: string
      passportId:
        type: string
      personalIdNumber:
        type: string
      phoneNumber:
        type: string
      phoneNumberCountryCode:
        type: string
      place:
        type: string
      postCode:
        type: string
      sex:
        type: string
      state:
        type: string
      title:
        type: string
      uuid:
        type: string
  AbstractInvoiceDto:
    properties:
      currency:
        type: string
      excludedAppliedTaxes:
        type: array
        items:
          $ref: '#/definitions/AppliedTaxDto'
      id:
        type: integer
        format: int64
      includedAppliedTaxes:
        type: array
        items:
          $ref: '#/definitions/AppliedTaxDto'
      issueDate:
        type: string
        format: date-time
      formattingLocale:
        type: string
  CustomerInvoiceDto:
    allOf:
      - $ref: '#/definitions/AbstractInvoiceDto'
      - properties:
          customLineItems:
            type: array
            items:
              $ref: '#/definitions/CustomLineItemDto'
          excludedTaxes:
            type: boolean
          free:
            type: boolean
          includedTaxes:
            type: boolean
          invoiceNumber:
            type: string
          issuer:
            $ref: '#/definitions/ItemDto'
          issuerCompany:
            $ref: '#/definitions/CompanyDto'
          issuerName:
            type: string
          lodgingTaxes:
            type: array
            items:
              $ref: '#/definitions/AppliedTaxDto'
          paidAmountAsMoney:
            $ref: '#/definitions/SimpleMoney'
          paidAmountAsText:
            type: string
          payments:
            type: array
            items:
              $ref: '#/definitions/CustomerPaymentDto'
          productInvoices:
            type: array
            items:
              $ref: '#/definitions/ProductInvoiceDto'
          promoCode:
            $ref: '#/definitions/PromoCodeDto'
          recipient:
            $ref: '#/definitions/CustomerDto'
          recipientName:
            type: string
          remainingAmountAsMoney:
            $ref: '#/definitions/SimpleMoney'
          remainingAmountAsText:
            type: string
          totalAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalAsText:
            type: string
          totalDiscountAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDiscountedAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDiscountedAsText:
            type: string
          totalDueAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDueAsText:
            type: string
          totalExcludedTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalExcludedTaxAsText:
            type: string
          totalIncludedTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalIncludedTaxAsText:
            type: string
          totalTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalTaxAsText:
            type: string
  CompanyDto:
    properties:
      registrationNumber:
        type: string
      vatRegistrationNumber:
        type: string
  SellerInvoiceDto:
    allOf:
      - $ref: '#/definitions/AbstractInvoiceDto'
      - properties:
          customLineItems:
            type: array
            items:
              $ref: '#/definitions/CustomLineItemDto'
          dates:
            type: string
          lineItems:
            type: array
            items:
              $ref: '#/definitions/SellerInvoiceLineItemDto'
          product:
            $ref: '#/definitions/ItemDto'
          productConfirmationCode:
            type: string
          issuer:
            $ref: '#/definitions/ItemDto'
          recipient:
            $ref: '#/definitions/ItemDto'
          title:
            type: string
  AffiliateInvoiceDto:
    allOf:
    - $ref: '#/definitions/AbstractInvoiceDto'
    - properties:
        issuer:
          $ref: '#/definitions/ItemDto'
        recipient:
          $ref: '#/definitions/ItemDto'
        lineItems:
          type: array
          items:
            $ref: '#/definitions/AffiliateInvoiceLineItemDto'
  AgentInvoiceDto:
    allOf:
    - $ref: '#/definitions/AbstractInvoiceDto'
    - properties:
        issuer:
          $ref: '#/definitions/ItemDto'
        recipient:
          $ref: '#/definitions/ItemDto'
        lineItems:
          type: array
          items:
            $ref: '#/definitions/AgentInvoiceLineItemDto'
  AbstractLineItemDto:
    properties:
      calculatedDiscount:
        type: number
        format: double
      calculatedDiscountAmount:
        type: number
      currency:
        type: string
      customDiscount:
        type: number
        format: double
      discount:
        type: number
        format: double
      formattingLocale:
        type: string
      id:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      tax:
        $ref: '#/definitions/TaxDto'
      taxAmount:
        type: number
      taxAsMoney:
        $ref: '#/definitions/SimpleMoney'
      taxAsText:
        type: string
      taxesAsMoney:
        type: array
        items:
          $ref: '#/definitions/AppliedTaxDto'
      title:
        type: string
      total:
        type: number
      totalAsMoney:
        $ref: '#/definitions/SimpleMoney'
      totalAsText:
        type: string
      totalDiscounted:
        type: number
      totalDiscountedAsMoney:
        $ref: '#/definitions/SimpleMoney'
      totalDiscountedAsText:
        type: string
      totalDue:
        type: number
      totalDueAsMoney:
        $ref: '#/definitions/SimpleMoney'
      totalDueAsText:
        type: string
      unitPrice:
        type: number
      unitPriceAsMoney:
        $ref: '#/definitions/SimpleMoney'
      unitPriceAsText:
        type: string
      unitPriceDate:
        type: string
        format: date-time

  SellerInvoiceLineItemDto:
    allOf:
      - $ref: '#/definitions/AbstractLineItemDto'
      - properties:
          commission:
            type: number
            format: double
  AffiliateInvoiceLineItemDto:
    allOf:
      - $ref: '#/definitions/AbstractLineItemDto'
      - properties:
          commission:
            type: number
            format: double
  AgentInvoiceLineItemDto:
    allOf:
      - $ref: '#/definitions/AbstractLineItemDto'
      - properties:
          commission:
            type: number
            format: double
  CustomerPaymentDto:
    properties:
      activeCustomerInvoiceId:
        type: integer
        format: int64
      amount:
        type: number
      amountAsMoney:
        $ref: '#/definitions/SimpleMoney'
      amountAsText:
        type: string
      authorizationCode:
        type: string
      cardNumber:
        type: string
      comment:
        type: string
      currency:
        type: string
      formattingLocale:
        type: string
      giftCard:
        $ref: '#/definitions/GiftCardDto'
      id:
        type: integer
        format: int64
      paymentContractId:
        type: integer
        format: int64
      paymentId:
        type: integer
        format: int64
      paymentProviderType:
        type: string
      paymentReferenceId:
        type: string
      paymentType:
        $ref: '#/definitions/PaymentTypeEnum'
      refundable:
        type: boolean
      totalRefundedAmount:
        type: number
      transactionDate:
        type: string
        format: date-time
  DateRangeFilter:
    properties:
      from:
        type: string
        format: date-time
      includeLower:
        type: boolean
      includeUpper:
        type: boolean
      to:
        type: string
        format: date-time
  ErrorDto:
    properties:
      errorCode:
        type: string
      errorDescription:
        type: string
  ExtraBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerWithIdGroupDto'
      bookingId:
        type: integer
        format: int64
      extraId:
        type: integer
        format: int64
  ExtraBookingQuestionsDto:
    properties:
      bookingId:
        type: integer
        format: int64
      extra:
        $ref: '#/definitions/BookingItemInfoDto'
      questionGroups:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionWithIdGroupDto'
      unitCount:
        type: integer
        format: int32
  ExtranetUserDto:
    properties:
      agent:
        $ref: '#/definitions/BookingAgentWithLinksDto'
      creationDate:
        type: string
        format: date-time
      email:
        type: string
      firstName:
        type: string
      fullNameShort:
        type: string
      id:
        type: integer
        format: int64
      lastLoginDate:
        type: string
        format: date-time
      lastName:
        type: string
      role:
        $ref: '#/definitions/ExtranetUserRoleEnum'
      termsOfServiceAgreedDate:
        type: string
        format: date-time
      username:
        type: string
      vendorRoles:
        type: array
        items:
          $ref: '#/definitions/VendorRoleEnum'
      namedUserRoleId:
        type: integer
        format: int64
      uiLanguage:
        type: string
      timeZone:
        type: string
      title:
        type: string
      phoneNumber:
        type: string
      accountHolder:
        type: boolean
      canDisguiseAsAnyVendor:
        type: boolean
  IntegratedSystemConfigDto:
    properties:
      id:
        type: integer
        format: int64
      systemType:
        type: string
      title:
        type: string
  IntegratedSystemProductLinkDto:
    properties:
      externalProductId:
        type: string
      externalProductTitle:
        type: string
      flags:
        type: array
        items:
          type: string
      systemConfigId:
        type: integer
        format: int64
  InvoiceDto:
    properties:
      currency:
        type: string
      total:
        type: number
      totalCommission:
        type: number
      totalDiscount:
        type: number
      totalSansCommission:
        type: number
      totalSansDiscount:
        type: number
  LightweightAccommodationDto:
    properties:
      id:
        type: integer
        format: int64
      externalId:
        type: string
      productGroupId:
        type: integer
        format: int64
      productCategory:
        type: string
      box:
        type: boolean
      title:
        type: string
      excerpt:
        type: string
      vendor:
        $ref: '#/definitions/VendorDto'
      boxedVendor:
        $ref: '#/definitions/VendorDto'
      rating:
        type: integer
        format: int32
      location:
        $ref: '#/definitions/LocationDto'
      checkInHour:
        type: integer
        format: int32
      checkInMinute:
        type: integer
        format: int32
      checkOutHour:
        type: integer
        format: int32
      checkOutMinute:
        type: integer
        format: int32
      boxedAccommodationId:
        type: integer
        format: int64
      roomTypes:
        type: array
        items:
          $ref: '#/definitions/LightweightRoomTypeDto'
  LightweightRoomTypeDto:
    properties:
      capacity:
        type: integer
        format: int32
      code:
        type: string
      defaultRate:
        $ref: '#/definitions/RoomRateDto'
      externalId:
        type: string
      extras:
        type: array
        items:
          $ref: '#/definitions/BookableExtraDto'
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      roomRates:
        type: array
        items:
          $ref: '#/definitions/RoomRateDto'
      title:
        type: string
      shared:
        type: boolean
      accommodationId:
        type: integer
        format: int64
      accommodationTitle:
        type: string
  LinkedExternalCustomerDto:
    properties:
      externalCustomerId:
        type: string
      externalCustomerTitle:
        type: string
      externalDepartmentId:
        type: string
      flags:
        type: array
        items:
          type: string
      systemConfigId:
        type: integer
        format: int64
      systemType:
        type: string
  PaymentLineItemDto:
    properties:
      description:
        type: string
      price:
        type: number
      quantity:
        type: integer
        format: int32
  ProductBookingBasicsDto:
    properties:
      id:
        type: integer
        format: int64
      product:
        $ref: '#/definitions/ProductInfoDto'
      productConfirmationCode:
        type: string
  ProductBookingQuery:
    properties:
      bookedExtrasIds:
        type: array
        items:
          type: integer
          format: int64
      bookingRole:
        $ref: '#/definitions/BookingRoleEnum'
      bookingStatuses:
        type: array
        items:
          type: string
      confirmationCode:
        type: string
      creationDateRange:
        $ref: '#/definitions/DateRangeFilter'
      excludeComboBookings:
        type: boolean
      externalBookingReference:
        type: string
      fields:
        type: object
        additionalProperties:
          type: object
      noteQuery:
        type: string
      page:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      productExternalId:
        type: string
      productIds:
        type: array
        items:
          type: integer
          format: int64
      productTitle:
        type: string
      productType:
        type: string
      sortFields:
        type: array
        items:
          $ref: '#/definitions/SortField'
      startDateRange:
        $ref: '#/definitions/DateRangeFilter'
      textFilter:
        type: string
  ProductBookingSearchResultItem:
    properties:
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      affiliateCommission:
        type: number
        format: double
      agent:
        $ref: '#/definitions/AgentBookingDetailsDto'
      agentCommission:
        type: number
        format: double
      agentUser:
        $ref: '#/definitions/BookingAgentUserDto'
      assignedResources:
        type: array
        items:
          $ref: '#/definitions/ResourceDto'
      bookingCreationDate:
        type: string
        format: date-time
      boxBooking:
        type: boolean
      boxProduct:
        $ref: '#/definitions/BookingItemInfoDto'
      boxSupplier:
        $ref: '#/definitions/BookingItemInfoDto'
      cancelNote:
        type: string
      cancellationDate:
        type: string
        format: date-time
      cancelledBy:
        type: string
      channel:
        $ref: '#/definitions/BookingChannelItemInfoDto'
      confirmationCode:
        type: string
      contactDetailsHidden:
        type: boolean
      contactDetailsHiddenUntil:
        type: string
        format: date-time
      conversationOpen:
        type: boolean
      conversationAwaitingVendorIds:
        type: array
        items:
          type: integer
          format: int64
      creationDate:
        type: string
        format: date-time
      currency:
        type: string
      customer:
        $ref: '#/definitions/CustomerDto'
      customerInvoice:
        $ref: '#/definitions/InvoiceDto'
      discountAmount:
        type: number
        format: double
      discountPercentage:
        type: number
        format: double
      endDate:
        type: string
        format: date-time
      externalBookingReference:
        type: string
      extranetUser:
        $ref: '#/definitions/ExtranetUserDto'
      fields:
        type: object
        additionalProperties:
          type: object
      harbour:
        $ref: '#/definitions/HarbourDto'
      hasNotes:
        type: boolean
      id:
        type: integer
        format: int64
      inventoryServiceRefNumber:
        type: string
      notes:
        type: array
        items:
          $ref: '#/definitions/BookingNoteDto'
      paidAmount:
        type: number
        format: double
      paidType:
        type: string
      parentBookingId:
        type: integer
        format: int64
      prepaid:
        type: boolean
      product:
        $ref: '#/definitions/BookingItemInfoDto'
      productCategory:
        $ref: '#/definitions/ProductCategoryEnum'
      productConfirmationCode:
        type: string
      productExternalId:
        type: string
      productType:
        type: string
      resellerInvoice:
        $ref: '#/definitions/InvoiceDto'
      resellerPaidType:
        type: string
      resold:
        type: boolean
      saleSource:
        $ref: '#/definitions/BookingItemInfoDto'
      seller:
        $ref: '#/definitions/BookingItemInfoDto'
      sellerCommission:
        type: number
        format: double
      specialRequests:
        type: string
      startDate:
        type: string
        format: date-time
      status:
        type: string
      totalPrice:
        type: integer
        format: int32
      totalPriceAmount:
        type: number
        format: double
      totalDiscountedPrice:
        type: number
        format: double
      unconfirmedPayments:
        type: boolean
      vendor:
        $ref: '#/definitions/BookingItemInfoDto'
      vessel:
        $ref: '#/definitions/VesselDto'
  ProductBookingSearchResultsDto:
    properties:
      query:
        $ref: '#/definitions/ProductBookingQuery'
      results:
        type: array
        items:
          $ref: '#/definitions/ProductBookingSearchResultItem'
      tookInMillis:
        type: integer
        format: int64
      totalHits:
        type: integer
        format: int64
  ComboBookingDto:
    properties:
      comboBookingId:
        type: integer
        format: int64
      comboActivityId:
        type: integer
        format: int64
      comboActivityOwnerId:
        type: integer
        format: int64
      comboStartTimeId:
        type: integer
        format: int64
      comboStartTimeStr:
        type: string
      product:
        $ref: '#/definitions/BookingItemInfoDto'
      productExternalId:
        type: string
  ItineraryBookingQuery:
    properties:
      page:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      confirmationCode:
        type: string
      externalBookingReference:
        type: string
      bookingChannelId:
        type: integer
        format: int64
      extranetUserId:
        type: integer
        format: int64
      agentId:
        type: integer
        format: int64
      sellerId:
        type: integer
        format: int64
      supplierId:
        type: integer
        format: int64
      bookingLabelIds:
        type: string
      paymentId:
        type: string
      promoCodeId:
        type: integer
        format: int64
      creationDateRange:
        $ref: '#/definitions/DateRangeFilter'
      startDateRange:
        $ref: '#/definitions/DateRangeFilter'
      lastModifiedDateRange:
        $ref: '#/definitions/DateRangeFilter'
      cancellationDateRange:
        $ref: '#/definitions/DateRangeFilter'
      modifiedAfterCreation:
        type: boolean
      textFilter:
        type: string
      bookingStatuses:
        type: array
        items:
          type: string
      country:
        type: string
      city:
        type: string
      conversationOpen:
        type: boolean
      conversationAwaitingVendorId:
        type: integer
        format: int64
      sortFields:
        type: array
        items:
          $ref: '#/definitions/SortField'

  BookingSearchResultItem:
    properties:
      id:
        type: integer
        format: int64
      confirmationCode:
        type: string
      externalBookingReference:
        type: string
      creationDate:
        type: string
        format: date-time
      currency:
        type: string
      viewerRole:
        $ref: '#/definitions/BookingRoleEnum'
      salesSegment:
        $ref: '#/definitions/SalesSegmentEnum'
      seller:
        $ref: '#/definitions/BookingItemInfoDto'
      channel:
        $ref: '#/definitions/LightweightBookingChannelDto'
      extranetUser:
        $ref: '#/definitions/ExtranetUserDto'
      affiliateType:
        $ref: '#/definitions/AffiliateType'
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      affiliateVendor:
        $ref: '#/definitions/ItemDto'
      vessel:
        $ref: '#/definitions/VesselDto'
      harbour:
        $ref: '#/definitions/HarbourDto'
      promoCode:
        $ref: '#/definitions/PromoCodeDto'
      customer:
        $ref: '#/definitions/CustomerDto'
      agent:
        $ref: '#/definitions/AgentBookingDetailsDto'
      customerInvoice:
        $ref: '#/definitions/CustomerInvoiceDto'
      paidAmountAsMoney:
        $ref: '#/definitions/SimpleMoney'
      paidAmountAsText:
        type: string
      paidPercentage:
        type: integer
        format: int32
      paymentStatus:
        $ref: '#/definitions/PaymentPaidTypeEnum'
      labels:
        type: array
        items:
          $ref: '#/definitions/BookingLabelDto'
      productBookings:
        type: array
        items:
          $ref: '#/definitions/ProductBookingSearchResultItem'
  BookingSearchResultsDto:
    properties:
      labelsAggregation:
        $ref: '#/definitions/TermsFacetDto'
      numberOfOpenConversations:
        type: integer
        format: int64
      numberOfConversationsAwaitingReply:
        type: integer
        format: int64
      items:
        type: array
        items:
          $ref: '#/definitions/BookingSearchResultItem'
      tookInMillis:
        type: integer
        format: int64
      totalHits:
        type: integer
        format: int64
  CustomerInvoiceChangesDto:
    properties:
      modifiedProductItems:
        type: array
        items:
          $ref: '#/definitions/ProductInvoiceLineItemDto'
      newCustomItems:
        type: array
        items:
          $ref: '#/definitions/CustomLineItemDto'
      modifiedCustomItems:
        type: array
        items:
          $ref: '#/definitions/CustomLineItemDto'
      deletedCustomItems:
        type: array
        items:
          type: integer
          format: int64
  ProductInvoiceDto:
    allOf:
      - $ref: '#/definitions/AbstractInvoiceDto'
      - properties:
          customLineItems:
            type: array
            items:
              $ref: '#/definitions/CustomLineItemDto'
          dates:
            type: string
          excludedTaxes:
            type: boolean
          free:
            type: boolean
          includedTaxes:
            type: boolean
          lineItems:
            type: array
            items:
              $ref: '#/definitions/ProductInvoiceLineItemDto'
          lodgingTax:
            $ref: '#/definitions/AppliedTaxDto'
          product:
            $ref: '#/definitions/ProductInfoDto'
          productBookingId:
            type: integer
            format: int64
          productCategory:
            $ref: '#/definitions/ProductCategoryEnum'
          productConfirmationCode:
            type: string
          title:
            type: string
          totalAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalAsText:
            type: string
          totalDiscountAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDiscountedAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDiscountedAsText:
            type: string
          totalDueAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalDueAsText:
            type: string
          totalExcludedTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalExcludedTaxAsText:
            type: string
          totalIncludedTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalIncludedTaxAsText:
            type: string
          totalTaxAsMoney:
            $ref: '#/definitions/SimpleMoney'
          totalTaxAsText:
            type: string
  ProductInvoiceLineItemDto:
    allOf:
      - $ref: '#/definitions/AbstractLineItemDto'
      - properties:
          costItemId:
            type: integer
            format: int64
          costItemTitle:
            type: string
          costGroupTitle:
            type: string
          itemBookingId:
            type: string
          supportsDiscount:
            type: boolean
  ResourceDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      type:
        $ref: '#/definitions/ResourceTypeEnum'
  RoomBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
      extraBookings:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingAnswersDto'
      roomId:
        type: integer
        format: int64
  RoomBookingDetailsDto:
    properties:
      title:
        type: string
      adults:
        type: integer
        format: int32
      children:
        type: integer
        format: int32
      endDate:
        type: string
        format: date-time
      extras:
        type: array
        items:
          $ref: '#/definitions/ExtraBookingDetailsDto'
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
      guests:
        type: array
        items:
          $ref: '#/definitions/CustomerDto'
      id:
        type: integer
        format: int64
      bookingId:
        type: integer
        format: int64
      infants:
        type: integer
        format: int32
      nightCount:
        type: integer
        format: int32
      roomRate:
        $ref: '#/definitions/RoomRateDto'
      roomType:
        $ref: '#/definitions/LightweightRoomTypeDto'
      roomIds:
        type: array
        items:
          type: integer
          format: int64
      startDate:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/RoomBookingStatusEnum'
  RouteBookingAnswersDto:
    properties:
      answerGroups:
        type: array
        items:
          $ref: '#/definitions/BookingAnswerGroupDto'
      bookingId:
        type: integer
        format: int64
  RouteBookingDetailsDto:
    allOf:
      - $ref: '#/definitions/ProductBookingDetailsDto'
      - properties:
          date:
            type: string
            format: date-time
          flexible:
            type: boolean
          ticketPerPerson:
            type: boolean
          legBookings:
            type: array
            items:
              $ref: '#/definitions/RouteLegBookingDto'
          passengerBookings:
            type: array
            items:
              $ref: '#/definitions/RoutePassengerBookingDto'
          lineItemSpecs:
            type: array
            items:
              $ref: '#/definitions/RouteBookingLineItemSpecDto'
          returnBooking:
            $ref: '#/definitions/RouteBookingDetailsDto'
          route:
            $ref: '#/definitions/RouteDto'
  RouteBookingQuestionsDto:
    properties:
      booking:
        $ref: '#/definitions/RouteBookingDto'
      questionGroups:
        type: array
        items:
          $ref: '#/definitions/BookingQuestionGroupDto'
  SingleAccommodationBookingRequestDto:
    properties:
      accommodationRequest:
        $ref: '#/definitions/AccommodationBookingRequestDto'
      chargeRequest:
        $ref: '#/definitions/ChargeRequest'
      customer:
        $ref: '#/definitions/CustomerDto'
      discountPercentage:
        type: number
        format: double
      externalBookingReference:
        type: string
      harbourId:
        type: integer
        format: int64
      manualPayment:
        $ref: '#/definitions/CustomerPaymentDto'
      note:
        type: string
      paymentOption:
        $ref: '#/definitions/BookingPaymentOption'
      roomBookingStatus:
        $ref: '#/definitions/RoomBookingStatusEnum'
      sendCustomerNotification:
        type: boolean
      tokenChargeRequest:
        $ref: '#/definitions/TokenChargeRequest'
      vesselId:
        type: integer
        format: int64
  SingleActivityBookingRequestDto:
    properties:
      activityRequest:
        $ref: '#/definitions/ActivityBookingRequestDto'
      bookingLabels:
        type: array
        items:
          type: string
      chargeRequest:
        $ref: '#/definitions/ChargeRequest'
      customer:
        $ref: '#/definitions/CustomerDto'
      discountPercentage:
        type: number
        format: double
      externalBookingReference:
        type: string
      harbourId:
        type: integer
        format: int64
      manualPayment:
        $ref: '#/definitions/CustomerPaymentDto'
      note:
        type: string
      paymentOption:
        $ref: '#/definitions/BookingPaymentOption'
      sendCustomerNotification:
        type: boolean
      tokenChargeRequest:
        $ref: '#/definitions/TokenChargeRequest'
      vesselId:
        type: integer
        format: int64
  SingleCarRentalBookingRequestDto:
    properties:
      carRentalRequest:
        $ref: '#/definitions/CarRentalBookingRequestDto'
      chargeRequest:
        $ref: '#/definitions/ChargeRequest'
      customer:
        $ref: '#/definitions/CustomerDto'
      discountPercentage:
        type: number
        format: double
      externalBookingReference:
        type: string
      harbourId:
        type: integer
        format: int64
      manualPayment:
        $ref: '#/definitions/CustomerPaymentDto'
      note:
        type: string
      paymentOption:
        $ref: '#/definitions/BookingPaymentOption'
      sendCustomerNotification:
        type: boolean
      tokenChargeRequest:
        $ref: '#/definitions/TokenChargeRequest'
      vesselId:
        type: integer
        format: int64
  SingleTransportBookingRequestDto:
    properties:
      routeRequest:
        $ref: '#/definitions/TransportBookingRequestDto'
      chargeRequest:
        $ref: '#/definitions/ChargeRequest'
      customer:
        $ref: '#/definitions/CustomerDto'
      discountPercentage:
        type: number
        format: double
      externalBookingReference:
        type: string
      harbourId:
        type: integer
        format: int64
      manualPayment:
        $ref: '#/definitions/CustomerPaymentDto'
      note:
        type: string
      paymentOption:
        $ref: '#/definitions/BookingPaymentOption'
      sendCustomerNotification:
        type: boolean
      tokenChargeRequest:
        $ref: '#/definitions/TokenChargeRequest'
      vesselId:
        type: integer
        format: int64
  SortField:
    properties:
      name:
        type: string
      order:
        $ref: '#/definitions/SortOrder'
  TaxDto:
    properties:
      id:
        type: integer
        format: int64
      ownerId:
        type: integer
        format: int64
      included:
        type: boolean
      percentage:
        type: number
        format: double
      title:
        type: string
      roundingMode:
        type: string
  TokenChargeRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
      customer:
        $ref: '#/definitions/ChargeCustomerDto'
      lineItems:
        type: array
        items:
          $ref: '#/definitions/PaymentLineItemDto'
      paymentToken:
        type: string
      providerPaymentParameters:
        type: object
        additionalProperties:
          type: string
      uti:
        type: string
  ChargeCustomerDto:
    properties:
      email:
        type: string
      title:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
      nationality:
        type: string
      organization:
        type: string
      billingAddress:
        $ref: '#/definitions/ChargeAddressDto'
  ChargeAddressDto:
    properties:
      address:
        type: string
      address2:
        type: string
      address3:
        type: string
      city:
        type: string
      country:
        type: string
      postcode:
        type: string
  VendorWithLinksDto:
    allOf:
      - $ref: '#/definitions/VendorDto'
      - properties:
          linkedExternalCustomers:
            type: array
            items:
              $ref: '#/definitions/LinkedExternalCustomerDto'
  agent:
    properties:
      id:
        type: integer
        format: int64
      idNumber:
        type: string
      referenceCode:
        type: string
      title:
        type: string
  BookingDto:
    properties:
      accommodationBookings:
        type: array
        items:
          $ref: '#/definitions/AccommodationBookingDetailsDto'
      activityBookings:
        type: array
        items:
          $ref: '#/definitions/ActivityBookingDetailsDto'
      affiliateType:
        $ref: '#/definitions/AffiliateType'
      affiliate:
        $ref: '#/definitions/AffiliateDto'
      affiliateVendor:
        $ref: '#/definitions/ItemDto'
      agent:
        $ref: '#/definitions/AgentBookingDetailsDto'
      channel:
        $ref: '#/definitions/LightweightBookingChannelDto'
      bookingFields:
        type: array
        items:
          $ref: '#/definitions/BookingFieldDto'
      carRentalBookings:
        type: array
        items:
          $ref: '#/definitions/CarRentalBookingDetailsDto'
      confirmationCode:
        type: string
      creationDate:
        type: string
        format: date-time
      lastModifiedDate:
        type: string
        format: date-time
      currency:
        type: string
      customer:
        $ref: '#/definitions/CustomerDto'
      customerPayments:
        type: array
        items:
          $ref: '#/definitions/CustomerPaymentDto'
      externalBookingReference:
        type: string
      extranetUser:
        $ref: '#/definitions/ExtranetUserDto'
      harbour:
        $ref: '#/definitions/HarbourDto'
      bookingId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      customerInvoice:
        $ref: '#/definitions/CustomerInvoiceDto'
      labels:
        type: array
        items:
          $ref: '#/definitions/BookingLabelDto'
      language:
        type: string
      paidAmountAsMoney:
        $ref: '#/definitions/SimpleMoney'
      paidAmountAsText:
        type: string
      paidPercentage:
        type: integer
        format: int32
      paymentType:
        $ref: '#/definitions/PaymentPaidTypeEnum'
      paymentStatus:
        $ref: '#/definitions/PaymentPaidTypeEnum'
      promoCode:
        $ref: '#/definitions/PromoCodeDto'
      qrCodeUrl:
        type: string
      routeBookings:
        type: array
        items:
          $ref: '#/definitions/RouteBookingDetailsDto'
      salesSegment:
        $ref: '#/definitions/SalesSegmentEnum'
      seller:
        $ref: '#/definitions/VendorDto'
      status:
        $ref: '#/definitions/BookingStatusEnum'
      systemConfig:
        $ref: '#/definitions/IntegratedSystemConfigDto'
      totalDue:
        type: number
      totalPaid:
        type: number
      totalPrice:
        type: number
      totalPriceConverted:
        type: number
      vessel:
        $ref: '#/definitions/VesselDto'
      viewerRole:
        $ref: '#/definitions/BookingRoleEnum'
  BookingLabelDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
  PromoCodeDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
      description:
        type: string
  GiftCardDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string

  bookingChannel:
    properties:
      backend:
        type: boolean
      externalId:
        type: string
      flags:
        type: array
        items:
          type: string
      id:
        type: integer
        format: int64
      overrideVoucherHeader:
        type: boolean
      title:
        type: string
      uuid:
        type: string
      voucherEmailAddress:
        type: string
      voucherLogo:
        $ref: '#/definitions/PhotoDto'
      voucherLogoStyle:
        type: string
      voucherName:
        type: string
      voucherPhoneNumber:
        type: string
      voucherWebsite:
        type: string
  BookingNoteDto:
    properties:
      author:
        type: string
      body:
        type: string
      created:
        type: string
        format: date-time
      ownerId:
        type: integer
        format: int64
      recipient:
        type: string
      sentAsEmail:
        type: boolean
      subject:
        type: string
      type:
        $ref: '#/definitions/BookingNoteTypeEnum'
      voucherAttached:
        type: boolean
      voucherPricesShown:
        type: boolean
  cancelBooking:
    required:
      - refund
      - notify
      - note
    properties:
      note:
        type: string
        description: Cancellation notes
      notify:
        type: boolean
        description: Send notification
      refund:
        type: boolean
        description: Refund the booking
  cancelProductBooking:
    required:
      - refund
      - notify
      - refundAmount
      - note
    properties:
      note:
        type: string
        description: Cancellation notes
      notify:
        type: boolean
        description: Send notification
      refund:
        type: boolean
        description: Refund the product booking
      refundAmount:
        type: number
        description: 'Refund amount (if 0 and refund == true, then full amount is refunded)'
      remainInvoiced:
        type: boolean
        description: Specify whether the product should remain on customer invoice after being cancelled
  ProductListDescriptionDto:
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ProductListDescriptionDto'
      description:
        type: string
      flags:
        type: array
        items:
          type: string
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      id:
        type: integer
        format: int64
      parent:
        $ref: '#/definitions/ProductListDescriptionDto'
      size:
        type: integer
        format: int32
      slug:
        type: string
      title:
        type: string
  ProductListDto:
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/ProductListDescriptionDto'
      description:
        type: string
      flags:
        type: array
        items:
          type: string
      keyPhoto:
        $ref: '#/definitions/PhotoDto'
      id:
        type: integer
        format: int64
      items:
        type: array
        items:
          $ref: '#/definitions/ProductListItemDto'
      parent:
        $ref: '#/definitions/ProductListDescriptionDto'
      size:
        type: integer
        format: int32
      slug:
        type: string
      title:
        type: string
  ProductListItemDto:
    properties:
      accommodation:
        $ref: '#/definitions/AccommodationDto'
      activity:
        $ref: '#/definitions/ActivityDto'
      productCategory:
        $ref: '#/definitions/ProductCategoryEnum'
      vehicle:
        $ref: '#/definitions/CarTypeDto'
  CountryDto:
    properties:
      isoCode:
        type: string
      title:
        type: string
  CancellationPolicyDto:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      penaltyRules:
        type: array
        items:
          $ref: '#/definitions/PenaltyRuleDto'
      tax:
        $ref: '#/definitions/TaxDto'
  PenaltyRuleDto:
    properties:
      id:
        type: integer
        format: int64
      cutoffHours:
        type: integer
        format: int32
      charge:
        type: number
        format: double
      chargeType:
        type: string
  Guidance:
    properties:
      id:
        type: integer
        format: int64
      guidanceType:
        $ref: '#/definitions/GuidanceType'
      languages:
        type: array
        items:
          type: string
  Address:
    properties:
      id:
        type: integer
        format: int64
      addressLine1:
        type: string
      addressLine2:
        type: string
      addressLine3:
        type: string
      city:
        type: string
      created:
        type: string
        format: date-time
      state:
        type: string
      postalCode:
        type: string
      countryCode:
        type: string
      mapZoomLevel:
        type: integer
        format: int32
      geoPoint:
        $ref: '#/definitions/BomGeoPoint'
      unLocode:
        $ref: '#/definitions/UnLocode'
  BomGeoPoint:
    properties:
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
  UnLocode:
    properties:
      city:
        type: string
      country:
        type: string
  Place:
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      labels:
        type: array
        items:
          type: string
      address:
        $ref: '#/definitions/Address'
  ActivityType:
    type: string
    enum:
      - DAY_TOUR_OR_ACTIVITY
      - MULTI_DAY_TOUR
      - ATTRACTION
      - EVENT
  ActivityBookingType:
    type: string
    enum:
      - PASS
      - DATE
      - DATE_AND_TIME
  ActivityScheduleType:
    type: string
    enum:
      - FIXED
      - RECURRING
  ActivityCapacityType:
    type: string
    enum:
      - FREE_SALE
      - LIMITED
      - ON_REQUEST
  AccessibilityType:
    type: string
    enum:
      - LIMITED_MOBILITY
      - LIMITED_SIGHT
      - WHEELCHAIR
  ActivityMeetingType:
    type: string
    enum:
      - MEET_ON_LOCATION
      - PICK_UP
      - MEET_ON_LOCATION_OR_PICK_UP
  GuidanceType:
    type: string
    enum:
      - GUIDED
      - HEADPHONES
      - READING_MATERIAL
  ActivityAttribute:
    type: string
    enum:
      - FAMILY_FRIENDLY
      - ECO_FRIENDLY
      - ROMANTIC
      - LUXURY
      - RAINY_DAY
      - SKIP_THE_LINE
      - GROUP_FRIENDLY
      - INDOOR
      - OUTDOOR
      - PRIVATE_ACTIVITY
      - TAILOR_MADE
      - BEACH
  ActivityCategory:
    type: string
    enum:
      - WALKING_TOUR
      - BUS_OR_MINIVAN_TOUR
      - AIR_OR_HELICOPTER_TOUR
      - SAILING_OR_BOAT_TOUR
      - PRIVATE_CAR_TOUR
      - SEGWAY_TOUR
      - SNOWMOBILE_TOUR
      - ATV_OR_QUAD_TOUR
      - BIKE_TOUR
      - HOP_ON_HOP_OFF_TOUR
      - TOURIST_PASS
      - RAIL_PASS
      - AMUSEMENT_PARK
      - AIRPORT_LOUNGE
      - SHOWS_AND_MUSICALS
      - SPECTATOR_SPORTS
      - FESTIVAL
      - MUSEUMS_AND_EXHIBITIONS
      - SIGHTSEEING_ATTRACTION
      - ZOOS_AND_AQUARIUMS
      - SIGHTSEEING
      - ARTS_AND_CULTURE
      - CLASSES_AND_WORKSHOPS
      - CULINARY
      - NIGHTLIFE
      - SHOPPING
      - PHOTOGRAPHY
      - TV_AND_MOVIES
      - ESCAPE_GAME
      - SPA_AND_WELLNESS
      - ADVENTURE
      - WATER
      - NATURE
      - SAFARI_AND_WILDLIFE
      - BIRDWATCHING
      - DOLPHIN_OR_WHALEWATCHING
      - SURFING
      - CANOEING
      - CAVING
      - CLIMBING
      - DIVING
      - GLACIER_HIKING
      - HIKING
      - HORSEBACK_RIDING
      - ICE_CLIMBING
      - KAYAKING
      - RAFTING
      - SEA_ANGLING
      - HUNTING
      - FISHING
      - SKIING
      - SNORKELING
  PassExpiryType:
    type: string
    enum:
      - NEVER
      - FIXED_DATE
      - RELATIVE_DATE
  AddonSelectionType:
    type: string
    enum:
      - OPTIONAL
      - PRESELECTED
      - UNAVAILABLE
  AddonPricingType:
    type: string
    enum:
      - INCLUDED_IN_PRICE
      - PRICED_SEPARATELY
  ExtraSelectionType:
    type: string
    enum:
      - OPTIONAL
      - PRESELECTED
  ProductCategoryEnum:
    type: string
    enum:
      - ACCOMMODATION
      - ACTIVITIES
      - CAR_RENTALS
      - TRANSPORT
  TagGroupSubcategoryEnum:
    type: string
    enum:
      - NONE
      - ITEM
  RentalPricingModeEnum:
    type: string
    enum:
      - USE_PRICE_OF_FIRST_UNIT_FOR_ALL
      - CALCULATE_EACH_UNIT
  PickupPricingTypeEnum:
    type: string
    enum:
      - FREE
      - PER_BOOKING
      - PER_PERSON
  AccommodationSortField:
    type: string
    enum:
    - BEST_SELLING_GLOBAL
    - BEST_SELLING_IN_CHANNEL
    - BEST_SELLING_BY_VENDOR
    - ALPHABETIC
    - RANDOM
    - DISTANCE
  ActivitySortField:
    type: string
    enum:
      - BEST_SELLING_GLOBAL
      - BEST_SELLING_IN_CHANNEL
      - BEST_SELLING_BY_VENDOR
      - ALPHABETIC
      - RANDOM
  CarSortField:
    type: string
    enum:
      - BEST_SELLING_GLOBAL
      - BEST_SELLING_IN_CHANNEL
      - BEST_SELLING_BY_VENDOR
      - ALPHABETIC
      - RANDOM
      - SIZE
  TravelTypeEnum:
    type: string
    enum:
      - BUSINESS
      - LEISURE
      - CONFERENCE
  RoomBookingStatusEnum:
    type: string
    enum:
      - RESERVED
      - CHECKED_IN
      - CHECKED_OUT
      - NO_SHOW
  DistanceUnitEnum:
    type: string
    enum:
      - METERS
      - KILOMETERS
  RouteResultsType:
    type: string
    enum:
      - MULTIPLE_ROUTES
      - SINGLE_ROUTE
      - SINGLE_ROUTE_FLEX
  CapacityTypeEnum:
    type: string
    enum:
      - LIMITED
      - UNLIMITED
  CostItemTypeEnum:
    type: string
    enum:
      - ROOM_TYPE
      - ROOM_RATE
      - PRICING_CATEGORY
      - DEPARTURE_PRICING_CATEGORY
      - VEHICLE_TYPE
      - PICKUP
      - DEPARTURE_PICKUP
      - DROPOFF
      - DEPARTURE_DROPOFF
      - PICKUP_AND_DROPOFF
      - PRICING_CATEGORY_PEAK
      - EXTRA
  RouteWeightType:
    type: string
    enum:
      - LEGS
      - DURATION
      - PRICE
  PaymentPaidTypeEnum:
    type: string
    enum:
      - PAID_IN_FULL
      - DEPOSIT
      - FREE
      - NOT_PAID
      - OVERPAID
      - REFUND
      - INVOICED
      - GIFT_CARD
  BookingStatusEnum:
    type: string
    enum:
      - CART
      - REQUESTED
      - RESERVED
      - CONFIRMED
      - TIMEOUT
      - ABORTED
      - CANCELLED
      - ERROR
      - ARRIVED
      - NO_SHOW
      - REJECTED
  Status:
    type: string
    enum:
      - NEW
      - FINISHED
      - FAILED
      - NOT_FOUND
      - ERROR
  CustomLineItemTypeEnum:
    type: string
    enum:
      - BOOKING_FEE
      - CUSTOM_PRICE
      - DISCOUNT
      - CANCELLATION_FEE
      - OTHER
  PaymentTypeEnum:
    type: string
    enum:
      - WEB_PAYMENT
      - POINT_OF_SALE
      - CASH
      - VOUCHER
      - GIFT_CARD
  ExtranetUserRoleEnum:
    type: string
    enum:
      - VENDOR
      - BOOKING_AGENT
      - ADMIN
  VendorRoleEnum:
    type: string
    enum:
      - CONTENT_EDITOR
      - INVENTORY
      - PRICING
      - CONTRACTS
      - USER_MANAGER
      - FINANCE
      - DISTRIBUTION
      - SALES
      - SALES_MANAGER
      - INTEGRATION_MANAGER
      - SUPPLIER_MANAGER
      - TRANSLATOR
      - DRIVER
      - GUIDE
  BookingRoleEnum:
    type: string
    enum:
      - SUPPLIER
      - SELLER
      - COMBO_SUPPLIER
      - OTA_SELLER
      - OTA_SUPPLIER
      - AFFILIATE
      - CUSTOMER
      - NONE
  ResourceTypeEnum:
    type: string
    enum:
      - DRIVER
      - VEHICLE
      - GUIDE
      - ROOM
      - EQUIPMENT
  BookingPaymentOption:
    type: string
    enum:
      - NOT_PAID
      - FULLY_PAID
      - ENTER_MANUALLY
      - PROCESS_ONLINE
  SortOrder:
    type: string
    enum:
      - ASC
      - DESC
  BookingNoteTypeEnum:
    type: string
    enum:
      - GENERAL
      - FINANCE
      - OPERATIONS
  CustomerFieldEnum:
    type: string
    enum:
      - TITLE
      - FIRST_NAME
      - LAST_NAME
      - PERSONAL_ID_NUMBER
      - EMAIL
      - PHONE_NUMBER
      - NATIONALITY
      - GENDER
      - ORGANIZATION
      - PASSPORT_ID
      - PASSPORT_EXPIRY
      - ADDRESS
      - DATE_OF_BIRTH
      - LANGUAGE
  SalesSegmentEnum:
    type: string
    enum:
      - DIRECT_ONLINE
      - DIRECT_ONLINE_AFFILIATE
      - DIRECT_OFFLINE
      - DIRECT_OFFLINE_AFFILIATE
      - OTA
      - MARKETPLACE
      - MARKETPLACE_AFFILIATE
      - AGENT_AREA
  BookingChannelType:
    type: string
    enum:
      - BACKEND
      - OTA
      - OTHER
  AffiliateType:
    type: string
    enum:
      - VENDOR
      - NORMAL
  PlaceTypeEnum:
    type: string
    enum:
      - AIRPORT
      - PORT
      - STATION
      - ACCOMMODATION
      - OTHER
  PlaceInclusionTypeEnum:
    type: string
    enum:
      - ALL
      - FLAGGED
      - HANDPICKED
  PlaceExclusionTypeEnum:
    type: string
    enum:
      - NONE
      - FLAGGED
      - HANDPICKED
  QuestionDataTypeEnum:
    type: string
    enum:
      - SHORT_TEXT
      - LONG_TEXT
      - INT
      - DOUBLE
      - BOOLEAN
      - DATE
      - DATE_AND_TIME
  QuestionDataFormatEnum:
    type: string
    enum:
      - EMAIL_ADDRESS
      - URL
      - PHONE_NUMBER
      - COUNTRY
      - LANGUAGE
      - TIME
      - DAY_OF_MONTH
      - MONTH
      - YEAR
      - PATTERN
  ActivityQuestionContextEnum:
    type: string
    enum:
      - BOOKING
      - PASSENGER
      - EXTRA
  QuestionTriggerSelectionTypeEnum:
    type: string
    enum:
      - ANY
      - SELECTED_ONLY
