{
  "swagger": "2.0",
  "info": {
    "title": "Bokun API",
    "description": "<p>You can sign up for the <a href=\"http://eepurl.com/gDj7Yb\">Bokun API mailing list</a> to receive notifications when there are upcoming changes to this API.</p> <br/> <p> Further documentation of this api is available here <a href=\"https://docs.google.com/document/d/1tkLLqeAvVtRrDpsM1uJZJvhHg3EfsMw1z_SN8Lbe2Rs/pub\" target=\"_blank\">Bokun API documentation</a>. The booking checkout process is detailed in <a href=\"https://docs.google.com/document/d/1Azn8DvrlwyCYnz5TmGNvzwUW-Y9cuvOjLAqhxdEQbJQ/edit?usp=sharing\" target=\"_blank\">Booking API documentation</a>. </p> <br/> <p>You can generate a client in your preferred language using <a href=\"http://editor.swagger.io/#/?import=https://bokun.github.io/api-docs/bokun.yaml\">swagger editor</a></p>",
    "version": "1.0"
  },
  "schemes": [
    "https"
  ],
  "host": "api.bokun.io",
  "tags": [
    {
      "name": "accommodation",
      "description": "Operations for Accommodation"
    },
    {
      "name": "activity",
      "description": "Operations for Tours & Activities"
    },
    {
      "name": "booking",
      "description": "Operations for Bookings"
    },
    {
      "name": "car-rental",
      "description": "Operations for Rental Cars"
    },
    {
      "name": "category",
      "description": "Operations for Categories"
    },
    {
      "name": "country",
      "description": "Operations for countries and nationalities"
    },
    {
      "name": "currency",
      "description": "Operations for Supported Currencies"
    },
    {
      "name": "question",
      "description": "Operations for Booking questions and answers"
    },
    {
      "name": "checkout",
      "description": "Operations for Checkout"
    },
    {
      "name": "language",
      "description": "Operations for Supported Languages"
    },
    {
      "name": "product-list",
      "description": "Operations for Product Lists"
    },
    {
      "name": "route",
      "description": "Operations for Transport routes"
    },
    {
      "name": "shopping-cart",
      "description": "Operations for Shopping carts"
    },
    {
      "name": "shore-excursions",
      "description": "Operations for Shore Excursions"
    },
    {
      "name": "tag",
      "description": "Operations for Tags"
    }
  ],
  "paths": {
    "/accommodation.json/search": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "accommodationSearch",
        "summary": "Search accommodations and availability",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccommodationQuery"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/SearchResultsDto"
            }
          }
        }
      }
    },
    "/accommodation.json/check-room-availability": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "checkRoomAvailability",
        "summary": "Get a list of all rooms available for a given stay interval.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomAvailabilityRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RoomAvailabilityResponseDto"
            }
          }
        }
      }
    },
    "/accommodation.json/{id}/check-availability": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "checkAccommodationAvailability",
        "summary": "Check availability for a selected Accommodation",
        "parameters": [
          {
            "in": "path",
            "description": "ID of the Accommodation",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccommodationQuery"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AccommodationAvailabilityReportDto"
            }
          }
        }
      }
    },
    "/accommodation.json/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "getAccommodation",
        "summary": "Get Accommodation by ID",
        "parameters": [
          {
            "in": "path",
            "description": "ID of accommodation to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AccommodationDto"
            }
          }
        }
      }
    },
    "/accommodation.json/{id}/rooms": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "getRoomsByRoomType",
        "summary": "Get a list of all rooms for a particular Accommodation.",
        "parameters": [
          {
            "in": "path",
            "description": "ID of the accommodation",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RoomsGroupedByTypeContainer"
            }
          }
        }
      }
    },
    "/accommodation.json/availabilities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "getAccommodationAvailabilities",
        "summary": "Get room availabilities for one or more accommodations over an interval",
        "parameters": [
          {
            "in": "query",
            "description": "Comma separated IDs of the Accommodations",
            "name": "ids",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The start date of the interval (yyyy-MM-dd)",
            "name": "start",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The end date of the interval (yyyy-MM-dd)",
            "name": "end",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity availability response.",
            "schema": {
              "$ref": "#/definitions/AccommodationAvailabilitiesDto"
            }
          }
        }
      }
    },
    "/accommodation.json/slug/{slug}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "accommodation"
        ],
        "operationId": "findAccommodationBySlug",
        "summary": "Look up Accommodation by slug",
        "parameters": [
          {
            "in": "path",
            "description": "The slug of the accommodation to be fetched",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AccommodationDto"
            }
          }
        }
      }
    },
    "/car-rental.json/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "car-rental"
        ],
        "operationId": "listCarRentals",
        "summary": "List all car rentals",
        "parameters": [
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarRentalSearchResultsDto"
            }
          }
        }
      }
    },
    "/car-rental.json/slug/{slug}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "car-rental"
        ],
        "operationId": "findCarRentalBySlug",
        "summary": "Look up Car Rental by slug",
        "parameters": [
          {
            "in": "path",
            "description": "The slug of the car rental to be fetched",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarRentalDto"
            }
          }
        }
      }
    },
    "/car-rental.json/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "car-rental"
        ],
        "operationId": "getCarRental",
        "summary": "Get Car Rental by ID",
        "parameters": [
          {
            "in": "path",
            "description": "ID of car rentals to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarRentalDto"
            }
          }
        }
      }
    },
    "/car-rental.json/search-cars": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "car-rental"
        ],
        "operationId": "searchCars",
        "summary": "Search types of rental cars",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarQuery"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarSearchResultsDto"
            }
          }
        }
      }
    },
    "/currency.json/findAll": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "currency"
        ],
        "operationId": "allCurrencies",
        "summary": "Get all Supported Currencies",
        "description": "Get a list of all the available currencies, along with conversion rates to ISK.",
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyDto"
              }
            }
          }
        }
      }
    },
    "/tag.json/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "tag"
        ],
        "operationId": "getTagGroups",
        "summary": "Get the tag groups",
        "parameters": [
          {
            "in": "query",
            "description": "Comma separated list of required flags",
            "name": "flags",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagGroupDto"
              }
            }
          }
        }
      }
    },
    "/category.json/{productType}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "category"
        ],
        "operationId": "categoriesByProductType",
        "summary": "Get all categories for the specified product type",
        "parameters": [
          {
            "in": "path",
            "description": "The product type to be categorized",
            "name": "productType",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Specifies whether to get only categories for bookable items in this product type or not",
            "name": "item",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Comma separated list of required flags",
            "name": "flags",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryDto"
              }
            }
          }
        }
      }
    },
    "/activity.json/{id}/upcoming-availabilities/{max}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getUpcomingAvailabilities",
        "summary": "Get the next upcoming Activity availabilities",
        "description": "Get the list of upcoming availabilities for the activity id (including sold-outs, if parameter \"includeSoldOut\" == true.)",
        "parameters": [
          {
            "in": "path",
            "description": "ID of activity to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "description": "The max number of upcoming availabilities to get.",
            "name": "max",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          },
          {
            "in": "query",
            "description": "Specify whether to include availabilities that are sold out.",
            "name": "includeSoldOut",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityAvailabilityDto"
            }
          }
        }
      }
    },
    "/activity.json/slug/{slug}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "findActivityBySlug",
        "summary": "Look up Activity by slug",
        "description": "Use corresponding slug (human readable string that is used to identify the product) for fetching this product. Slug is set in Product overview -> Actions -> Slugs.",
        "parameters": [
          {
            "in": "path",
            "description": "The slug of the activity to be fetched",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityDto"
            }
          }
        }
      }
    },
    "/activity.json/{id}/pickup-places": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getPickupPlaces",
        "summary": "Get Pickup / Dropoff places for an Activity",
        "parameters": [
          {
            "in": "path",
            "description": "ID of the Activity",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityPlacesDto"
            }
          }
        }
      }
    },
    "/activity.json/search": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "activitySearch",
        "summary": "Search activities and availability",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityQuery"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/SearchResultsDto"
            }
          }
        }
      }
    },
    "/activity.json/{id}/availabilities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getActivityAvailabilities",
        "summary": "Get Activity availabilities for an interval",
        "parameters": [
          {
            "in": "path",
            "description": "ID of activity to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The start date of the interval ('yyyy-MM-dd')",
            "name": "start",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The end date of the interval ('yyyy-MM-dd')",
            "name": "end",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "Specify whether to include availabilities that are sold out.",
            "name": "includeSoldOut",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActivityAvailabilityDto"
              }
            }
          }
        }
      }
    },
    "/activity.json/active-ids": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getActivityIds",
        "summary": "Get IDs of all active Activities that can be booked",
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/SellableActivities"
            }
          }
        }
      }
    },
    "/activity.json/list-updated": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getUpdatedActivities",
        "summary": "Get ids/timestamps of all Activities modified in specified date range",
        "parameters": [
          {
            "in": "query",
            "description": "date range start inclusive (ISO yyyy-MM-ddTHH:mm:ss.SSS - time can be ommitted or partial, time zone UTC)",
            "name": "fromDate",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "date range end exclusive (ISO yyyy-MM-ddTHH:mm:ss.SSS - time can be ommitted or partial, time zone UTC)",
            "name": "toDate",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/UpdatedProductsResponse"
            }
          }
        }
      }
    },
    "/activity.json/list-by-id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "activityListByIds",
        "summary": "Get a list of Activities matching the IDs provided",
        "parameters": [
          {
            "in": "query",
            "description": "Comma separated list of Activity IDs",
            "name": "ids",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/SearchResultsDto"
            }
          }
        }
      }
    },
    "/activity.json/{id}/price-list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "priceList",
        "summary": "Get Activity price list",
        "parameters": [
          {
            "in": "path",
            "description": "ID of activity for which we want prices",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code in which we want the prices.",
            "name": "currency",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityPriceListDto"
            }
          }
        }
      }
    },
    "/activity.json/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "activity"
        ],
        "operationId": "getActivity",
        "summary": "Get Activity by ID",
        "description": "Use unique ID for fetching comprehensive information on this activity product.",
        "parameters": [
          {
            "in": "path",
            "description": "ID of activity to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityDto"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/car-rental": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "addCarRentalToSessionCart",
        "summary": "Add car rental booking to a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object describing the car rental booking request, can be array of such objects",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarRentalBookingRequestDto"
            }
          },
          {
            "in": "query",
            "description": "Affiliate tracking code.",
            "name": "trackingCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "ID of the vessel associated with this booking.",
            "name": "vesselId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "ID of the harbour associated with this booking.",
            "name": "harbourId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "getSessionCart",
        "summary": "Get a session shopping cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart to be fetched",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-car/{carBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeCarFromSessionCart",
        "summary": "Remove a car booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the car booking to remove",
            "name": "carBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/route": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "addRouteToSessionCart",
        "summary": "Add route booking to a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object describing the route booking request, can be array of such objects",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportBookingRequestDto"
            }
          },
          {
            "in": "query",
            "description": "Affiliate tracking code.",
            "name": "trackingCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "ID of the vessel associated with this booking.",
            "name": "vesselId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "ID of the harbour associated with this booking.",
            "name": "harbourId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-room/{roomBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeRoomFromSessionCart",
        "summary": "Remove a room booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the room booking to remove",
            "name": "roomBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-extra/{bType}/{bId}/{eId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeExtraBookingFromSessionCart",
        "summary": "Remove an extra booking from an existing parent booking in a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The booking type",
            "name": "bType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the parent booking of this type",
            "name": "bId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "description": "The ID of the extra to be removed (NOT the extra booking)",
            "name": "eId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/accommodation": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "addAccommodationToSessionCart",
        "summary": "Add accommodation booking to a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object describing the accommodation booking request, can be array of such objects",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccommodationBookingRequestDto"
            }
          },
          {
            "in": "query",
            "description": "Affiliate tracking code.",
            "name": "trackingCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "ID of the vessel associated with this booking.",
            "name": "vesselId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "ID of the harbour associated with this booking.",
            "name": "harbourId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/activity": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "addActivityToSessionCart",
        "summary": "Add activity booking to a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object describing the activity booking request, can be array of such objects",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityBookingRequestDto"
            }
          },
          {
            "in": "query",
            "description": "Affiliate tracking code.",
            "name": "trackingCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "ID of the vessel associated with this booking.",
            "name": "vesselId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "ID of the harbour associated with this booking.",
            "name": "harbourId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-accommodation/{accommodationBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeAccommodationFromSessionCart",
        "summary": "Remove an accommodation booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the accommodation booking to remove",
            "name": "accommodationBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-activity/{activityBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeActivityFromSessionCart",
        "summary": "Remove an activity booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the activity booking to remove",
            "name": "activityBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-car-rental/{carRentalBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeCarRentalFromSessionCart",
        "summary": "Remove a car rental booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the car rental booking to remove",
            "name": "carRentalBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/add-or-update-extra/{bType}/{bId}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "addOrUpdateExtraBookingInSessionCart",
        "summary": "Add or update an extra booking for an existing parent booking in a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The booking type",
            "name": "bType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the parent booking of this type",
            "name": "bId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "description": "JSON object describing the extra booking request",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtraBookingRequestDto"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/shopping-cart.json/session/{sessionId}/remove-route/{routeBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "shopping-cart"
        ],
        "operationId": "removeRouteFromSessionCart",
        "summary": "Remove a route booking from a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The ID of the route booking to remove",
            "name": "routeBookingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/language.json/findAll": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "language"
        ],
        "operationId": "allLanguages",
        "summary": "Get all Languages supported by the Channel",
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TranslationLanguageDto"
              }
            }
          }
        }
      }
    },
    "/route.json/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "route"
        ],
        "operationId": "listRoutes",
        "summary": "List ",
        "parameters": [
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RouteDto"
            }
          }
        }
      }
    },
    "/route.json/check-availability": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "route"
        ],
        "operationId": "checkRouteAvailability",
        "summary": "Get availability report for a particular route",
        "parameters": [
          {
            "in": "body",
            "description": "JSON query",
            "name": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportQuery"
            }
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RouteAvailabilityReportDto"
            }
          }
        }
      }
    },
    "/route.json/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "route"
        ],
        "operationId": "getRoute",
        "summary": "Get Route by ID",
        "parameters": [
          {
            "in": "path",
            "description": "ID of transport route to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RouteDto"
            }
          }
        }
      }
    },
    "/question.json/shopping-cart/{sessionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "forShoppingCart",
        "summary": "Get questions for the shopping cart specified",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The questions",
            "schema": {
              "$ref": "#/definitions/BookingQuestionsDto"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "answerShoppingCart",
        "summary": "Answer questions for the shopping cart specified",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "The answers",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingAnswersDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API response",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/question.json/booking/{bookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "forBooking",
        "summary": "Get questions for the booking specified",
        "parameters": [
          {
            "in": "path",
            "description": "The ID of the booking",
            "name": "bookingId",
            "required": true,
            "format": "int64",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The questions",
            "schema": {
              "$ref": "#/definitions/BookingQuestionsDto"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "answerBooking",
        "summary": "Answer questions for the booking specified",
        "parameters": [
          {
            "in": "path",
            "description": "The ID of the booking",
            "name": "bookingId",
            "required": true,
            "format": "int64",
            "type": "integer"
          },
          {
            "in": "body",
            "description": "The answers",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingAnswersDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Response",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/question.json/activity-booking/{activityBookingId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "forActivityBooking",
        "summary": "Get questions for the activity booking specified",
        "parameters": [
          {
            "in": "path",
            "description": "The ID of the activity booking",
            "name": "activityBookingId",
            "required": true,
            "format": "int64",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Questions",
            "schema": {
              "$ref": "#/definitions/BookingQuestionsDto"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "question"
        ],
        "operationId": "answerActivityBooking",
        "summary": "Answer questions for the activity booking specified",
        "parameters": [
          {
            "in": "path",
            "description": "The ID of the activity booking",
            "name": "activityBookingId",
            "required": true,
            "format": "int64",
            "type": "integer"
          },
          {
            "in": "body",
            "description": "The answers",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingAnswersDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API response",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartGet",
        "summary": "Get the contents of the shopping cart with the session ID supplied.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/activity": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartAddActivity",
        "summary": "Add an activity to the shopping cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "The activity booking request",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivityBookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/remove/{productBookingConfirmationCode}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartRemove",
        "summary": "Remove a product booking from the shopping cart.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The confirmation code of the product booking you want to remove",
            "name": "productBookingConfirmationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/apply-promo-code/{promoCode}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartApplyPromoCode",
        "summary": "Apply a promo code to the shopping cart.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The promo code you wish to apply to the shopping cart",
            "name": "promoCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/remove-promo-code": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartRemovePromoCode",
        "summary": "Remove any promo code from the shopping cart.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/apply-gift-card/{giftCardCode}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartApplyGiftCard",
        "summary": "Apply a gift card to the shopping cart.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The gift card code you wish to apply to the shopping cart",
            "name": "giftCardCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/cart.json/{sessionId}/track-affiliate/{affiliateCode}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "cart"
        ],
        "operationId": "cartApplyAffiliate",
        "summary": "Apply an affiliate tracking code to the shopping cart.",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The affiliate tracking code you wish to apply to the shopping cart",
            "name": "affiliateCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The shopping cart",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/checkout.json/options/shopping-cart/{sessionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "checkout"
        ],
        "operationId": "checkoutOptionsForShoppingCart",
        "summary": "Get checkout options for the shopping cart specified",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of shopping cart",
            "name": "sessionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The checkout options",
            "schema": {
              "$ref": "#/definitions/Checkout"
            }
          }
        }
      }
    },
    "/checkout.json/options/booking-request": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "checkout"
        ],
        "operationId": "checkoutOptionsForBookingRequest",
        "summary": "Get checkout options for the booking request specified",
        "parameters": [
          {
            "in": "body",
            "description": "The booking request",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The checkout options",
            "schema": {
              "$ref": "#/definitions/Checkout"
            }
          }
        }
      }
    },
    "/checkout.json/submit": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "checkout"
        ],
        "operationId": "processCheckout",
        "summary": "Process the checkout request",
        "parameters": [
          {
            "in": "body",
            "description": "The booking request",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckoutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The checkout response",
            "schema": {
              "$ref": "#/definitions/CheckoutResponse"
            }
          }
        }
      }
    },
    "/checkout.json/confirm-reserved/{code}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "checkout"
        ],
        "operationId": "confirmReservedCheckout",
        "summary": "Confirm a reservation made via checkout",
        "parameters": [
          {
            "in": "path",
            "description": "The booking confirmation code",
            "name": "code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "The booking request",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingConfirmation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The checkout response",
            "schema": {
              "$ref": "#/definitions/CheckoutResponse"
            }
          }
        }
      }
    },
    "/booking.json/guest/{sessionId}/reserve": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "guestReserve",
        "summary": "Reserve the booking for the guest (before payment)",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of the guest",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "Comma separated names of parameters for the payment provider.",
            "name": "paymentParameters",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingReservationRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/guest/{sessionId}/reserved": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "guestGetReserved",
        "summary": "Get a list of reserved bookings for the guest (if any exist)",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of the guest",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookingDetailsDto"
              }
            }
          }
        }
      }
    },
    "/booking.json/{confirmationCode}/move-back-to-cart/session/{sessionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "moveReservedBookingBackToSessionCart",
        "summary": "Move a reserved booking back to a session cart",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of the guest",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The confirmation code of the booking. The booking ID can also be used.",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "IS"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ShoppingCart"
            }
          }
        }
      }
    },
    "/booking.json/{confirmationCode}/abort-reserved": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "abortReservedBooking",
        "summary": "Abort a reserved booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the booking. The booking ID can also be used.",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "Specifies whether the booking is aborted due to a timeout.",
            "name": "timeout",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/booking.json/guest/{sessionId}/reserve-pay-confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "guestReserveChargeAndConfirm",
        "summary": "Reserve the booking for the guest, charge the card and confirm",
        "parameters": [
          {
            "in": "path",
            "description": "The session ID of the guest",
            "name": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "Specifies whether to send email booking confirmation to the customer",
            "name": "sendCustomerNotification",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingReservationRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/{confirmationCode}/payment-error": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "paymentError",
        "summary": "Indicate that an error occurred in payment",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the booking. The booking ID can also be used.",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object describing the error",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/booking.json/{confirmationCode}/confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "confirmBooking",
        "summary": "Confirm a booking (after payment)",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the booking. The booking ID can also be used.",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "IS"
          },
          {
            "in": "query",
            "description": "Specifies whether to send email booking confirmation to the customer",
            "name": "sendCustomerNotification",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "body",
            "description": "The confirmation object, which can optionally contain payments and other data",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookingConfirmationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/cancel-booking/{confirmationCode}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "cancelBooking",
        "summary": "Cancel for given booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the booking that you want to cancel",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cancelBooking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/booking.json/booking/{confirmationCode}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "bookingByConfirmationCode",
        "summary": "Fetch a booking by confirmation code",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the booking",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "IS"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/booking/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "bookingById",
        "summary": "Fetch a booking by id",
        "parameters": [
          {
            "in": "path",
            "description": "The id of the booking",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "IS"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/{id}/summary": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "getSummary",
        "summary": "Get summary for given booking",
        "parameters": [
          {
            "in": "path",
            "description": "The id of the booking",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/booking.json/edit": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "bookingExecuteEdit",
        "summary": "Edit bookings",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingEditResult"
            }
          }
        }
      }
    },
    "/booking.json/product-booking-search": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "productBookingSearch",
        "summary": "Search for bookings and return a list of booking information",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductBookingQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductBookingSearchResultsDto"
              }
            }
          }
        }
      }
    },
    "/booking.json/cancel-product-booking/{productConfirmationCode}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "cancelProductBooking",
        "summary": "Cancel for given product booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the activity booking",
            "name": "productConfirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cancelProductBooking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/booking.json/activity-booking/reserve-and-confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "reserveAndConfirmActivityBooking",
        "summary": "Reserve and confirm a single activity booking (bypasses shopping cart)",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleActivityBookingRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/activity-booking/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "activityBooking",
        "summary": "Show activity booking information",
        "parameters": [
          {
            "in": "path",
            "description": "The id or confirmation code for the product booking",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/activity-booking/{confirmationCode}/customer-status/{status}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "setActivityBookingCustomerStatus",
        "summary": "Change the arrived status of an activity booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the product booking",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The arrived status (yes/no true/false)",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ActivityBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/activity-booking/{productConfirmationCode}/ticket": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "getActivityTicket",
        "summary": "Get ticket for given activity booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the activity booking",
            "name": "productConfirmationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/booking.json/route-booking/reserve-and-confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "reserveAndConfirmRouteBooking",
        "summary": "Reserve and confirm a single route booking (bypasses shopping cart)",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleTransportBookingRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/route-booking/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "routeBooking",
        "summary": "Show route booking information",
        "parameters": [
          {
            "in": "path",
            "description": "The id or confirmation code for the product booking",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RouteBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/route-booking/{confirmationCode}/customer-status/{status}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "setRouteBookingCustomerStatus",
        "summary": "Change the arrived status of a route booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the product booking",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The arrived status (yes/no or true/false)",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/RouteBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/car-rental-booking/reserve-and-confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "reserveAndConfirmCarRentalBooking",
        "summary": "Reserve and confirm a single car rental booking (bypasses shopping cart)",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleCarRentalBookingRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/car-rental-booking/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "carRentalBooking",
        "summary": "Show car rental booking information",
        "parameters": [
          {
            "in": "path",
            "description": "The id or confirmation code for the product booking",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarRentalBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/car-rental-booking/{confirmationCode}/customer-status/{status}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "setCarRentalBookingCustomerStatus",
        "summary": "Change the arrived status of a car rental booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the product booking",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The arrived status (yes/no or true/false)",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/CarRentalBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/car-rental-booking/{productConfirmationCode}/ticket": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "getCarRentalTicket",
        "summary": "Get ticket for given car rental booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the car rental booking",
            "name": "productConfirmationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/booking.json/transport-booking/{productConfirmationCode}/ticket": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "getTransportTicket",
        "summary": "Get ticket for given transport booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the transport booking",
            "name": "productConfirmationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/booking.json/accommodation-booking/reserve-and-confirm": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "reserveAndConfirmAccommodationBooking",
        "summary": "Reserve and confirm a single accommodation booking (bypasses shopping cart)",
        "parameters": [
          {
            "in": "body",
            "description": "JSON object",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SingleAccommodationBookingRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/BookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/accommodation-booking/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "accommodationBooking",
        "summary": "Show accommodation booking information",
        "parameters": [
          {
            "in": "path",
            "description": "The id or confirmation code for the product booking",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AccommodationBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/accommodation-booking/{confirmationCode}/customer-status/{status}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "setAccommodationBookingCustomerStatus",
        "summary": "Change the arrived status of an accommodation booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code for the product booking",
            "name": "confirmationCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "The arrived status (yes/no true/false)",
            "name": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/AccommodationBookingDetailsDto"
            }
          }
        }
      }
    },
    "/booking.json/accommodation-booking/{productConfirmationCode}/ticket": {
      "get": {
        "produces": [
          "application/pdf"
        ],
        "tags": [
          "booking"
        ],
        "operationId": "getAccommodationTicket",
        "summary": "Get ticket for given accommodation booking",
        "parameters": [
          {
            "in": "path",
            "description": "The confirmation code of the accommodation booking",
            "name": "productConfirmationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          }
        }
      }
    },
    "/product-list.json/slug/{slug}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "product-list"
        ],
        "operationId": "getProductListBySlug",
        "summary": "Get Product List by slug",
        "parameters": [
          {
            "in": "path",
            "description": "The slug of the Product List to be fetched",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "Comma separated list of required flags",
            "name": "flags",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ProductListDto"
            }
          }
        }
      }
    },
    "/product-list.json/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "product-list"
        ],
        "operationId": "getAllProductLists",
        "summary": "Get all available Product Lists",
        "parameters": [
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductListDescriptionDto"
              }
            }
          }
        }
      }
    },
    "/product-list.json/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "product-list"
        ],
        "operationId": "getProductListById",
        "summary": "Get Product List by ID",
        "parameters": [
          {
            "in": "path",
            "description": "ID of the Product List to be fetched",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "description": "The currency code to use for calculating prices.",
            "name": "currency",
            "required": false,
            "type": "string",
            "default": "ISK"
          },
          {
            "in": "query",
            "description": "Comma separated list of required flags",
            "name": "flags",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "description": "The language the content should be served in",
            "name": "lang",
            "required": false,
            "type": "string",
            "default": "EN"
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "$ref": "#/definitions/ProductListDto"
            }
          }
        }
      }
    },
    "/country.json/findAll": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "country"
        ],
        "operationId": "allCountries",
        "summary": "Get all supported countries/nationalities",
        "description": "Get a list of all the available countries, along with the ISO code for each country.",
        "responses": {
          "200": {
            "description": "No response was specified",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CountryDto"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActivitiesBySupplier": {
      "type": "object",
      "properties": {
        "supplierId": {
          "format": "int64",
          "type": "integer"
        },
        "activityIds": {
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        }
      }
    },
    "SellableActivities": {
      "type": "object",
      "properties": {
        "suppliers": {
          "items": {
            "$ref": "#/definitions/ActivitiesBySupplier"
          },
          "type": "array"
        }
      }
    },
    "UpdatedProductsResponse": {
      "type": "object",
      "properties": {
        "updatedProducts": {
          "items": {
            "$ref": "#/definitions/ProductUpdateDetails"
          },
          "type": "array"
        }
      }
    },
    "ProductUpdateDetails": {
      "type": "object",
      "properties": {
        "productId": {
          "format": "int64",
          "type": "integer"
        },
        "updateTimestamp": {
          "type": "string"
        }
      }
    },
    "ItemQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "itemTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "itemTypeTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "people": {
          "items": {
            "$ref": "#/definitions/PersonQuestionsDto"
          },
          "type": "array"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "AccommodationBookingAnswersDto": {
      "type": "object",
      "properties": {
        "accommodationId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "rooms": {
          "items": {
            "$ref": "#/definitions/RoomAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "RoomBookingRequest": {
      "type": "object",
      "properties": {
        "roomTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "guests": {
          "items": {
            "$ref": "#/definitions/PersonAnswersDto"
          },
          "type": "array"
        },
        "roomRateId": {
          "format": "int64",
          "type": "integer"
        },
        "roomId": {
          "format": "int64",
          "type": "integer"
        },
        "externalReference": {
          "type": "string"
        },
        "checkInDate": {
          "type": "string"
        },
        "checkOutDate": {
          "type": "string"
        },
        "adults": {
          "format": "int32",
          "type": "integer"
        },
        "children": {
          "format": "int32",
          "type": "integer"
        },
        "infants": {
          "format": "int32",
          "type": "integer"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "QuestionSpecificationDto": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string",
          "description": "Specifies system ID of the question."
        },
        "questionCode": {
          "type": "string",
          "description": "Specifies external code of the question (created by question owner)."
        },
        "label": {
          "type": "string",
          "description": "Specifies question title."
        },
        "help": {
          "type": "string",
          "description": "Explanatory text for this question."
        },
        "placeholder": {
          "type": "string",
          "description": "The placeholder text for this question."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies if the answer to this question is mandatory."
        },
        "defaultValue": {
          "type": "string",
          "description": "Specifies default answer value, filled in."
        },
        "dataType": {
          "$ref": "#/definitions/AnswerDataType",
          "description": "Data type of the answer object for this question."
        },
        "dataFormat": {
          "enum": [
            "EMAIL_ADDRESS",
            "URL",
            "PHONE_NUMBER",
            "COUNTRY",
            "LANGUAGE",
            "TIME",
            "DAY_OF_MONTH",
            "MONTH",
            "YEAR",
            "PATTERN"
          ],
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "description": "The list of flags added to this question.",
          "items": {
            "type": "string"
          }
        },
        "selectFromOptions": {
          "type": "boolean",
          "description": "Specifies if the answer can be selected from a set of preselected options."
        },
        "selectMultiple": {
          "type": "boolean",
          "description": "Specifies if the answer can have multiple options selected when answering."
        },
        "answerOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnswerOptionDto"
          }
        },
        "answers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "originalQuestion": {
          "type": "string"
        }
      }
    },
    "AnswerOptionDto": {
      "type": "object",
      "description": "Answer option.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Answer option title."
        },
        "label": {
          "type": "string",
          "description": "Answer option label."
        }
      }
    },
    "ActivityBookingQuestion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of the question."
        },
        "personalData": {
          "type": "boolean",
          "description": "Specifies if this question asks for personal data."
        },
        "questionCode": {
          "type": "string",
          "description": "Specifies question external code if used."
        },
        "label": {
          "type": "string",
          "description": "Specifies question title."
        },
        "help": {
          "type": "string",
          "description": "Explanatory text for this question."
        },
        "placeholder": {
          "type": "string",
          "description": "The placeholder text for this question."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies if the answer to this question is mandatory."
        },
        "defaultValue": {
          "type": "string",
          "description": "Specifies default answer value, filled in."
        },
        "dataType": {
          "$ref": "#/definitions/AnswerDataType",
          "description": "Data type of the answer object for this question."
        },
        "flags": {
          "type": "array",
          "description": "The list of flags added to this question.",
          "items": {
            "type": "string"
          }
        },
        "selectFromOptions": {
          "type": "boolean",
          "description": "Specifies if the answer can be selected from a set of preselected options."
        },
        "selectMultiple": {
          "type": "boolean",
          "description": "Specifies if the answer can have multiple options selected when answering."
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnswerOption"
          },
          "description": "The list of answer options for this question."
        },
        "context": {
          "type": "string",
          "enum": [
            "BOOKING",
            "PASSENGER",
            "EXTRA"
          ],
          "description": "Specifies if the question should be asked per booking, passenger or extra."
        },
        "pricingCategoryTriggerSelection": {
          "$ref": "#/definitions/QuestionTriggerSelectionTypeEnum"
        },
        "pricingCategoryTriggers": {
          "type": "array",
          "description": "The list of pricing categories to which this question is applied.",
          "items": {
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64",
                "description": "Specifies ID of pricing category to which this question is applied."
              },
              "label": {
                "type": "string",
                "description": "Specifies title of pricing category to which this question is applied."
              }
            }
          }
        },
        "rateTriggerSelection": {
          "$ref": "#/definitions/QuestionTriggerSelectionTypeEnum"
        },
        "rateTriggers": {
          "type": "array",
          "description": "The list of rates to which this question is applied.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64",
                "description": "Specifies ID of rate to which this question is applied."
              },
              "label": {
                "type": "string",
                "description": "Specifies title of rate to which this question is applied."
              }
            }
          }
        },
        "extraTriggerSelection": {
          "$ref": "#/definitions/QuestionTriggerSelectionTypeEnum"
        },
        "extraTriggers": {
          "type": "array",
          "description": "The list of extras to which this question is applied.",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64",
                "description": "Specifies ID of extra to which this question is applied."
              },
              "label": {
                "type": "string",
                "description": "Specifies title of extra to which this question is applied."
              }
            }
          }
        }
      }
    },
    "QuestionTriggerSelectionTypeEnum": {
      "type": "string",
      "enum": [
        "ANY",
        "SELECTED_ONLY"
      ]
    },
    "AnswerDataType": {
      "type": "string",
      "enum": [
        "SHORT_TEXT",
        "LONG_TEXT",
        "INT",
        "DOUBLE",
        "BOOLEAN",
        "DATE",
        "DATE_AND_TIME",
        "OPTIONS"
      ]
    },
    "AnswerOption": {
      "type": "object",
      "description": "Answer option.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Answer option title."
        },
        "value": {
          "type": "string",
          "description": "Answer option value."
        }
      }
    },
    "AccommodationBookingQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "accommodationId": {
          "format": "int64",
          "type": "integer"
        },
        "accommodationTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "rooms": {
          "items": {
            "$ref": "#/definitions/RoomQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "AnswerDto": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ItemBookingRequest": {
      "type": "object",
      "properties": {
        "itemTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "people": {
          "items": {
            "$ref": "#/definitions/PersonAnswersDto"
          },
          "type": "array"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "BookingDetailsDto": {
      "type": "object",
      "properties": {
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer",
          "xml": {
            "name": "id"
          }
        },
        "language": {
          "type": "string"
        },
        "confirmationCode": {
          "type": "string"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "externalBookingEntityName": {
          "type": "string"
        },
        "externalBookingEntityCode": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BookingStatusEnum"
        },
        "currency": {
          "type": "string"
        },
        "totalPrice": {
          "type": "number"
        },
        "totalPaid": {
          "type": "number"
        },
        "totalDue": {
          "type": "number"
        },
        "totalPriceConverted": {
          "type": "number"
        },
        "paymentProviderDetails": {
          "$ref": "#/definitions/PaymentProviderDetailsDto"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "invoice": {
          "$ref": "#/definitions/CustomerInvoiceDto"
        },
        "customerPayments": {
          "items": {
            "$ref": "#/definitions/CustomerPaymentDto",
            "xml": {
              "name": "customerPayment"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "extranetUser": {
          "$ref": "#/definitions/ExtranetUserDto"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentPaidTypeEnum"
        },
        "affiliate": {
          "$ref": "#/definitions/AffiliateDto"
        },
        "vessel": {
          "$ref": "#/definitions/VesselDto"
        },
        "harbour": {
          "$ref": "#/definitions/HarbourDto"
        },
        "agent": {
          "$ref": "#/definitions/BookingAgentWithLinksDto"
        },
        "seller": {
          "$ref": "#/definitions/VendorDto"
        },
        "bookingChannel": {
          "$ref": "#/definitions/BookingChannelDto"
        },
        "systemConfig": {
          "$ref": "#/definitions/IntegratedSystemConfigDto"
        },
        "accommodationBookings": {
          "items": {
            "$ref": "#/definitions/AccommodationBookingDetailsDto",
            "xml": {
              "name": "accommodationBooking"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "carRentalBookings": {
          "items": {
            "$ref": "#/definitions/CarRentalBookingDetailsDto",
            "xml": {
              "name": "carRentalBooking"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "activityBookings": {
          "items": {
            "$ref": "#/definitions/ActivityBookingDetailsDto",
            "xml": {
              "name": "activityBooking"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "routeBookings": {
          "items": {
            "$ref": "#/definitions/RouteBookingDetailsDto",
            "xml": {
              "name": "routeBooking"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "bookingFields": {
          "items": {
            "$ref": "#/definitions/BookingFieldDto",
            "xml": {
              "name": "bookingField"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        }
      },
      "xml": {
        "name": "booking"
      }
    },
    "PersonAnswersDto": {
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        }
      }
    },
    "NameValuePairDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PaymentProviderDetailsDto": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "supportedMethods": {
          "items": {
            "type": "string",
            "xml": {
              "name": "supportedMethod"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        },
        "parameters": {
          "items": {
            "$ref": "#/definitions/PaymentProviderParam",
            "xml": {
              "name": "paymentProviderParam"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        }
      }
    },
    "PaymentProviderParam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AffiliateDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "idNumber": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "trackingCode": {
          "type": "string"
        },
        "flags": {
          "items": {
            "type": "string",
            "xml": {
              "name": "flag"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        }
      },
      "xml": {
        "name": "affiliate"
      }
    },
    "TicketReference": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "productTitle": {
          "type": "string"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "ticket": {
          "type": "string"
        }
      }
    },
    "BookingChannelDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "externalId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "backend": {
          "type": "boolean"
        },
        "overrideVoucherHeader": {
          "type": "boolean"
        },
        "voucherName": {
          "type": "string"
        },
        "voucherPhoneNumber": {
          "type": "string"
        },
        "voucherEmailAddress": {
          "type": "string"
        },
        "voucherLogoStyle": {
          "type": "string"
        },
        "voucherWebsite": {
          "type": "string"
        },
        "voucherLogo": {
          "$ref": "#/definitions/PhotoDto"
        },
        "flags": {
          "items": {
            "type": "string",
            "xml": {
              "name": "flag"
            }
          },
          "type": "array",
          "xml": {
            "wrapped": true
          }
        }
      },
      "xml": {
        "name": "bookingChannel"
      }
    },
    "BookingAnswersDto": {
      "type": "object",
      "properties": {
        "mainContactDetails": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "activityBookings": {
          "items": {
            "$ref": "#/definitions/ActivityBookingAnswersDto"
          },
          "type": "array"
        },
        "accommodationBookings": {
          "items": {
            "$ref": "#/definitions/AccommodationBookingAnswersDto"
          },
          "type": "array"
        },
        "rentalBookings": {
          "items": {
            "$ref": "#/definitions/RentalBookingAnswersDto"
          },
          "type": "array"
        },
        "transportBookings": {
          "items": {
            "$ref": "#/definitions/TransportBookingAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "ShoppingCartCheckout": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "externalBookingEntityName": {
          "type": "string"
        },
        "externalBookingEntityCode": {
          "type": "string"
        },
        "bookingAnswers": {
          "$ref": "#/definitions/BookingAnswersDto"
        }
      }
    },
    "TransportBookingQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "routeId": {
          "format": "int64",
          "type": "integer"
        },
        "routeTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/PassengerQuestionsDto"
          },
          "type": "array"
        },
        "pickupQuestions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "dropoffQuestions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        }
      }
    },
    "RentalBookingQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "rentalId": {
          "format": "int64",
          "type": "integer"
        },
        "rentalTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/ItemQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "ActivityBookingRequest": {
      "type": "object",
      "properties": {
        "activityId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "pickupAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "dropoffAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "rateId": {
          "format": "int64",
          "type": "integer"
        },
        "startTimeId": {
          "format": "int64",
          "type": "integer"
        },
        "date": {
          "type": "string"
        },
        "pickup": {
          "type": "boolean"
        },
        "pickupPlaceId": {
          "format": "int64",
          "type": "integer"
        },
        "pickupDescription": {
          "type": "string"
        },
        "dropoff": {
          "type": "boolean"
        },
        "dropoffPlaceId": {
          "format": "int64",
          "type": "integer"
        },
        "dropoffDescription": {
          "type": "string"
        },
        "checkedIn": {
          "type": "boolean"
        },
        "note": {
          "type": "string"
        },
        "customized": {
          "type": "boolean"
        },
        "customizedTime": {
          "type": "string"
        },
        "customizedPrice": {
          "type": "number"
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/PassengerBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "PersonQuestionsDto": {
      "type": "object",
      "properties": {
        "personId": {
          "format": "int64",
          "type": "integer"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        }
      }
    },
    "PassengerBookingRequest": {
      "type": "object",
      "properties": {
        "pricingCategoryId": {
          "format": "int64",
          "type": "integer"
        },
        "passengerDetails": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "RoomQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "roomTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "roomTypeTitle": {
          "type": "string"
        },
        "roomRateTitle": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "guests": {
          "items": {
            "$ref": "#/definitions/PersonQuestionsDto"
          },
          "type": "array"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "BookingQuestionsDto": {
      "type": "object",
      "properties": {
        "mainContactDetails": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "activityBookings": {
          "items": {
            "$ref": "#/definitions/ActivityBookingQuestionsDto"
          },
          "type": "array"
        },
        "accommodationBookings": {
          "items": {
            "$ref": "#/definitions/AccommodationBookingQuestionsDto"
          },
          "type": "array"
        },
        "rentalBookings": {
          "items": {
            "$ref": "#/definitions/RentalBookingQuestionsDto"
          },
          "type": "array"
        },
        "transportBookings": {
          "items": {
            "$ref": "#/definitions/TransportBookingQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "CheckoutResponse": {
      "type": "object",
      "properties": {
        "redirectRequest": {
          "$ref": "#/definitions/RedirectRequest"
        },
        "dccQuote": {
          "$ref": "#/definitions/DccQuoteDto"
        },
        "booking": {
          "$ref": "#/definitions/BookingDetailsDto"
        },
        "bookingHash": {
          "type": "string"
        },
        "travelDocuments": {
          "$ref": "#/definitions/TravelDocuments"
        }
      }
    },
    "BookingConfirmation": {
      "type": "object",
      "properties": {
        "externalBookingReference": {
          "type": "string"
        },
        "externalBookingEntityName": {
          "type": "string"
        },
        "externalBookingEntityCode": {
          "type": "string"
        },
        "showPricesInNotification": {
          "type": "boolean"
        },
        "sendNotificationToMainContact": {
          "type": "boolean"
        },
        "transactionDetails": {
          "$ref": "#/definitions/TransactionDetails"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "ActivityBookingQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "activityId": {
          "format": "int64",
          "type": "integer"
        },
        "activityTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/PassengerQuestionsDto"
          },
          "type": "array"
        },
        "pickupQuestions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "dropoffQuestions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        }
      }
    },
    "PaymentMethods": {
      "type": "object",
      "properties": {
        "allowedMethods": {
          "items": {
            "enum": [
              "CARD",
              "CASH",
              "VOUCHER",
              "RESERVE_FOR_EXTERNAL_PAYMENT"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "cardProvider": {
          "$ref": "#/definitions/CardPaymentProvider"
        }
      }
    },
    "TokenCharge": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Checkout": {
      "type": "object",
      "properties": {
        "options": {
          "items": {
            "$ref": "#/definitions/CheckoutOption"
          },
          "type": "array"
        },
        "questions": {
          "$ref": "#/definitions/BookingQuestionsDto"
        }
      }
    },
    "CardCharge": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "expiryMonth": {
          "format": "int32",
          "type": "integer"
        },
        "expiryYear": {
          "format": "int32",
          "type": "integer"
        },
        "cvc": {
          "type": "string"
        }
      }
    },
    "BookingRequest": {
      "type": "object",
      "properties": {
        "mainContactDetails": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "activityBookings": {
          "items": {
            "$ref": "#/definitions/ActivityBookingRequest"
          },
          "type": "array"
        },
        "accommodationBookings": {
          "items": {
            "$ref": "#/definitions/AccommodationBookingRequest"
          },
          "type": "array"
        },
        "rentalBookings": {
          "items": {
            "$ref": "#/definitions/RentalBookingRequest"
          },
          "type": "array"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "externalBookingEntityName": {
          "type": "string"
        },
        "externalBookingEntityCode": {
          "type": "string"
        },
        "labels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "promoCode": {
          "type": "string"
        },
        "giftCardCode": {
          "type": "string"
        }
      }
    },
    "RentalBookingRequest": {
      "type": "object",
      "properties": {
        "rentalId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "pickupDateAndTime": {
          "type": "string"
        },
        "dropoffDateAndTime": {
          "type": "string"
        },
        "pickupPlaceId": {
          "format": "int64",
          "type": "integer"
        },
        "dropoffPlaceId": {
          "format": "int64",
          "type": "integer"
        },
        "note": {
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/ItemBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "RoomAnswersDto": {
      "type": "object",
      "properties": {
        "roomTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "guests": {
          "items": {
            "$ref": "#/definitions/PersonAnswersDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "DccQuoteDto": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "exchangeRate": {
          "type": "number"
        },
        "markup": {
          "type": "number"
        },
        "markupPercentage": {
          "type": "number"
        },
        "fee": {
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "formattedAmount": {
          "type": "string"
        }
      }
    },
    "RedirectRequest": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "#/definitions/NameValuePairDto"
          },
          "type": "array"
        }
      }
    },
    "ItemAnswersDto": {
      "type": "object",
      "properties": {
        "itemTypeId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "people": {
          "items": {
            "$ref": "#/definitions/PersonAnswersDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "CheckoutOption": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "AGENT_AFFILIATE",
            "AGENT_CUSTOMER",
            "AGENT_RESELLER",
            "CUSTOMER_FULL_PAYMENT",
            "CUSTOMER_PARTIAL_PAYMENT",
            "CUSTOMER_NO_PAYMENT"
          ],
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "formattedAmount": {
          "type": "string"
        },
        "partialPayment": {
          "type": "boolean"
        },
        "minPartialAmount": {
          "type": "number"
        },
        "formattedMinPartialAmount": {
          "type": "string"
        },
        "invoice": {
          "$ref": "#/definitions/CustomerInvoiceDto"
        },
        "paymentMethods": {
          "$ref": "#/definitions/PaymentMethods"
        }
      }
    },
    "ExtraBookingRequest": {
      "type": "object",
      "properties": {
        "extraId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PassengerAnswersDto": {
      "type": "object",
      "properties": {
        "pricingCategoryId": {
          "format": "int64",
          "type": "integer"
        },
        "passengerDetails": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "RentalBookingAnswersDto": {
      "type": "object",
      "properties": {
        "rentalId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/ItemAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "TransactionDetails": {
      "type": "object",
      "properties": {
        "transactionDate": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "cardBrand": {
          "type": "string"
        },
        "last4": {
          "type": "string"
        }
      }
    },
    "TravelDocuments": {
      "type": "object",
      "properties": {
        "invoice": {
          "type": "string"
        },
        "activityTickets": {
          "items": {
            "$ref": "#/definitions/TicketReference"
          },
          "type": "array"
        },
        "accommodationTickets": {
          "items": {
            "$ref": "#/definitions/TicketReference"
          },
          "type": "array"
        },
        "rentalTickets": {
          "items": {
            "$ref": "#/definitions/TicketReference"
          },
          "type": "array"
        },
        "transportTickets": {
          "items": {
            "$ref": "#/definitions/TicketReference"
          },
          "type": "array"
        }
      }
    },
    "ExtraAnswersDto": {
      "type": "object",
      "properties": {
        "extraId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CardPaymentProvider": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "providerType": {
          "type": "string"
        },
        "uti": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        }
      }
    },
    "ActivityBookingAnswersDto": {
      "type": "object",
      "properties": {
        "activityId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "pickupAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "dropoffAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/PassengerAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "ExtraQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "extraId": {
          "format": "int64",
          "type": "integer"
        },
        "extraTitle": {
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        }
      }
    },
    "PassengerQuestionsDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "pricingCategoryId": {
          "format": "int64",
          "type": "integer"
        },
        "pricingCategoryTitle": {
          "type": "string"
        },
        "passengerDetails": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/QuestionSpecificationDto"
          },
          "type": "array"
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraQuestionsDto"
          },
          "type": "array"
        }
      }
    },
    "CheckoutRequest": {
      "type": "object",
      "properties": {
        "checkoutOption": {
          "enum": [
            "AGENT_AFFILIATE",
            "AGENT_CUSTOMER",
            "AGENT_RESELLER",
            "CUSTOMER_FULL_PAYMENT",
            "CUSTOMER_PARTIAL_PAYMENT",
            "CUSTOMER_NO_PAYMENT"
          ],
          "type": "string"
        },
        "paymentMethod": {
          "enum": [
            "CARD",
            "CASH",
            "VOUCHER",
            "RESERVE_FOR_EXTERNAL_PAYMENT"
          ],
          "type": "string"
        },
        "source": {
          "enum": [
            "SHOPPING_CART",
            "DIRECT_REQUEST"
          ],
          "type": "string"
        },
        "shoppingCart": {
          "$ref": "#/definitions/ShoppingCartCheckout"
        },
        "directBooking": {
          "$ref": "#/definitions/BookingRequest"
        },
        "sendNotificationToMainContact": {
          "type": "boolean"
        },
        "showPricesInNotification": {
          "type": "boolean"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "uti": {
          "type": "string"
        },
        "paymentToken": {
          "$ref": "#/definitions/TokenCharge"
        },
        "paymentCard": {
          "$ref": "#/definitions/CardCharge"
        },
        "transactionDetails": {
          "$ref": "#/definitions/TransactionDetails"
        },
        "successUrl": {
          "type": "string"
        },
        "errorUrl": {
          "type": "string"
        },
        "cancelUrl": {
          "type": "string"
        },
        "acceptDccQuote": {
          "type": "boolean"
        },
        "providerPaymentParameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "cardPaymentProviderAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "checkoutOptionAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "affiliateCode": {
          "type": "string"
        }
      }
    },
    "TransportBookingAnswersDto": {
      "type": "object",
      "properties": {
        "bookingId": {
          "format": "int64",
          "type": "integer"
        },
        "routeId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "pickupAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "dropoffAnswers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/PassengerAnswersDto"
          },
          "type": "array"
        }
      }
    },
    "AccommodationBookingRequest": {
      "type": "object",
      "properties": {
        "accommodationId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "items": {
            "$ref": "#/definitions/AnswerDto"
          },
          "type": "array"
        },
        "travelType": {
          "enum": [
            "BUSINESS",
            "LEISURE",
            "CONFERENCE"
          ],
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "rooms": {
          "items": {
            "$ref": "#/definitions/RoomBookingRequest"
          },
          "type": "array"
        }
      }
    },
    "AccommodationAvailabilitiesDto": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "accommodations": {
          "items": {
            "$ref": "#/definitions/AccommodationReport"
          },
          "type": "array"
        }
      }
    },
    "AccommodationReport": {
      "type": "object",
      "properties": {
        "accommodation": {
          "$ref": "#/definitions/AccommodationDto"
        },
        "rooms": {
          "items": {
            "$ref": "#/definitions/RoomReport"
          },
          "type": "array"
        }
      }
    },
    "RoomReport": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/RoomTypeDto"
        },
        "availabilities": {
          "items": {
            "$ref": "#/definitions/RoomAvailabilityReport"
          },
          "type": "array"
        },
        "minimumAvailability": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RoomAvailabilityReport": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "available": {
          "format": "int32",
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "ratePrices": {
          "items": {
            "$ref": "#/definitions/RatePriceReport"
          },
          "type": "array"
        }
      }
    },
    "RatePriceReport": {
      "type": "object",
      "properties": {
        "rateId": {
          "format": "int64",
          "type": "integer"
        },
        "price": {
          "type": "number"
        },
        "closed": {
          "default": false,
          "type": "boolean"
        },
        "closedForArrival": {
          "default": false,
          "type": "boolean"
        },
        "closedForDeparture": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "AccommodationAvailabilityReportDto": {
      "properties": {
        "availableRooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableRoomDto"
          }
        },
        "checkInDate": {
          "type": "string",
          "format": "date-time"
        },
        "checkOutDate": {
          "type": "string",
          "format": "date-time"
        },
        "nightCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccommodationDto": {
      "properties": {
        "actualVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "actualId": {
          "type": "integer",
          "format": "int64"
        },
        "baseLanguage": {
          "type": "string"
        },
        "bookableExtras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "box": {
          "type": "boolean"
        },
        "boxedAccommodationId": {
          "type": "integer",
          "format": "int64"
        },
        "boxedVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "checkInHour": {
          "type": "integer",
          "format": "int32"
        },
        "checkInMinute": {
          "type": "integer",
          "format": "int32"
        },
        "checkOutHour": {
          "type": "integer",
          "format": "int32"
        },
        "checkOutMinute": {
          "type": "integer",
          "format": "int32"
        },
        "paymentCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "description": {
          "type": "string"
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastPublished": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "productCategory": {
          "type": "string"
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "roomTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomTypeDto"
          }
        },
        "slug": {
          "type": "string"
        },
        "tagGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "title": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        },
        "cancellationPolicy": {
          "$ref": "#/definitions/CancellationPolicyDto"
        },
        "barcodeType": {
          "$ref": "#/definitions/BarcodeTypeEnum"
        },
        "timeZone": {
          "type": "string"
        },
        "storedExternally": {
          "type": "boolean"
        }
      }
    },
    "AccommodationQuery": {
      "properties": {
        "accommodationId": {
          "type": "integer",
          "format": "int64"
        },
        "dateFormats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endDate": {
          "type": "string"
        },
        "excludeBoxes": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "facetFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetFilter"
          }
        },
        "locationFilters": {
          "$ref": "#/definitions/LocationFilters"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "publishedSince": {
          "type": "string"
        },
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomQuery"
          }
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "textFilter": {
          "$ref": "#/definitions/TextFilter"
        },
        "vendorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AvailabilityInfoDto": {
      "properties": {
        "availableCount": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "ratePrices": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "AvailableRoomDto": {
      "properties": {
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailabilityInfoDto"
          }
        },
        "extraPrices": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "guestCounts": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "maxBookableCount": {
          "type": "integer",
          "format": "int32"
        },
        "rateTotalPrices": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "roomType": {
          "$ref": "#/definitions/RoomTypeDto"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "BookableExtraDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of extra."
        },
        "externalId": {
          "type": "string",
          "description": "Specifies custom code for extra which could be used for external systems."
        },
        "title": {
          "type": "string",
          "description": "Specifies title of the extra."
        },
        "information": {
          "type": "string",
          "description": "Extra description text. May contain HTML markup."
        },
        "included": {
          "type": "boolean",
          "description": "True if extra Selection == Preselected and false if Selection == Optional."
        },
        "free": {
          "type": "boolean",
          "description": "True if extra Pricing == Included in price, false if Pricing == Priced separately."
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of commission group which is assigned to this extra (set in Pricing/Commission group)."
        },
        "pricingType": {
          "$ref": "#/definitions/AddonPricingTypeEnum",
          "description": "Specifies whether this extra is priced per person, per booking or free."
        },
        "pricingTypeLabel": {
          "type": "string",
          "description": "String for pricing type in normal text (e.g. \"per person\" instead of \"PER_PERSON\")."
        },
        "price": {
          "type": "number",
          "description": "The price amount for 1 extra in the default locale currency."
        },
        "increasesCapacity": {
          "type": "boolean",
          "description": "This field is used for Accomodations only. Specifies if this extra takes availability place."
        },
        "maxPerBooking": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies number of custom limit for extras. If this limit is not set to custom, equals to 0."
        },
        "limitByPax": {
          "type": "boolean",
          "description": "True if is limit set to \"Limited by participants\", false - otherwise."
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of flags added to this extra."
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionDto"
          },
          "description": "Deprecated. Booking questions are now separated into different object."
        }
      }
    },
    "CategoryDto": {
      "properties": {
        "allowsSelectingMultipleChildren": {
          "type": "boolean"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CustomFieldDto": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Specifies type of this custom input field."
        },
        "flags": {
          "type": "array",
          "description": "The list of flags, connected to this custom input field.",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "type": "string",
          "description": "Specifies the code, created for this custom input field."
        },
        "title": {
          "type": "string",
          "description": "Specifies the title, created for this custom input field."
        },
        "inputFieldId": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string",
          "description": "Specifies value of this custom input field for specific product."
        }
      }
    },
    "DerivedPhotoDto": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Specifies derived photo type (e.g. large, preview, thumbnail)."
        },
        "url": {
          "type": "string",
          "description": "URL to the derived photo."
        },
        "cleanUrl": {
          "type": "string"
        }
      }
    },
    "FacetFilter": {
      "properties": {
        "excluded": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GeoBoundingBoxFilter": {
      "properties": {
        "bottomRight": {
          "$ref": "#/definitions/GeoPoint"
        },
        "topLeft": {
          "$ref": "#/definitions/GeoPoint"
        }
      }
    },
    "GeoDistanceFilter": {
      "properties": {
        "center": {
          "$ref": "#/definitions/GeoPoint"
        },
        "distance": {
          "type": "string"
        }
      }
    },
    "GeoDistanceRangeFilter": {
      "properties": {
        "center": {
          "$ref": "#/definitions/GeoPoint"
        },
        "fromDistance": {
          "type": "string"
        },
        "includeLower": {
          "type": "boolean"
        },
        "includeUpper": {
          "type": "boolean"
        },
        "toDistance": {
          "type": "string"
        }
      }
    },
    "GeoPoint": {
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lng": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GeoPolygonFilter": {
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoPoint"
          }
        }
      }
    },
    "ItemDto": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "LocationCodeDto": {
      "description": "Deprecated. Use Address instead.",
      "properties": {
        "coordinates": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "date": {
          "type": "integer",
          "format": "int32"
        },
        "function": {
          "type": "string"
        },
        "iata": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nameWoDiacritics": {
          "type": "string"
        },
        "recentChange": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "subdivision": {
          "type": "string"
        }
      }
    },
    "LocationDto": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Specifies street address of this location."
        },
        "city": {
          "type": "string",
          "description": "Specifies city of this location."
        },
        "countryCode": {
          "type": "string",
          "description": "Specifies country ISO code of this location."
        },
        "postCode": {
          "type": "string",
          "description": "Specifies postal code of this location."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Specifies latitude of this location."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Specifies longitude of this location."
        },
        "zoomLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies zoom level of initially shown map."
        },
        "origin": {
          "$ref": "#/definitions/LocationOriginEnum",
          "description": ""
        },
        "originId": {
          "type": "string",
          "description": ""
        },
        "wholeAddress": {
          "type": "string",
          "description": "Specifies full address of this location (concatenated format)."
        }
      }
    },
    "LocationFilters": {
      "properties": {
        "geoBoundingBoxFilter": {
          "$ref": "#/definitions/GeoBoundingBoxFilter"
        },
        "geoDistanceFilter": {
          "$ref": "#/definitions/GeoDistanceFilter"
        },
        "geoDistanceRangeFilter": {
          "$ref": "#/definitions/GeoDistanceRangeFilter"
        },
        "geoPolygonFilter": {
          "$ref": "#/definitions/GeoPolygonFilter"
        }
      }
    },
    "PhotoDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the photo."
        },
        "originalUrl": {
          "type": "string",
          "description": "URL to the original size photo file."
        },
        "description": {
          "type": "string",
          "description": "Description of the photo."
        },
        "alternateText": {
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies original size photo height in pixels."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies original size photo width in pixels."
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "derived": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DerivedPhotoDto"
          }
        },
        "fileName": {
          "type": "string",
          "description": "File name of the original photo preceded with \"/\"."
        }
      }
    },
    "PlaceDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "QuestionDto": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "answerRequired": {
          "type": "boolean"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "label": {
          "type": "string"
        },
        "options": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RoomQuery": {
      "properties": {
        "adults": {
          "type": "integer",
          "format": "int32"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "RoomRateDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "maxNightsStay": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccupants": {
          "type": "integer",
          "format": "int32"
        },
        "minNightsStay": {
          "type": "integer",
          "format": "int32"
        },
        "stayRestrictions": {
          "type": "boolean"
        },
        "stayRestrictionsAllMonths": {
          "type": "boolean"
        },
        "stayRestrictionsAllWeekdays": {
          "type": "boolean"
        },
        "stayRestrictionsMonths": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "stayRestrictionsWeekdays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": {
          "type": "string"
        },
        "cancellationPolicy": {
          "$ref": "#/definitions/CancellationPolicyDto"
        }
      }
    },
    "RoomTypeDto": {
      "properties": {
        "accommodationId": {
          "type": "integer",
          "format": "int64"
        },
        "accommodationTitle": {
          "type": "string"
        },
        "bunkBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "code": {
          "type": "string"
        },
        "defaultRateId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "doubleBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "extraLargeDoubleBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "futonMatCount": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "internalUseOnly": {
          "type": "boolean"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "largeDoubleBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "roomCount": {
          "type": "integer",
          "format": "int32"
        },
        "roomRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomRateDto"
          }
        },
        "shared": {
          "type": "boolean"
        },
        "singleBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "sofaBedCount": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "title": {
          "type": "string"
        },
        "vendorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SearchResultItem": {
      "properties": {
        "baseLanguage": {
          "type": "string"
        },
        "box": {
          "type": "boolean"
        },
        "boxedProductId": {
          "type": "integer",
          "format": "int64"
        },
        "boxedSupplierId": {
          "type": "integer",
          "format": "int64"
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "locationCode": {
          "$ref": "#/definitions/LocationCodeDto",
          "description": "Deprecated."
        },
        "paymentCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "places": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaceDto"
          }
        },
        "price": {
          "type": "number"
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "slug": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/ItemDto"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        }
      }
    },
    "SearchResultsDto": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResultItem"
          }
        },
        "tagFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsFacetDto"
          }
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermFilter"
          }
        },
        "termFacets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TermsFacetDto"
          }
        },
        "tookInMillis": {
          "type": "integer",
          "format": "int64"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TagDto": {
      "properties": {
        "exclusive": {
          "type": "boolean"
        },
        "facetName": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ownerId": {
          "type": "integer",
          "format": "int64"
        },
        "parentTagId": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TagGroupDto": {
      "properties": {
        "exclusive": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "facetName": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "ownerId": {
          "type": "integer",
          "format": "int64"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryEnum"
        },
        "sharedWithSuppliers": {
          "type": "boolean"
        },
        "subCategory": {
          "$ref": "#/definitions/TagGroupSubcategoryEnum"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDto"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TermFilter": {
      "properties": {
        "excluded": {
          "type": "boolean"
        },
        "facetName": {
          "type": "string"
        },
        "groupTitle": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TermsFacetDto": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsFacetEntryDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "sortedEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsFacetEntryDto"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TermsFacetEntryDto": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "term": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TextFilter": {
      "properties": {
        "operator": {
          "type": "string"
        },
        "searchExternalId": {
          "type": "boolean"
        },
        "searchFullText": {
          "type": "boolean"
        },
        "searchKeywords": {
          "type": "boolean"
        },
        "searchTitle": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "wildcard": {
          "type": "boolean"
        }
      }
    },
    "VendorDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "Default currency set in this vendor info."
        },
        "showInvoiceIdOnTicket": {
          "type": "boolean"
        },
        "showAgentDetailsOnTicket": {
          "type": "boolean"
        },
        "showPaymentsOnInvoice": {
          "type": "boolean"
        },
        "companyEmailIsDefault": {
          "type": "boolean"
        }
      }
    },
    "VideoDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the video."
        },
        "title": {
          "type": "string",
          "description": "Title of the video."
        },
        "sourceUrl": {
          "type": "string",
          "description": "Original URL of the video."
        },
        "thumbnailUrl": {
          "type": "string",
          "description": "URL to the thumnail of this video."
        },
        "previewUrl": {
          "type": "string",
          "description": "URL to the preview of this video."
        },
        "html": {
          "type": "string",
          "description": "Iframe of the video for HTML code."
        },
        "providerName": {
          "type": "string",
          "description": "Specifies name of the video provider (e.g. YouTube)."
        },
        "cleanPreviewUrl": {
          "type": "string"
        },
        "cleanThumbnailUrl": {
          "type": "string"
        }
      }
    },
    "CarQuery": {
      "properties": {
        "airConditioning": {
          "type": "boolean"
        },
        "carRentalIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "carRentalSlug": {
          "type": "string"
        },
        "carTypeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "co2EmissionFilter": {
          "$ref": "#/definitions/NumericRangeFilter"
        },
        "dateFormats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "driverAge": {
          "type": "integer",
          "format": "int32"
        },
        "dropoffLocationFilters": {
          "$ref": "#/definitions/LocationFilters"
        },
        "dropoffLocationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "endDate": {
          "type": "string"
        },
        "excludeBoxes": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "facetFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetFilter"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fuelEconomyFilter": {
          "$ref": "#/definitions/NumericRangeFilter"
        },
        "luggage": {
          "type": "integer",
          "format": "int32"
        },
        "minDoorCount": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "passengers": {
          "type": "integer",
          "format": "int32"
        },
        "pickupLocationFilters": {
          "$ref": "#/definitions/LocationFilters"
        },
        "pickupLocationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "publishedSince": {
          "type": "string"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "textFilter": {
          "$ref": "#/definitions/TextFilter"
        },
        "vendorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CarRentalDto": {
      "properties": {
        "actualVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "baseLanguage": {
          "type": "string"
        },
        "bookableExtras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "box": {
          "type": "boolean"
        },
        "boxedVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "carTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarTypeDto"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "paymentCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "defaultDropoffHour": {
          "type": "integer",
          "format": "int32"
        },
        "defaultDropoffLocationId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultDropoffMinute": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPickupHour": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPickupLocationId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultPickupMinute": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "dropoffLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalLocationDto"
          }
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastPublished": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "pickupLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalLocationDto"
          }
        },
        "pricingMode": {
          "$ref": "#/definitions/RentalPricingModeEnum"
        },
        "productCategory": {
          "type": "string"
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "slug": {
          "type": "string"
        },
        "tagGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "title": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        },
        "cancellationPolicy": {
          "$ref": "#/definitions/CancellationPolicyDto"
        },
        "barcodeType": {
          "$ref": "#/definitions/BarcodeTypeEnum"
        },
        "timeZone": {
          "type": "string"
        },
        "storedExternally": {
          "type": "boolean"
        }
      }
    },
    "CarRentalLocationDto": {
      "properties": {
        "allDay": {
          "type": "boolean"
        },
        "closingHour": {
          "type": "integer",
          "format": "int32"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "openingHour": {
          "type": "integer",
          "format": "int32"
        },
        "priceForDropoff": {
          "type": "number",
          "format": "double"
        },
        "priceForPickup": {
          "type": "number",
          "format": "double"
        },
        "priceForPickupAndDropoff": {
          "type": "number",
          "format": "double"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CarRentalSearchResultsDto": {
      "properties": {
        "carRentals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalDto"
          }
        }
      }
    },
    "CarSearchResultsDto": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarTypeDto"
          }
        },
        "tagFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsFacetDto"
          }
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermFilter"
          }
        },
        "termFacets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TermsFacetDto"
          }
        },
        "tookInMillis": {
          "type": "integer",
          "format": "int64"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CarTypeDto": {
      "properties": {
        "acrissCategory": {
          "type": "string"
        },
        "acrissCode": {
          "type": "string"
        },
        "acrissType": {
          "type": "string"
        },
        "airConditioning": {
          "type": "boolean"
        },
        "avgRentalPricePerDay": {
          "type": "number"
        },
        "baseLanguage": {
          "type": "string"
        },
        "bookingCutoff": {
          "type": "integer",
          "format": "int32"
        },
        "carRental": {
          "$ref": "#/definitions/ItemDto"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "co2Emission": {
          "type": "number",
          "format": "double"
        },
        "paymentCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultDropoffHour": {
          "type": "integer",
          "format": "int32"
        },
        "defaultDropoffLocationId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultDropoffMinute": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPickupHour": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPickupLocationId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultPickupMinute": {
          "type": "integer",
          "format": "int32"
        },
        "deliveryFee": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "doorCount": {
          "type": "integer",
          "format": "int32"
        },
        "driveType": {
          "type": "string"
        },
        "dropoffLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalLocationDto"
          }
        },
        "exampleCarModel": {
          "type": "string"
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fuelEconomy": {
          "type": "number",
          "format": "double"
        },
        "fuelType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedExtrasPrice": {
          "type": "number"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "luggageCapacity": {
          "type": "integer",
          "format": "int32"
        },
        "maxBookableCount": {
          "type": "integer",
          "format": "int32"
        },
        "maxRentalHours": {
          "type": "integer",
          "format": "int32"
        },
        "minDriverAge": {
          "type": "integer",
          "format": "int32"
        },
        "minRentalHours": {
          "type": "integer",
          "format": "int32"
        },
        "passengerCapacity": {
          "type": "integer",
          "format": "int32"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "pickupLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalLocationDto"
          }
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "rentalPrice": {
          "type": "number"
        },
        "rentalRestrictions": {
          "type": "boolean"
        },
        "summary": {
          "type": "string"
        },
        "tagGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "title": {
          "type": "string"
        },
        "totalPrice": {
          "type": "number"
        },
        "transmissionType": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/ItemDto"
        }
      }
    },
    "NumericRangeFilter": {
      "properties": {
        "excluded": {
          "type": "boolean"
        },
        "from": {
          "type": "integer",
          "format": "int32"
        },
        "includeLower": {
          "type": "boolean"
        },
        "includeUpper": {
          "type": "boolean"
        },
        "to": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CurrencyDto": {
      "properties": {
        "code": {
          "type": "string"
        },
        "payment": {
          "type": "boolean"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ActivityAvailabilityDto": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Value \"startTimeId_YYYYMMDD\" (YYYYMMDD - date of the departure for this particular availability)."
        },
        "activityId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the activity"
        },
        "activityTitle": {
          "type": "string",
          "description": "Title of the activity."
        },
        "activityOwnerId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of vendor which owns activity (original supplier)"
        },
        "activityOwnerTitle": {
          "type": "string",
          "description": "Title of vendor which owns activity (original supplier)"
        },
        "startTime": {
          "type": "string",
          "description": "Start time in hours:minutes using 24h format (e.g. \"19:00\"). If this is not a time based availability, e.g. pass type, then value is \"00:00\""
        },
        "startTimeId": {
          "type": "integer",
          "format": "int64",
          "description": "Unique system id for the start time mapped to this availability"
        },
        "startTimeLabel": {
          "type": "string",
          "description": "Optional label if used for this start time"
        },
        "flexible": {
          "type": "boolean",
          "description": "If activity \"bookingType\" is DATE then true, otherwise - false."
        },
        "date": {
          "type": "integer",
          "format": "int64",
          "description": "Date (in UNIX Epoch time format) of the departure for this particular availability."
        },
        "localizedDate": {
          "type": "string",
          "description": "Same as date but formatted using EEE dd.MMM yy pattern, e.g. \"Wed 18.Mar 20\" and formated to the locale specified in the profile."
        },
        "availabilityCount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount of open seats for this start time. Returns arbitrary high value if unlimited."
        },
        "bookedParticipants": {
          "type": "integer",
          "format": "int32",
          "description": "Amount of booked participants for this start time IF request is made by activity original owner (supplier). Otherwise is hidden (returns 0)."
        },
        "minParticipants": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum bookable participants for this activity."
        },
        "minParticipantsToBookNow": {
          "type": "integer",
          "format": "int32",
          "description": "Value of the current minimum bookable participants (evaluating that minimum participants limit might be already reached by other participants)"
        },
        "productGroupId": {
          "type": "integer",
          "format": "int32",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "recurrenceId": {
          "type": "integer",
          "format": "int32",
          "description": "Starting time availability rule (recurrence) id."
        },
        "pickupAllotment": {
          "type": "boolean",
          "description": "True if this pick-up service has a limited amount of available seats."
        },
        "pickupAvailabilityCount": {
          "type": "integer",
          "format": "int32",
          "description": "Amount of pick-up service available seats. Returns 1000 if unlimited."
        },
        "unlimitedAvailability": {
          "type": "boolean",
          "description": "False if activity capacity is set to Limited number, otherwise - true."
        },
        "defaultRateId": {
          "type": "integer",
          "format": "int32",
          "description": "Id of default rate set for this experience."
        },
        "rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityRateDto"
          },
          "description": "The list of all rates (and their related information) offered by the product."
        },
        "pricesByRate": {
          "type": "array",
          "description": "The list of all detailed prices for each product element in this rate.",
          "items": {
            "$ref": "#/definitions/ActivityRatePrices"
          }
        },
        "comboActivity": {
          "type": "boolean",
          "description": "True if this is combo experience, false - otherwise."
        },
        "comboStartTimes": {
          "type": "array",
          "description": "The list of ids and start times of experiences included in this combo product. Empty if this is not a combo activity.",
          "items": {
            "$ref": "#/definitions/ComboStartTimeInfoDto"
          }
        },
        "flags": {
          "type": "array",
          "description": "The list of flags related to this product (set in Experience/Advanced).",
          "items": {
            "type": "string"
          }
        },
        "defaultPrice": {
          "type": "number",
          "description": "Price for default price category, default rate from default price catalog."
        },
        "pricesByCategory": {
          "type": "object",
          "description": "All price categories and amounts in default vendor currency.",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "pickupPrice": {
          "type": "number",
          "description": "Pick-up price per booking. If pick-up pricing is set per participant then value is null."
        },
        "pickupPricesByCategory": {
          "type": "object",
          "description": "Pick-up prices for one passenger of each category, in default vendor currency.",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "dropoffPrice": {
          "type": "number",
          "description": "Drop-off price per booking. If drop-off pricing is set per participant then value is null."
        },
        "dropoffPricesByCategory": {
          "type": "object",
          "description": "Drop-off prices for one passenger of each category, in default vendor currency.",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "extraPrices": {
          "type": "object",
          "description": "Prices for each extra connected to this activity in default vendor currency.",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "guidedLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of guided languages for this availability."
        },
        "unavailable": {
          "type": "boolean",
          "description": "True if the activity is limited availability AND availability == 0"
        },
        "pickupSoldOut": {
          "type": "boolean",
          "description": "True if all pick-up seats are sold for this activity start time, false otherwise."
        },
        "soldOut": {
          "type": "boolean",
          "description": "True if all seats are sold for this activity start time, false otherwise."
        }
      }
    },
    "ActivityRatePrices": {
      "properties": {
        "activityRateId": {
          "type": "integer",
          "format": "int64",
          "description": "Activity rate ID."
        },
        "pricePerBooking": {
          "description": "Specifies price per booking for this rate. Appears only if this rate \"pricedPerPerson\" == false",
          "$ref": "#/definitions/SimpleMoney"
        },
        "pricePerCategoryUnit": {
          "type": "array",
          "description": "The list of prices per person for each price category mapped to this rate. Is empty if \"pricedPerPerson\" == true.",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        },
        "pickupPrice": {
          "description": "Specifies the pick-up price per booking. Will not appear if there is set pick-up price per passenger.",
          "$ref": "#/definitions/SimpleMoney"
        },
        "pickupPricePerCategoryUnit": {
          "type": "array",
          "description": "The list of pick-up prices per passenger for each price category. Is empty if pick-up price is set per booking.",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        },
        "dropoffPrice": {
          "description": "Specifies the drop-off price per booking. Will not appear if there is set drop-off price per passenger.",
          "$ref": "#/definitions/SimpleMoney"
        },
        "dropoffPricePerCategoryUnit": {
          "type": "array",
          "description": "The list of drop-off prices per passenger for each price category. Is empty if drop-off price is set per booking.",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        },
        "extraPricePerUnit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        },
        "extraPricePerCategoryUnit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        }
      }
    },
    "PriceByItem": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "description": "Price amount that consists of amount and currency.",
          "$ref": "#/definitions/SimpleMoney"
        },
        "minParticipantsRequired": {
          "type": "integer",
          "format": "int32",
          "description": "Will be null/will not appear if tiered pricing is not enabled for the rate."
        },
        "maxParticipantsRequired": {
          "type": "integer",
          "format": "int32",
          "description": "Will be null/will not appear if tiered pricing is not enabled for the rate."
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceByItem"
          }
        }
      }
    },
    "ActivityBookingDto": {
      "properties": {
        "activity": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "activityPrice": {
          "type": "number"
        },
        "bookingStatus": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customerUuid": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dropoff": {
          "type": "boolean"
        },
        "dropoffPlace": {
          "$ref": "#/definitions/PickupPlaceDto"
        },
        "dropoffPlaceDescription": {
          "type": "string"
        },
        "dropoffPrice": {
          "type": "number"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDto"
          }
        },
        "extrasPrice": {
          "type": "number"
        },
        "flexible": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "maxBookableCount": {
          "type": "integer",
          "format": "int32"
        },
        "pickup": {
          "type": "boolean"
        },
        "pickupPlace": {
          "$ref": "#/definitions/PickupPlaceDto"
        },
        "pickupPlaceDescription": {
          "type": "string"
        },
        "pickupPlaceRoomNumber": {
          "type": "string"
        },
        "pickupPrice": {
          "type": "number"
        },
        "pricingCategoryBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityPricingCategoryBookingDto"
          }
        },
        "productCategory": {
          "type": "string"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "selectedFlexDayOption": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/StartTimeDto"
        },
        "totalPrice": {
          "type": "number"
        },
        "unlimitedAvailability": {
          "type": "boolean"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        }
      }
    },
    "ActivityPriceListDto": {
      "type": "object",
      "properties": {
        "activityId": {
          "format": "int64",
          "type": "integer",
          "description": "Specifies activity ID, which is related to this price list."
        },
        "isPriceConverted": {
          "type": "boolean",
          "description": "Specifies if the prices in the response are converted to the requested currency."
        },
        "conversionRate": {
          "format": "double",
          "type": "number",
          "description": "Will be null unless the currency is converted."
        },
        "defaultCurrency": {
          "type": "string",
          "description": "Specifies the default currency in the supplier price catalog."
        },
        "pricesByDateRange": {
          "items": {
            "$ref": "#/definitions/ActivityPriceListDateRange"
          },
          "type": "array",
          "description": "Array of pricelists that are valid for relevant time frames."
        }
      }
    },
    "CategoryPriceDto": {
      "type": "object",
      "required": [
        "pricingCategoryId",
        "title",
        "ticketCategory"
      ],
      "properties": {
        "pricingCategoryId": {
          "format": "int64",
          "type": "integer",
          "description": "Specifies pricing category ID."
        },
        "title": {
          "type": "string",
          "description": "Specifies pricing category title."
        },
        "ticketCategory": {
          "$ref": "#/definitions/TicketCategoryEnum",
          "description": "Specifies pricing category type."
        },
        "price": {
          "description": "The price per passenger in this pricing category. This is only set if tiered pricing is disabled, otherwise this is set to null.",
          "$ref": "#/definitions/PriceDto"
        },
        "pickupPrice": {
          "$ref": "#/definitions/PriceDto",
          "description": "The pick up price per passenger in this pricing category. If pick up service is not enabled, or pick up is not priced per person, this will be empty."
        },
        "dropoffPrice": {
          "$ref": "#/definitions/PriceDto",
          "description": "The drop off price per passenger in this pricing category. If drop off service is not enabled, or drop off is not priced per person, this will be empty."
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraPriceDto"
          },
          "type": "array",
          "description": "The price for extras booked for passengers in this pricing category."
        },
        "tieredPrices": {
          "description": "The tiered prices per passenger in this pricing category. This is only set if tiered pricing is enabled, otherwise this is set to null.",
          "items": {
            "$ref": "#/definitions/TieredPriceDto"
          },
          "type": "array"
        }
      }
    },
    "TieredPriceDto": {
      "type": "object",
      "required": [
        "minPassengersRequired",
        "currency",
        "amount",
        "ofWhichTax"
      ],
      "properties": {
        "minPassengersRequired": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the minimum number of passengers for the tier."
        },
        "maxPassengersRequired": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the maximum number of passengers for the tier."
        },
        "currency": {
          "type": "string",
          "description": "Specifies the currency on which the price is shown."
        },
        "amount": {
          "format": "double",
          "type": "number",
          "description": "Specifies the amount of the price."
        },
        "ofWhichTax": {
          "format": "double",
          "type": "number",
          "description": "Specifies the amount of tax, that is applied for the price."
        },
        "priceNotFound": {
          "type": "boolean",
          "description": "True if the price for this rate is missing. Omitted if the price was found."
        }
      }
    },
    "ActivityRatePricesDto": {
      "type": "object",
      "required": [
        "rateId",
        "title"
      ],
      "properties": {
        "rateId": {
          "format": "int64",
          "type": "integer",
          "description": "Specifies the rate ID."
        },
        "title": {
          "type": "string",
          "description": "Specifies the title of the rate."
        },
        "price": {
          "$ref": "#/definitions/PriceDto",
          "description": "Specifies the passenger price per booking. If rate is priced per person, this will be empty."
        },
        "passengers": {
          "items": {
            "$ref": "#/definitions/CategoryPriceDto"
          },
          "type": "array",
          "description": "The list of prices per person, based on the pricing category. If rate is not priced per person, this will be empty."
        },
        "pickupPrice": {
          "$ref": "#/definitions/PriceDto",
          "description": "Specifies the price for pick up per booking. If pick up service is not enabled, or pick up is not priced per booking, this will be empty."
        },
        "dropoffPrice": {
          "$ref": "#/definitions/PriceDto",
          "description": "Specifies the price for drop off per booking. If drop off service is not enabled, or drop off is not priced per booking, this will be empty."
        },
        "extras": {
          "items": {
            "$ref": "#/definitions/ExtraPriceDto"
          },
          "type": "array",
          "description": "Pricing for extras belonging to the product, which are not priced per person."
        }
      }
    },
    "ActivityPriceListDateRange": {
      "type": "object",
      "required": [
        "from",
        "rates"
      ],
      "properties": {
        "from": {
          "type": "string",
          "description": "Start date (inclusive) for the validity of this pricelist. "
        },
        "to": {
          "type": "string",
          "description": "End date (inclusive) for the validity of this pricelist. If the end date is not set, this will be empty ."
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/ActivityRatePricesDto"
          },
          "type": "array",
          "description": "The list of rates that are set for each product on this pricelist."
        }
      }
    },
    "PriceDto": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "Specifies the currency on which the price is shown."
        },
        "amount": {
          "format": "double",
          "type": "number",
          "description": "Specifies the amount of the price."
        },
        "ofWhichTax": {
          "format": "double",
          "type": "number",
          "description": "Specifies the amount of tax, that is applied for the price."
        },
        "priceNotFound": {
          "type": "boolean",
          "description": "True if the price for this rate is missing. Omitted if the price was found."
        }
      }
    },
    "ExtraPriceDto": {
      "type": "object",
      "properties": {
        "extraId": {
          "format": "int64",
          "type": "integer",
          "description": "Specifies the ID of the extra."
        },
        "title": {
          "type": "string",
          "description": "Specifies the title of the extra."
        },
        "price": {
          "$ref": "#/definitions/PriceDto",
          "description": "Specifies the price of the extra."
        }
      }
    },
    "ActivityDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for this activity."
        },
        "externalId": {
          "type": "string",
          "description": "A short optional unique code for the activity. Also called a product code. Created by owner of the activity."
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryEnum",
          "description": "The product category, will be one of: ACTIVITIES, ACCOMMODATION, TRANSPORT, CAR_RENTALS"
        },
        "box": {
          "type": "boolean",
          "description": "Specifies whether this is a boxed version of another product."
        },
        "inventoryLocal": {
          "type": "boolean",
          "description": "Specifies if this activity inventory is managed locally or it is external inventory service product. False if this activity is external inventory service product, true - otherwise."
        },
        "inventorySupportsPricing": {
          "type": "boolean",
          "description": "If this activity is external inventory service product, then equals to SUPPORTS_PRICING of the connected plugin."
        },
        "inventorySupportsAvailability": {
          "type": "boolean",
          "description": "If this activity is external inventory service product, then equals to SUPPORTS_AVAILABILITY of the connected plugin."
        },
        "creationDate": {
          "type": "string",
          "description": "The date the activity was first created. Date format example: Mon Jan 27 16:02:05 GMT 2020."
        },
        "lastModified": {
          "type": "string",
          "description": "The date that the activity content was last modified. Date format example: Mon Jan 27 16:02:05 GMT 2020."
        },
        "lastPublished": {
          "type": "string",
          "description": "The date that the activity was last changed and published. Date format example: 2020-01-27T16:02:05.352Z."
        },
        "published": {
          "type": "boolean",
          "description": "Specifies if this product is activated."
        },
        "title": {
          "type": "string",
          "description": "The title of the activity."
        },
        "description": {
          "type": "string",
          "description": "Text describing this activity. May contain HTML markup."
        },
        "excerpt": {
          "type": "string",
          "description": "A short, non-HTML summary (max 255 chars) describing the product. This text may be used in activity preview pages."
        },
        "cancellationPolicy": {
          "$ref": "#/definitions/CancellationPolicyDto",
          "description": "The cancellation policy, describing any cancellation fees incurred when cancelling bookings."
        },
        "overrideBarcodeFormat": {
          "type": "boolean",
          "description": "Specifies if ticket barcode format for this activity overrides standard QR_CODE."
        },
        "barcodeType": {
          "$ref": "#/definitions/BarcodeTypeEnum",
          "description": "Specifies ticket barcode format for this activity."
        },
        "timeZone": {
          "type": "string",
          "description": "Specifies timezone for this activity."
        },
        "mainContactFields": {
          "type": "array",
          "description": "The list of main contact fields that should be displayed for customer while booking this product.",
          "items": {
            "$ref": "#/definitions/CustomerFieldReferenceDto"
          }
        },
        "requiredCustomerFields": {
          "type": "array",
          "description": "Deprecated. Should use \"mainContactFields\" instead.",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "description": "The list of keywords describing the product.",
          "items": {
            "type": "string"
          }
        },
        "flags": {
          "type": "array",
          "description": "Optional list of flags which the product owner has added to the product. Flags are just simple text labels.",
          "items": {
            "type": "string"
          }
        },
        "slug": {
          "type": "string",
          "description": "Human readable string that may be used to identify the product."
        },
        "baseLanguage": {
          "type": "string",
          "description": "The language that the product description is written in. There may also be translations available."
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of languages which the product content is available in."
        },
        "paymentCurrencies": {
          "type": "array",
          "description": "",
          "items": {
            "type": "string"
          }
        },
        "customFields": {
          "type": "array",
          "description": "In order to have custom fields for the product, they have to be enabled, in \"Advanced settings->Custom input fields\".",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "tagGroups": {
          "type": "array",
          "description": "The list of different groups of custom parameters, created for this activity. One example of tag groups - \"Activity type\". All tag groups present in system get be fetched by GET /tag.json/groups. ",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto",
          "description": "The photo selected for use as the key photo for the product in lists and overviews."
        },
        "photos": {
          "type": "array",
          "description": "The list of photos showcasing this product.",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "videos": {
          "type": "array",
          "description": "The list of videos showcasing the product.",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto",
          "description": "The vendor that operates this activity."
        },
        "boxedVendor": {
          "$ref": "#/definitions/VendorDto",
          "description": "If this is a boxed activity, then this field holds the ID of the vendor that owns the activity inside the box."
        },
        "storedExternally": {
          "type": "boolean"
        },
        "pluginId": {
          "type": "string",
          "description": ""
        },
        "reviewRating": {
          "type": "number",
          "format": "double",
          "description": ""
        },
        "reviewCount": {
          "type": "integer",
          "format": "int64",
          "description": ""
        },
        "activityType": {
          "$ref": "#/definitions/ActivityType",
          "description": "Specifies the type of the activity."
        },
        "bookingType": {
          "$ref": "#/definitions/ActivityBookingType",
          "description": "Specifies how the activity is booked: as a pass, date based, or date and time based."
        },
        "scheduleType": {
          "$ref": "#/definitions/ActivityScheduleType",
          "description": "Specifies how activity start times are scheduled. Only used if bookingType != PASS."
        },
        "capacityType": {
          "$ref": "#/definitions/ActivityCapacityType",
          "description": "Specifies whether capacity is limited, free sell, or on request."
        },
        "passExpiryType": {
          "$ref": "#/definitions/PassExpiryType",
          "description": "Only used if bookingType == PASS. Specifies how the pass expires after purchase. Could be non-empty, if this product had this value previously."
        },
        "fixedPassExpiryDate": {
          "type": "array",
          "description": "Specifies at what fixed date the pass expires (array of year, month, day). Only used if Activity.bookingType == PASS and Activity.passExpiryType == FIXED_DATE. Could be non-empty, if this product had this value previously.",
          "items": {
            "type": "string"
          }
        },
        "meetingType": {
          "$ref": "#/definitions/ActivityMeetingType",
          "description": "Describes how passengers meet at the start of a tour/activity."
        },
        "privateActivity": {
          "type": "boolean",
          "description": "Specifies if this is a private experience (set in Experience/Title and type/\"Show as a private experience\")."
        },
        "passCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "Only used if bookingType == PASS and capacityType == LIMITED. Since passes are not date based, this is simply the global capacity for selling the pass: specifies how many passes can be sold totally."
        },
        "passValidForDays": {
          "type": "integer",
          "description": "Specifies after how many days from the purchase the pass expires.Only used if Activity.bookingType == PASS and Activity.passExpiryType == RELATIVE_DATE."
        },
        "passesAvailable": {
          "type": "integer",
          "format": "int32",
          "description": "Only used if bookingType == PASS and capacityType == LIMITED. Specifies how many passes are currently available for booking."
        },
        "dressCode": {
          "type": "boolean",
          "description": "Specifies if there is a particular dress code that the participants need to adhere to. The type of dress code should be described in text items. Value set up in \"Experience->Know before you go\"."
        },
        "passportRequired": {
          "type": "boolean",
          "description": "Whether passenger needs to bring their passport for this activity. Value set up in \"Experience->Know before you go\"."
        },
        "supportedAccessibilityTypes": {
          "type": "array",
          "description": "Specifies whether the activity is suitable for individuals with accessibility issues. Value set up in \"Experience->Know before you go\".",
          "items": {
            "$ref": "#/definitions/AccessibilityType"
          }
        },
        "startPoints": {
          "type": "array",
          "description": "Only relevant if meetingType == MEET_ON_LOCATION or MEET_ON_LOCATION_OR_PICK_UP. The list of all places where this activity starts or can be joined.",
          "items": {
            "$ref": "#/definitions/Place"
          }
        },
        "bookingQuestions": {
          "type": "array",
          "description": "The list of booking questions added to this acrivity.",
          "items": {
            "$ref": "#/definitions/ActivityBookingQuestion"
          }
        },
        "passengerFields": {
          "type": "array",
          "description": "The list of passenger fields that should be displayed for customer while booking this product.",
          "items": {
            "$ref": "#/definitions/CustomerFieldReferenceDto"
          }
        },
        "inclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InclusionExclusionType"
          }
        },
        "included": {
          "type": "string",
          "description": "Optional text describing what is included when you book this product. May contain HTML markup."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InclusionExclusionType"
          }
        },
        "excluded": {
          "type": "string",
          "description": "Optional text describing what is excluded when you book this product. May contain HTML markup."
        },
        "requirements": {
          "type": "string",
          "description": "The text describing what you need to bring for this activity. May contain HTML markup."
        },
        "knowBeforeYouGoItems": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "STROLLER_OR_PRAM_ACCESSIBLE",
              "WHEELCHAIR_ACCESSIBLE",
              "LIMITED_MOBILITY_ACCESSIBLE",
              "LIMITED_SIGHT_ACCESSIBLE",
              "ANIMALS_OR_PETS_ALLOWED",
              "PUBLIC_TRANSPORTATION_NEARBY",
              "INFANT_SEATS_AVAILABLE",
              "INFANTS_MUST_SIT_ON_LAPS",
              "PASSPORT_REQUIRED",
              "DRESS_CODE"
            ]
          }
        },
        "attention": {
          "type": "string",
          "description": "Text describing any points that need special attention for the passengers. May contain HTML."
        },
        "locationCode": {
          "$ref": "#/definitions/LocationCodeDto",
          "description": "Deprecated."
        },
        "googlePlace": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "countryCode": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "cityCode": {
              "type": "string"
            },
            "geoLocationCenter": {
              "type": "object",
              "description": "Represents a point in geographical coordinates: latitude and longitude.",
              "properties": {
                "lat": {
                  "type": "number",
                  "format": "double"
                },
                "lng": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        },
        "resourceSlots": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "description": ""
        },
        "bookingCutoffMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of minutes before the activity when we stop accepting bookings. Combines with other bookingCutoff[X] fields, e.g. hours=1 and minutes=15 combine into 1h 15min booking cutoff time."
        },
        "bookingCutoffHours": {
          "type": "integer",
          "format": "int32",
          "description": "The number of hours before the activity when we stop accepting bookings. Combines with other bookingCutoff[X] fields, e.g. hours=1 and minutes=15 combine into 1h 15min booking cutoff time."
        },
        "bookingCutoffDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days before the activity when we stop accepting bookings. Combines with other bookingCutoff[X] fields, e.g. hours=1 and minutes=15 combine into 1h 15min booking cutoff time."
        },
        "bookingCutoffWeeks": {
          "type": "integer",
          "format": "int32",
          "description": "The number of weeks before the activity when we stop accepting bookings. Combines with other bookingCutoff[X] fields, e.g. hours=1 and minutes=15 combine into 1h 15min booking cutoff time."
        },
        "requestDeadlineMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The number of minutes allocated to confirm or reject booking by activity supplier. Combines with other requestDeadline[X] fields, e.g. days=1 and hours=10 combine into 1 day 10 hours booking request deadline time."
        },
        "requestDeadlineHours": {
          "type": "integer",
          "format": "int32",
          "description": "The number of hours allocated to confirm or reject booking by activity supplier. Combines with other requestDeadline[X] fields, e.g. days=1 and hours=10 combine into 1 day 10 hours booking request deadline time."
        },
        "requestDeadlineDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days allocated to confirm or reject booking by activity supplier. Combines with other requestDeadline[X] fields, e.g. days=1 and hours=10 combine into 1 day 10 hours booking request deadline time."
        },
        "requestDeadlineWeeks": {
          "type": "integer",
          "format": "int32",
          "description": "The number of weeks allocated to confirm or reject booking by activity supplier. Combines with other requestDeadline[X] fields, e.g. days=1 and hours=10 combine into 1 day 10 hours booking request deadline time."
        },
        "boxedActivityId": {
          "type": "integer",
          "format": "int64",
          "description": "If this is a box, then this field holds the ID of the activity inside the box."
        },
        "comboActivity": {
          "type": "boolean",
          "description": "Specifies whether this is a combo activity."
        },
        "comboParts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComboPart"
          },
          "description": "The list of the components of this combo product."
        },
        "ticketPerComboComponent": {
          "type": "boolean",
          "description": "Specifies whether this combo activity has tickets per combo component."
        },
        "ticketComboComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComboPart"
          },
          "description": "The list of the parts of this combo product for which customer gets separate tickets as well as a ticket for the combo itself."
        },
        "pickupActivityId": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of activity which pickup config should be used for syncing pickup service of this combo."
        },
        "allowCustomizedBookings": {
          "type": "boolean",
          "description": "Specifies if bookings with customized start times and prices are allowed (such bookings do not affect availability)."
        },
        "dayBasedAvailability": {
          "type": "boolean",
          "description": "Specifies if BookingType == DATE."
        },
        "selectFromDayOptions": {
          "type": "boolean",
          "description": "Specifies if we let customers choose their preferred start time from a list when booking this product."
        },
        "dayOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of available departure options."
        },
        "activityCategories": {
          "type": "array",
          "description": "The list of categories that the tour/activity/attraction falls into. (Categories & Themes)",
          "items": {
            "$ref": "#/definitions/ActivityCategory"
          }
        },
        "activityAttributes": {
          "type": "array",
          "description": "The list of themes that describe the tour/activity/attraction. (Categories & Themes)",
          "items": {
            "$ref": "#/definitions/ActivityAttribute"
          }
        },
        "guidanceTypes": {
          "type": "array",
          "description": "The list of types of guidance on offer, along with what languages each is offered in.",
          "items": {
            "$ref": "#/definitions/Guidance"
          }
        },
        "defaultRateId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the default rate for this activity."
        },
        "rates": {
          "type": "array",
          "description": "The list of all rates offered by the product.",
          "items": {
            "$ref": "#/definitions/ActivityRateDto"
          }
        },
        "ticketPerPerson": {
          "type": "boolean",
          "description": "Whether ticket is generated per person (true) or per booking (false)."
        },
        "durationType": {
          "type": "string",
          "enum": [
            "MINUTES",
            "HOURS",
            "DAYS"
          ],
          "description": "Deprecated. Use duration minutes, hours, days and weeks instead."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Deprecated. Use duration minutes, hours, days and weeks instead."
        },
        "durationMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in minutes. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationHours": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in hours. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationDays": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in days. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationWeeks": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in weeks. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationText": {
          "type": "string",
          "description": "Specifies activity duration in human language and formated to the locale specified in the profile."
        },
        "minAge": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the age lower limit for the activity, if any."
        },
        "nextDefaultPrice": {
          "type": "number",
          "description": "The price for 1 person in the default category, assuming the future departure date nearest in time to the current time. Amount in default locale currency."
        },
        "nextDefaultPriceMoney": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "currency": {
              "type": "string"
            }
          },
          "description": "The price for 1 person in the default category, assuming the future departure date nearest in time to the current time. Amount and currency in default locale currency."
        },
        "pickupService": {
          "type": "boolean",
          "description": "Deprecated. Pick up service is now specified in meetingType."
        },
        "pickupAllotment": {
          "type": "boolean",
          "description": "Whether pick up has separate capacity from the activity (for example, activity can take 60 pax but the pick up bus can only take 30)."
        },
        "pickupAllotmentType": {
          "type": "string",
          "enum": [
            "NO_ALLOTMENT",
            "USE_ALLOTMENT",
            "USE_COMBO_ALLOTMENT"
          ],
          "description": "Specifies pick up allotment type."
        },
        "useComponentPickupAllotments": {
          "type": "boolean",
          "description": "True if pickupAllotmentType == USE_COMBO_ALLOTMENT."
        },
        "pickupFlags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of flags added to the pick up of this activity."
        },
        "customPickupAllowed": {
          "type": "boolean",
          "description": "Only used if meetingType != MEET_ON_LOCATION. Specifies whether the customer should be allowed to enter their pick up place in free text."
        },
        "pickupMinutesBefore": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies how many minutes before departure the pick up service starts."
        },
        "noPickupMsg": {
          "type": "string",
          "description": "Specifies custom message on ticket when customer does not want pick-up. May contain HTML markup."
        },
        "ticketMsg": {
          "type": "string",
          "description": "Specifies custom message on ticket. May contain HTML markup."
        },
        "showGlobalPickupMsg": {
          "type": "boolean",
          "description": "Specifies if the custom message is turned on to be shown on ticket."
        },
        "showNoPickupMsg": {
          "type": "boolean",
          "description": "Specifies if the custom message when customer does not want pick-up is turned on to be shown on ticket."
        },
        "pickupPlaceGroups": {
          "type": "object",
          "description": "The list of the pickup place groups for this activity."
        },
        "dropoffService": {
          "type": "boolean",
          "description": "Specifies whether this activity offers drop off service."
        },
        "dropoffFlags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of flags added to the drop-off of this activity."
        },
        "customDropoffAllowed": {
          "type": "boolean",
          "description": "Only relevant if dropoffService is TRUE. Specifies whether the customer should be allowed to enter their drop off place in free text."
        },
        "useSameAsPickUpPlaces": {
          "type": "boolean",
          "description": "Specifies if supplier wants to drop-off users to the same places that they can be picked up from."
        },
        "dropoffPlaceGroups": {
          "type": "object",
          "description": "The list of the drop-off place groups for this activity."
        },
        "difficultyLevel": {
          "type": "string",
          "description": "Specifies how physically demanding this tour/activity is.",
          "enum": [
            "VERY_EASY",
            "EASY",
            "MODERATE",
            "CHALLENGING",
            "DEMANDING",
            "EXTREME"
          ]
        },
        "pricingCategories": {
          "type": "array",
          "description": "The list of all pricing categories offered by this product.",
          "items": {
            "$ref": "#/definitions/PricingCategoryDto"
          }
        },
        "agendaItems": {
          "type": "array",
          "description": "An optional list of agenda / itinerary items for this tour/activity.",
          "items": {
            "$ref": "#/definitions/AgendaItemDto"
          }
        },
        "startTimes": {
          "type": "array",
          "description": "Only used if bookingType == DATE_AND_TIME. A list of scheduled start times for this tour/activity.",
          "items": {
            "$ref": "#/definitions/StartTimeDto"
          }
        },
        "bookableExtras": {
          "type": "array",
          "description": "The list of extras available for this product. Note that not all of these extras may be available for all bookable items. For example, different rates may offer different extras.",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "route": {
          "$ref": "#/definitions/ActivityRouteDto",
          "description": "Optional travel directions that show the start point, end point, and any waypoints in between."
        },
        "hasOpeningHours": {
          "type": "boolean",
          "description": "Specifies whether this product has specific opening hours."
        },
        "defaultOpeningHours": {
          "$ref": "#/definitions/OpeningHours",
          "description": "Only used if hasOpeningHours == true. The default opening hours by weekday. These may be overridden by seasonal opening hours."
        },
        "seasonalOpeningHours": {
          "type": "array",
          "description": "Optional seasonal opening hours. If date falls within the season then this will override the default opening hours.",
          "items": {
            "$ref": "#/definitions/SeasonalOpeningHours"
          }
        },
        "displaySettings": {
          "type": "object",
          "properties": {
            "showPickupPlaces": {
              "type": "boolean",
              "description": "Specifies if pick up places are shown."
            },
            "showRouteMap": {
              "type": "boolean"
            },
            "selectRateBasedOnStartTime": {
              "type": "boolean"
            },
            "customFields": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomFieldDto"
              },
              "description": "Is set up in old product overview. In order to have custom fields for the product, they have to be enabled, in \"Advanced settings->Custom input fields\"."
            }
          }
        },
        "hasBoxes": {
          "type": "boolean",
          "description": "Specifies if this activity product has a box version in the system."
        },
        "requestDeadline": {
          "type": "integer",
          "format": "int64",
          "description": "Deprecated, use 4 fields instead (requestDeadlineMinutes, etc.). The number of miliseconds allocated to confirm or reject booking by activity supplier."
        },
        "actualId": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of this product if it is not a box, otherwise ID of boxed activity product."
        },
        "bookingCutoff": {
          "type": "integer",
          "format": "int32",
          "description": "Deprecated, use 4 fields instead (bookingCutoffMinutes, etc.). The number of minutes before the activity when we stop accepting bookings."
        },
        "nextDefaultPriceAsText": {
          "type": "string",
          "description": "Human readable price (e.g. \"USD 15.90\") for 1 person in the default price category, assuming the future departure date nearest in time to the current time. Amount in default locale currency."
        },
        "actualVendor": {
          "$ref": "#/definitions/VendorDto",
          "description": "Specifies the original owner of the activity product."
        }
      }
    },
    "ComboPart": {
      "description": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OpeningHours": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "array",
          "description": "Creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "monday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "friday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "sunday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        }
      }
    },
    "SeasonalOpeningHours": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "array",
          "description": "Creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "monday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "friday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "sunday": {
          "$ref": "#/definitions/OpeningHoursWeekday"
        },
        "startYear": {
          "type": "integer",
          "format": "int32"
        },
        "endYear": {
          "type": "integer",
          "format": "int32"
        },
        "startMonth": {
          "type": "integer",
          "format": "int32"
        },
        "startDay": {
          "type": "integer",
          "format": "int32"
        },
        "endMonth": {
          "type": "integer",
          "format": "int32"
        },
        "endDay": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OpeningHoursWeekday": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "array",
          "description": "Creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "open24Hours": {
          "type": "boolean",
          "description": "Specifies if opening hours are 24 hours for this weekday."
        },
        "timeIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningHoursTimeInterval"
          }
        }
      }
    },
    "OpeningHoursTimeInterval": {
      "properties": {
        "openFrom": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Specifies opening hour and minutes (2 array elements)."
        },
        "openForHours": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies total open hours amount for that weekday."
        },
        "openForMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies total open minutes amount for that weekday."
        },
        "frequency": {
          "type": "object",
          "$ref": "#/definitions/Duration",
          "description": "Set up in Advanced opening hours page. Specifies frequency of opening hours (e.g. customers are admited every 1 hour)."
        }
      }
    },
    "Duration": {
      "properties": {
        "minutes": {
          "type": "integer",
          "format": "int32"
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        },
        "days": {
          "type": "integer",
          "format": "int32"
        },
        "weeks": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ActivityRateDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Rate id."
        },
        "title": {
          "type": "string",
          "description": "The title of rate (may be displayed to the end customer to describe the rate)."
        },
        "description": {
          "type": "string",
          "description": "The description of rate (may be displayed to the end customer to describe the rate)."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Index is used for ordering rates within the list."
        },
        "rateCode": {
          "type": "string",
          "description": "Short rate code."
        },
        "pricedPerPerson": {
          "type": "boolean",
          "description": "Specifies whether this rate is priced per person. If this is false, then the rate is priced per booking."
        },
        "minPerBooking": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum participants per one booking on this rate. This is useful if you want to have a group rate."
        },
        "maxPerBooking": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum participants per one booking on this rate. This field is null if there is no such maximum set (but do not confuse with start time availability maximum seats)."
        },
        "cancellationPolicy": {
          "description": "The cancellation policy for this rate.",
          "$ref": "#/definitions/CancellationPolicy"
        },
        "pickupSelectionType": {
          "description": "Specifies how to handle pick-up for this rate. NB: if Activity.meetingType == MEET_ON_LOCATION, then this will always be UNAVAILABLE.",
          "$ref": "#/definitions/AddonSelectionType"
        },
        "pickupPricingType": {
          "description": "Specifies whether pick-up is included in the price or it is priced separately.",
          "$ref": "#/definitions/AddonPricingType"
        },
        "pickupPricedPerPerson": {
          "type": "boolean",
          "description": "Specifies whether pick up is priced per person (per pricing category). Only checked if Activity.meetingType != MEET_ON_LOCATION and pickupPricingType == PRICED_SEPARATELY."
        },
        "dropoffSelectionType": {
          "description": "Specifies how to handle drop-off for this rate. Only used if Activity.offersDropoffService == true.",
          "$ref": "#/definitions/AddonSelectionType"
        },
        "dropoffPricingType": {
          "description": "Specifies whether drop-off is included in the price or it is priced separately.",
          "$ref": "#/definitions/AddonPricingType"
        },
        "dropoffPricedPerPerson": {
          "type": "boolean",
          "description": "Specifies whether drop-off is priced per person (per pricing category). Only checked if Activity.offersDropoffService == true and dropoffPricingType == PRICED_SEPARATELY."
        },
        "extraConfigs": {
          "type": "array",
          "description": "The list of activity extras that are used by this rate.",
          "items": {
            "$ref": "#/definitions/ActivityRateExtraConfig"
          }
        },
        "startTimeIds": {
          "type": "array",
          "description": "Only used if bookingType == DATE_AND_TIME. The list of IDs of activity start times that this rate is applicable for. If empty, then the rate will be available for all start times.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "tieredPricingEnabled": {
          "type": "boolean",
          "description": "Specifies if there is tiered pricing set for this rate."
        },
        "tiers": {
          "type": "array",
          "description": "The list of pricing tiers which are set for this rate.",
          "items": {
            "type": "object",
            "properties": {
              "minPassengersRequired": {
                "type": "integer",
                "description": "Specifies minimum amount of participants to qualify for this tier."
              },
              "maxPassengersRequired": {
                "type": "integer",
                "description": "Specifies upper boundary of participants for this tier. If null - there is no upper limit for this tier."
              },
              "pricingCategoryId": {
                "type": "integer",
                "format": "int64",
                "description": "Specifies ID of pricing category enabled for this tier."
              },
              "activityRateId": {
                "type": "integer",
                "format": "int64",
                "description": "Specifies ID of rate for which this tier is enabled."
              }
            }
          }
        },
        "pricingCategoryIds": {
          "type": "array",
          "description": "The list of the IDs of pricing categories that are mapped to this rate.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "details": {
          "type": "array",
          "description": "Specific details about the rate properties",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ActivityRateExtraConfig": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "activityExtraId": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of extra mapped to this activity rate."
        },
        "selectionType": {
          "description": "Specifies whether extra is optional or preselected.",
          "$ref": "#/definitions/ExtraSelectionType"
        },
        "pricingType": {
          "description": "Specifies whether extra is included in the price or it is priced separately.",
          "$ref": "#/definitions/AddonPricingType"
        },
        "pricedPerPerson": {
          "type": "boolean",
          "description": "Specifies whether extra is priced per person. If false then extra is priced per booking."
        }
      }
    },
    "ActivityPlacesDto": {
      "properties": {
        "dropoffPlaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PickupPlaceDto"
          }
        },
        "pickupPlaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PickupPlaceDto"
          }
        }
      }
    },
    "ActivityPricingCategoryBookingDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        },
        "bookedDropoffPrice": {
          "type": "number"
        },
        "bookedPickupPrice": {
          "type": "number"
        },
        "bookedPrice": {
          "type": "number"
        },
        "bookedTitle": {
          "type": "string"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDetailsDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pricingCategory": {
          "$ref": "#/definitions/PricingCategoryDto"
        },
        "pricingCategoryId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ActivityQuery": {
      "properties": {
        "agendaLocationFilters": {
          "$ref": "#/definitions/LocationFilters"
        },
        "comboActivity": {
          "type": "boolean"
        },
        "dateFormats": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endDate": {
          "type": "string"
        },
        "excludeBoxes": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "facetFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetFilter"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "participants": {
          "type": "integer",
          "format": "int32"
        },
        "participantsByAge": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "publishedSince": {
          "type": "string"
        },
        "sortField": {
          "$ref": "#/definitions/ActivitySortField"
        },
        "sortOrder": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "startPointLocationFilters": {
          "$ref": "#/definitions/LocationFilters"
        },
        "textFilter": {
          "$ref": "#/definitions/TextFilter"
        },
        "vendorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ActivityRouteDto": {
      "properties": {
        "center": {
          "$ref": "#/definitions/GeoPoint"
        },
        "end": {
          "$ref": "#/definitions/GeoPoint"
        },
        "mapZoomLevel": {
          "type": "integer",
          "format": "int32"
        },
        "sameStartEnd": {
          "type": "boolean"
        },
        "start": {
          "$ref": "#/definitions/GeoPoint"
        },
        "waypoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoPoint"
          }
        }
      }
    },
    "AgendaItemDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of the agenda item."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies this agenda item position in the itinerary list."
        },
        "title": {
          "type": "string",
          "description": "Specifies title of the agenda item."
        },
        "excerpt": {
          "type": "string",
          "description": "The excerpt text of the agenda item."
        },
        "body": {
          "type": "string",
          "description": "The description text of the agenda item. May contain HTML markup."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "If this is a multi-day tour, specifies which day number this agenda item belongs to."
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of flags added to this agenda item."
        },
        "location": {
          "$ref": "#/definitions/LocationDto",
          "description": "Specifies location details for this agenda item."
        },
        "address": {
          "type": "object",
          "description": "Specifies the address for this agenda item."
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto",
          "description": "A photo added as a key photo for this agenda item."
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          },
          "description": "The list of all photos added for this agenda item."
        }
      }
    },
    "BookingAnswerDto": {
      "properties": {
        "answer": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "question": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BookingAnswerGroupDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "qandA": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionAnswerPairDto"
          }
        },
        "questionsAndAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionAnswerPairDto"
          }
        }
      }
    },
    "BookingAnswerWithIdDto": {
      "properties": {
        "answer": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "question": {
          "type": "string"
        },
        "questionId": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "BookingItemInfoDto": {
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "number"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ComboStartTimeInfoDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the combo start time. Do not confuse with combo product start time as this id is unique for each combo product child activity start time."
        },
        "targetActivityId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the activity included in this combo product."
        },
        "targetStartTimeId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the combo-included activity start time mapped to this combo start time."
        }
      }
    },
    "ExtraBookingDetailsDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerWithIdDto"
          }
        },
        "bookableExtra": {
          "$ref": "#/definitions/BookableExtraDto"
        },
        "extra": {
          "$ref": "#/definitions/BookableExtraDto"
        },
        "groupedAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExtraBookingDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerWithIdDto"
          }
        },
        "description": {
          "type": "string"
        },
        "extra": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "free": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "included": {
          "type": "boolean"
        },
        "pricingType": {
          "type": "string"
        },
        "pricingTypeLabel": {
          "type": "string"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PickupPlaceDto": {
      "properties": {
        "askForRoomNumber": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PlaceTypeEnum"
        }
      }
    },
    "PlaceTypeEnum": {
      "type": "string",
      "enum": [
        "AIRPORT",
        "PORT",
        "STATION",
        "ACCOMMODATION",
        "OTHER"
      ]
    },
    "PricingCategoryDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of the price category."
        },
        "title": {
          "type": "string",
          "description": "Specifies title of the price category."
        },
        "ticketCategory": {
          "$ref": "#/definitions/TicketCategoryEnum"
        },
        "occupancy": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies how many places for activity availabilities occupies 1 ticket for this price category."
        },
        "groupSize": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies size of group in case it is a pricing category of Group type."
        },
        "ageQualified": {
          "type": "boolean",
          "description": "Specifies whether this price category has age restrictions."
        },
        "minAge": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies lower limit for age restriction for this price category."
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies upper limit for age restriction for this price category."
        },
        "dependent": {
          "type": "boolean",
          "description": "Specifies if this price category has booking limits which depend on another price categories in this booking (e.g. max 4 children per 1 adult)."
        },
        "masterCategoryId": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of related price category: if dependent == true then master price category id, if dependent == false then child price category id."
        },
        "maxPerMaster": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies maximum of categories that are set as dependent for one master category. (e.g. 4 children per 1 adult)."
        },
        "sumDependentCategories": {
          "type": "boolean",
          "description": "Specifies if max sum of dependent categories in one booking is set."
        },
        "maxDependentSum": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies max sum for dependent categories in one booking."
        },
        "internalUseOnly": {
          "type": "boolean",
          "description": "Specifies if this price category is intended for internal use only."
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of flags created for this pricing category."
        },
        "defaultCategory": {
          "type": "boolean",
          "description": "Specifies if this price category is set as default for this activity."
        },
        "fullTitle": {
          "type": "string",
          "description": "Full price category title string that is formatted as follows: title (minAge - maxAge)."
        }
      }
    },
    "ProductInfoDto": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "price": {
          "type": "number"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        }
      }
    },
    "QuestionAnswerPairDto": {
      "properties": {
        "answer": {
          "$ref": "#/definitions/BookingAnswerWithIdDto"
        },
        "answerAsString": {
          "type": "string"
        },
        "question": {
          "$ref": "#/definitions/QuestionDto"
        },
        "questionAsString": {
          "type": "string"
        }
      }
    },
    "StartTimeDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of the starting time."
        },
        "label": {
          "type": "string",
          "description": "Specifies label for this starting time."
        },
        "hour": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies hours of this starting time."
        },
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies minutes of this starting time."
        },
        "overrideTimeWhenPickup": {
          "type": "boolean",
          "description": "Specifies if this starting time is overriden by pick up time."
        },
        "pickupHour": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies start time hours when different time for pick-up is selected."
        },
        "pickupMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies start time minutes when different time for pick-up is selected."
        },
        "durationType": {
          "type": "string",
          "description": "Deprecated. Should be used durationMinutes, durationHours, durationDays, durationWeeks."
        },
        "voucherPickupMsg": {
          "type": "string",
          "description": "Pick-up message on the ticket."
        },
        "externalId": {
          "type": "string",
          "description": "Code for the start time, which could be used for external systems."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Deprecated. Should be used durationMinutes, durationHours, durationDays, durationWeeks."
        },
        "durationMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Duration set for this starting time in minutes. Could be different from activity duration. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationHours": {
          "type": "integer",
          "format": "int32",
          "description": "Duration set for this starting time in hours. Could be different from activity duration. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationDays": {
          "type": "integer",
          "format": "int32",
          "description": "Duration set for this starting time in days. Could be different from activity duration. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "durationWeeks": {
          "type": "integer",
          "format": "int32",
          "description": "Duration set for this starting time in weeks. Could be different from activity duration. Total duration is calculated by summing the duration in minutes, hours, days, weeks."
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of the flags created for this starting time."
        }
      }
    },
    "WeekdayDto": {
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "HarbourDto": {
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pickupPlace": {
          "$ref": "#/definitions/PickupPlaceDto"
        },
        "productListId": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "StopoverDto": {
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "type": "string",
          "format": "date-time"
        },
        "harbourId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "VesselDto": {
      "properties": {
        "affiliate": {
          "$ref": "#/definitions/affiliate"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "stopovers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopoverDto"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "affiliate": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "idNumber": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "trackingCode": {
          "type": "string"
        }
      }
    },
    "AccommodationBookingDto": {
      "properties": {
        "accommodation": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "allotment": {
          "$ref": "#/definitions/AllotmentDto"
        },
        "bookingStatus": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customerUuid": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "lastEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "productCategory": {
          "type": "string"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "roomBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomBookingDto"
          }
        },
        "sortDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalPrice": {
          "type": "number"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        }
      }
    },
    "AccommodationBookingRequestDto": {
      "properties": {
        "accommodationId": {
          "type": "integer",
          "format": "int64"
        },
        "checkinDate": {
          "type": "string"
        },
        "checkoutDate": {
          "type": "string"
        },
        "ignoreAssignmentIfFull": {
          "type": "boolean"
        },
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomBookingRequestDto"
          }
        },
        "travelType": {
          "$ref": "#/definitions/TravelTypeEnum"
        }
      }
    },
    "RoomBookingRequestDto": {
      "properties": {
        "roomTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "roomRateId": {
          "type": "integer",
          "format": "int64"
        },
        "roomId": {
          "type": "integer",
          "format": "int64"
        },
        "guests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDto"
          }
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingRequestDto"
          }
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomBookingAnswersDto"
          }
        },
        "externalReference": {
          "type": "string"
        },
        "checkinDate": {
          "type": "string"
        },
        "checkoutDate": {
          "type": "string"
        },
        "adults": {
          "type": "number",
          "format": "int32"
        },
        "children": {
          "type": "number",
          "format": "int32"
        },
        "infants": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "ActivityBookingRequestDto": {
      "properties": {
        "activityId": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "type": "string"
        },
        "dropoff": {
          "type": "boolean"
        },
        "dropoffPlaceDescription": {
          "type": "string"
        },
        "dropoffPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingRequestDto"
          }
        },
        "flexibleDayOption": {
          "type": "string"
        },
        "pickup": {
          "type": "boolean"
        },
        "pickupPlaceDescription": {
          "type": "string"
        },
        "pickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupPlaceRoomNumber": {
          "type": "string"
        },
        "pricingCategoryBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityPricingCategoryBookingRequestDto"
          }
        },
        "startTimeId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ActivityPricingCategoryBookingRequestDto": {
      "properties": {
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingRequestDto"
          }
        },
        "pricingCategoryId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AllotmentDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "TicketCategoryEnum": {
      "type": "string",
      "enum": [
        "ADULT",
        "CHILD",
        "TEENAGER",
        "INFANT",
        "SENIOR",
        "STUDENT",
        "MILITARY",
        "OTHER"
      ]
    },
    "BarcodeTypeEnum": {
      "type": "string",
      "enum": [
        "QR_CODE",
        "CODE_128",
        "PDF_417",
        "DATA_MATRIX",
        "AZTEC"
      ]
    },
    "BarcodeValueDto": {
      "properties": {
        "value": {
          "type": "string"
        },
        "offlineCode": {
          "type": "string"
        },
        "barcodeType": {
          "$ref": "#/definitions/BarcodeTypeEnum"
        }
      }
    },
    "BookingAnswerWithIdGroupDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerWithIdDto"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CarBookingDto": {
      "properties": {
        "availabilityBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarTypeAvailabilityBookingDto"
          }
        },
        "availabilityCount": {
          "type": "integer",
          "format": "int32"
        },
        "carPrice": {
          "type": "number"
        },
        "carType": {
          "$ref": "#/definitions/CarTypeInfoDto"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDto"
          }
        },
        "extrasPrice": {
          "type": "number"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "locationPrice": {
          "type": "number"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "unavailable": {
          "type": "boolean"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CarRentalBookingDto": {
      "properties": {
        "bookingStatus": {
          "type": "string"
        },
        "carBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarBookingDto"
          }
        },
        "carRental": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customerUuid": {
          "type": "string"
        },
        "dayCount": {
          "type": "integer",
          "format": "int32"
        },
        "dropoffLocation": {
          "$ref": "#/definitions/CarRentalLocationDto"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "pickupLocation": {
          "$ref": "#/definitions/CarRentalLocationDto"
        },
        "productCategory": {
          "type": "string"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalPrice": {
          "type": "number"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        }
      }
    },
    "CarBookingRequestDto": {
      "properties": {
        "carTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingRequestDto"
          }
        }
      }
    },
    "CarRentalBookingRequestDto": {
      "properties": {
        "carRentalId": {
          "type": "integer",
          "format": "int64"
        },
        "cars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarBookingRequestDto"
          }
        },
        "dropoffDate": {
          "type": "string"
        },
        "dropoffLocationId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupDate": {
          "type": "string"
        },
        "pickupLocationId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CarTypeAvailabilityBookingDto": {
      "properties": {
        "availability": {
          "$ref": "#/definitions/CarTypeAvailabilityDto"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CarTypeAvailabilityDto": {
      "properties": {
        "availabilityCount": {
          "type": "integer",
          "format": "int32"
        },
        "carTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "closed": {
          "type": "boolean"
        },
        "dayOfMonth": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "unlimitedAvailability": {
          "type": "boolean"
        }
      }
    },
    "CarTypeInfoDto": {
      "properties": {
        "exampleCarModel": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ExtraBookingRequestDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerWithIdGroupDto"
          }
        },
        "extraId": {
          "type": "integer",
          "format": "int64"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PricingCategoryPassengerSpecificationDto": {
      "properties": {
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "passengers": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RegionDto": {
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "RoomBookingDto": {
      "properties": {
        "adults": {
          "type": "integer",
          "format": "int32"
        },
        "availabilityCount": {
          "type": "integer",
          "format": "int32"
        },
        "children": {
          "type": "integer",
          "format": "int32"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDto"
          }
        },
        "extrasPrice": {
          "type": "number"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "infants": {
          "type": "integer",
          "format": "int32"
        },
        "roomPrice": {
          "type": "number"
        },
        "roomRate": {
          "$ref": "#/definitions/RoomRateDto"
        },
        "roomType": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/RoomBookingStatusEnum"
        },
        "unavailable": {
          "type": "boolean"
        }
      }
    },
    "RouteBookingDto": {
      "properties": {
        "bookingStatus": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customerUuid": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "flexible": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "legBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteLegBookingDto"
          }
        },
        "lineItemSpecs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteBookingLineItemSpecDto"
          }
        },
        "passengerBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutePassengerBookingDto"
          }
        },
        "productCategory": {
          "type": "string"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "returnBooking": {
          "$ref": "#/definitions/RouteBookingDto"
        },
        "route": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "totalPrice": {
          "type": "number"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        }
      }
    },
    "RouteBookingLineItemSpecDto": {
      "properties": {
        "pricePerPassenger": {
          "type": "number"
        },
        "pricingCategory": {
          "$ref": "#/definitions/PricingCategoryDto"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "RouteLegBookingDto": {
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "departure": {
          "$ref": "#/definitions/RouteScheduleDto"
        },
        "dropoffPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "dropoffPlaceTitle": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "leg": {
          "$ref": "#/definitions/RouteLegDto"
        },
        "peak": {
          "type": "boolean"
        },
        "pickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupPlaceTitle": {
          "type": "string"
        }
      }
    },
    "RouteLegDto": {
      "properties": {
        "distance": {
          "type": "integer",
          "format": "int32"
        },
        "distanceUnit": {
          "$ref": "#/definitions/DistanceUnitEnum"
        },
        "externalId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flexibleSchedule": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/RouteStationDto"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteScheduleDto"
          }
        },
        "to": {
          "$ref": "#/definitions/RouteStationDto"
        }
      }
    },
    "RoutePassengerBookingDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pricingCategory": {
          "$ref": "#/definitions/PricingCategoryDto"
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        }
      }
    },
    "RoutePathSegmentBookingRequest": {
      "properties": {
        "departureSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteScheduleBookingRequestDto"
          }
        },
        "passengerSpecification": {
          "$ref": "#/definitions/SegmentPassengerSpecificationDto"
        },
        "returnSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteScheduleBookingRequestDto"
          }
        },
        "returning": {
          "type": "boolean"
        },
        "routeId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RouteScheduleBookingRequestDto": {
      "properties": {
        "dropoffPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "routeLegId": {
          "type": "integer",
          "format": "int64"
        },
        "scheduleId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RouteScheduleDto": {
      "properties": {
        "arrivalHour": {
          "type": "integer",
          "format": "int32"
        },
        "arrivalMinute": {
          "type": "integer",
          "format": "int32"
        },
        "arrivalTimeStr": {
          "type": "string"
        },
        "departureHour": {
          "type": "integer",
          "format": "int32"
        },
        "departureMinute": {
          "type": "integer",
          "format": "int32"
        },
        "departureTimeStr": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "peak": {
          "type": "boolean"
        }
      }
    },
    "RouteStationDto": {
      "properties": {
        "airportStation": {
          "type": "boolean"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "pickupFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupStation": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionDto"
          }
        },
        "shortOrLongTitle": {
          "type": "string"
        },
        "shortTitle": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "SegmentPassengerSpecificationDto": {
      "properties": {
        "passengerSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricingCategoryPassengerSpecificationDto"
          }
        }
      }
    },
    "ShoppingCart": {
      "properties": {
        "accommodationBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccommodationBookingDto"
          }
        },
        "activityBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityBookingDto"
          }
        },
        "carRentalBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalBookingDto"
          }
        },
        "customerUUID": {
          "type": "string"
        },
        "harbour": {
          "$ref": "#/definitions/HarbourDto"
        },
        "lastAccessDate": {
          "type": "string",
          "format": "date-time"
        },
        "routeBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteBookingDto"
          }
        },
        "sessionId": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "totalPrice": {
          "type": "number"
        },
        "totalPriceInInvoiceCurrency": {
          "type": "number"
        },
        "vessel": {
          "$ref": "#/definitions/VesselDto"
        }
      }
    },
    "TransportBookingRequestDto": {
      "properties": {
        "departureDate": {
          "type": "string"
        },
        "pathSegments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutePathSegmentBookingRequest"
          }
        },
        "returnDate": {
          "type": "string"
        }
      }
    },
    "TranslationLanguageDto": {
      "properties": {
        "code": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AvailableDepartureReturnPathPairDto": {
      "properties": {
        "departurePath": {
          "$ref": "#/definitions/AvailablePathDto"
        },
        "resultsType": {
          "$ref": "#/definitions/RouteResultsType"
        },
        "returnPath": {
          "$ref": "#/definitions/AvailablePathDto"
        }
      }
    },
    "AvailableLegDto": {
      "properties": {
        "departure": {
          "$ref": "#/definitions/AvailableScheduleDto"
        },
        "departureDate": {
          "type": "string",
          "format": "date-time"
        },
        "leg": {
          "$ref": "#/definitions/RouteLegDto"
        },
        "routeId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AvailablePathDto": {
      "properties": {
        "legs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableLegDto"
          }
        }
      }
    },
    "AvailableScheduleDto": {
      "properties": {
        "availableSeats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableSeatsDto"
          }
        },
        "prices": {
          "$ref": "#/definitions/TransportPricesDto"
        },
        "schedule": {
          "$ref": "#/definitions/RouteScheduleDto"
        }
      }
    },
    "AvailableSeatsDto": {
      "properties": {
        "capacity": {
          "$ref": "#/definitions/CapacityDto"
        }
      }
    },
    "CapacityDto": {
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "capacityType": {
          "$ref": "#/definitions/CapacityTypeEnum"
        }
      }
    },
    "CurrencyUnit": {
      "properties": {
        "code": {
          "type": "string"
        },
        "countryCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        },
        "currencyCode": {
          "type": "string"
        },
        "decimalPlaces": {
          "type": "integer",
          "format": "int32"
        },
        "defaultFractionDigits": {
          "type": "integer",
          "format": "int32"
        },
        "numeric3Code": {
          "type": "string"
        },
        "numericCode": {
          "type": "integer",
          "format": "int32"
        },
        "pseudoCurrency": {
          "type": "boolean"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "SimpleMoney": {
      "properties": {
        "amount": {
          "type": "number",
          "description": "Money amount numeric value (without currency)."
        },
        "currency": {
          "type": "string",
          "description": "Currency code (ISO 4217)."
        }
      }
    },
    "Money": {
      "properties": {
        "amount": {
          "type": "number"
        },
        "amountMajor": {
          "type": "number"
        },
        "amountMajorInt": {
          "type": "integer",
          "format": "int32"
        },
        "amountMajorLong": {
          "type": "integer",
          "format": "int64"
        },
        "amountMinor": {
          "type": "number"
        },
        "amountMinorInt": {
          "type": "integer",
          "format": "int32"
        },
        "amountMinorLong": {
          "type": "integer",
          "format": "int64"
        },
        "currencyUnit": {
          "$ref": "#/definitions/CurrencyUnit"
        },
        "minorPart": {
          "type": "integer",
          "format": "int32"
        },
        "negative": {
          "type": "boolean"
        },
        "negativeOrZero": {
          "type": "boolean"
        },
        "positive": {
          "type": "boolean"
        },
        "positiveOrZero": {
          "type": "boolean"
        },
        "scale": {
          "type": "integer",
          "format": "int32"
        },
        "zero": {
          "type": "boolean"
        }
      }
    },
    "PassengerCategoryPricesDto": {
      "properties": {
        "peak": {
          "type": "boolean"
        },
        "price": {
          "$ref": "#/definitions/PriceModulationOutput"
        },
        "pricingCategory": {
          "$ref": "#/definitions/PricingCategoryDto"
        },
        "returnTicket": {
          "type": "boolean"
        }
      }
    },
    "PriceModulationOutput": {
      "properties": {
        "appliedModulators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceModulatorConfigDto"
          }
        },
        "costItemId": {
          "type": "integer",
          "format": "int64"
        },
        "costItemType": {
          "$ref": "#/definitions/CostItemTypeEnum"
        },
        "costMatrixId": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "$ref": "#/definitions/Money"
        },
        "foundPrice": {
          "type": "boolean"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "priceWithDiscount": {
          "$ref": "#/definitions/Money"
        },
        "unModulatedPrice": {
          "$ref": "#/definitions/Money"
        }
      }
    },
    "PriceModulatorConfigDto": {
      "properties": {
        "allMonths": {
          "type": "boolean"
        },
        "allWeekdays": {
          "type": "boolean"
        },
        "alwaysOn": {
          "type": "boolean"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "modulatorType": {
          "type": "string"
        },
        "months": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "priceCatalogId": {
          "type": "integer",
          "format": "int64"
        },
        "promotion": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "weekDays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "weekdays": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "RouteAvailabilityReportDto": {
      "properties": {
        "departureDate": {
          "type": "string",
          "format": "date-time"
        },
        "from": {
          "$ref": "#/definitions/RouteStationDto"
        },
        "query": {
          "$ref": "#/definitions/TransportQuery"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableDepartureReturnPathPairDto"
          }
        },
        "returnDate": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "$ref": "#/definitions/RouteStationDto"
        }
      }
    },
    "RouteDto": {
      "properties": {
        "actualVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "availabilityExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/availabilityExpression"
          }
        },
        "baseLanguage": {
          "type": "string"
        },
        "box": {
          "type": "boolean"
        },
        "boxedVendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryDto"
          }
        },
        "closures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/availabilityClosure"
          }
        },
        "paymentCurrencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "defaultDestStationId": {
          "type": "integer",
          "format": "int64"
        },
        "defaultSourceStationId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "endStationIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "excerpt": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "flag": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flexibleTickets": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "keyPhoto": {
          "$ref": "#/definitions/PhotoDto"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastPublished": {
          "type": "string"
        },
        "legs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteLegDto"
          }
        },
        "peakPricing": {
          "type": "boolean"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhotoDto"
          }
        },
        "pricingCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricingCategoryDto"
          }
        },
        "productCategory": {
          "type": "string"
        },
        "productGroupId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of commission group which is assigned to this product (set in Pricing/Commission group)."
        },
        "returnPricing": {
          "type": "boolean"
        },
        "slug": {
          "type": "string"
        },
        "stationGroups": {
          "type": "string"
        },
        "tagGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagGroupDto"
          }
        },
        "timeSelectionRequired": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/VendorDto"
        },
        "videos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoDto"
          }
        },
        "cancellationPolicy": {
          "$ref": "#/definitions/CancellationPolicyDto"
        },
        "barcodeType": {
          "$ref": "#/definitions/BarcodeTypeEnum"
        },
        "timeZone": {
          "type": "string"
        },
        "storedExternally": {
          "type": "boolean"
        }
      }
    },
    "TransportPricesDto": {
      "properties": {
        "passengerCategoryPrices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassengerCategoryPricesDto"
          }
        }
      }
    },
    "TransportQuery": {
      "properties": {
        "departureDate": {
          "type": "string"
        },
        "departureTime": {
          "type": "string"
        },
        "destPickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "destStationId": {
          "type": "integer",
          "format": "int64"
        },
        "maxLegs": {
          "type": "integer",
          "format": "int32"
        },
        "maxPaths": {
          "type": "integer",
          "format": "int32"
        },
        "maxRoutes": {
          "type": "integer",
          "format": "int32"
        },
        "maxStopoverDuration": {
          "type": "string"
        },
        "maxTotalDuration": {
          "type": "string"
        },
        "passengers": {
          "type": "integer",
          "format": "int32"
        },
        "pricingCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricingCategoryPassengerSpecificationDto"
          }
        },
        "returnDate": {
          "type": "string"
        },
        "returnTime": {
          "type": "string"
        },
        "routeIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sourcePickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "sourceStationId": {
          "type": "integer",
          "format": "int64"
        },
        "weightType": {
          "$ref": "#/definitions/RouteWeightType"
        }
      }
    },
    "availabilityClosure": {
      "properties": {
        "closedItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/availabilityItemClosure"
          }
        },
        "comment": {
          "type": "string"
        },
        "cron": {
          "type": "string"
        },
        "cronConditionActive": {
          "type": "boolean"
        },
        "dateRangeConditionActive": {
          "type": "boolean"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flagConditionActive": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "recurringDateRange": {
          "type": "boolean"
        },
        "recurringEndDay": {
          "type": "integer",
          "format": "int32"
        },
        "recurringEndMonth": {
          "type": "integer",
          "format": "int32"
        },
        "recurringStartDay": {
          "type": "integer",
          "format": "int32"
        },
        "recurringStartMonth": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "availabilityExpression": {
      "properties": {
        "capacities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/availabilityItemCapacity"
          }
        },
        "comment": {
          "type": "string"
        },
        "cron": {
          "type": "string"
        },
        "cronConditionActive": {
          "type": "boolean"
        },
        "dateRangeConditionActive": {
          "type": "boolean"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flagConditionActive": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "recurringDateRange": {
          "type": "boolean"
        },
        "recurringEndDay": {
          "type": "integer",
          "format": "int32"
        },
        "recurringEndMonth": {
          "type": "integer",
          "format": "int32"
        },
        "recurringStartDay": {
          "type": "integer",
          "format": "int32"
        },
        "recurringStartMonth": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "availabilityItemCapacity": {
      "properties": {
        "availabilityItemId": {
          "type": "string"
        },
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "capacityType": {
          "$ref": "#/definitions/CapacityTypeEnum"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "availabilityItemClosure": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "item": {
          "type": "string"
        }
      }
    },
    "RoomAvailabilityRequestDto": {
      "properties": {
        "accommodationId": {
          "type": "integer",
          "format": "int64"
        },
        "checkIn": {
          "type": "string"
        },
        "checkOut": {
          "type": "string"
        }
      }
    },
    "SingleRoomStatusDto": {
      "properties": {
        "roomId": {
          "type": "integer",
          "format": "int64"
        },
        "roomTitle": {
          "type": "string"
        },
        "roomAvailable": {
          "type": "boolean"
        }
      }
    },
    "RoomAvailabilityResponseDto": {
      "properties": {
        "roomAvailabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleRoomStatusDto"
          }
        }
      }
    },
    "RoomInfo": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "RoomTypeRooms": {
      "properties": {
        "roomType": {
          "$ref": "#/definitions/LightweightRoomTypeDto"
        },
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomInfo"
          }
        }
      }
    },
    "RoomsGroupedByTypeContainer": {
      "properties": {
        "roomsGroupedByType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomTypeRooms"
          }
        }
      }
    },
    "OldAccommodationBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "roomBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomBookingAnswersDto"
          }
        }
      }
    },
    "AccommodationBookingDetailsDto": {
      "properties": {
        "accommodation": {
          "$ref": "#/definitions/AccommodationDto"
        },
        "affiliateCommission": {
          "type": "number",
          "format": "double"
        },
        "agent": {
          "$ref": "#/definitions/BookingAgentWithLinksDto"
        },
        "agentCommission": {
          "type": "number",
          "format": "double"
        },
        "allotment": {
          "$ref": "#/definitions/AllotmentDto"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        },
        "boxBooking": {
          "type": "boolean"
        },
        "boxProduct": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "cancelNote": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledBy": {
          "type": "string"
        },
        "confirmationCode": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "linksToExternalProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntegratedSystemProductLinkDto"
          }
        },
        "firstStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "supplierContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sellerContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "invoice": {
          "$ref": "#/definitions/ProductInvoiceDto"
        },
        "lastEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "lodgingTax": {
          "$ref": "#/definitions/Money"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingNote"
          }
        },
        "paidType": {
          "$ref": "#/definitions/PaymentPaidTypeEnum"
        },
        "parentBooking": {
          "$ref": "#/definitions/BookingDetailsDto"
        },
        "parentBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "priceWithDiscount": {
          "type": "number"
        },
        "product": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "rooms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomBookingDetailsDto"
          }
        },
        "savedAmount": {
          "type": "number"
        },
        "seller": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "sellerCommission": {
          "type": "number",
          "format": "double"
        },
        "sortDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/BookingStatusEnum"
        },
        "supplier": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "Action": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The discriminator field"
        }
      },
      "discriminator": "type"
    },
    "OldActivityBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "dropoffPlaceDescription": {
          "type": "string"
        },
        "dropoffPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingAnswersDto"
          }
        },
        "pickupPlaceDescription": {
          "type": "string"
        },
        "pickupPlaceId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupPlaceRoomNumber": {
          "type": "string"
        },
        "pricingCategoryBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityPricingCategoryBookingAnswersDto"
          }
        }
      }
    },
    "ActivityBookingDetailsDto": {
      "properties": {
        "activity": {
          "$ref": "#/definitions/ActivityDto"
        },
        "affiliateCommission": {
          "type": "number",
          "format": "double"
        },
        "agent": {
          "$ref": "#/definitions/BookingAgentWithLinksDto"
        },
        "agentCommission": {
          "type": "number",
          "format": "double"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        },
        "bookedDropoffPricingType": {
          "$ref": "#/definitions/AddonPricingTypeEnum"
        },
        "bookedPickupPricingType": {
          "$ref": "#/definitions/AddonPricingTypeEnum"
        },
        "bookedPricingCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricingCategoryDto"
          }
        },
        "boxBooking": {
          "type": "boolean"
        },
        "boxProduct": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "cancelNote": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledBy": {
          "type": "string"
        },
        "comboChildBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBookingBasicsDto"
          }
        },
        "comboParentBooking": {
          "$ref": "#/definitions/ProductBookingBasicsDto"
        },
        "confirmationCode": {
          "type": "string"
        },
        "customized": {
          "type": "boolean"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "discountAmount": {
          "type": "number"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "dropoff": {
          "type": "boolean"
        },
        "dropoffPlace": {
          "$ref": "#/definitions/PickupPlaceDto"
        },
        "dropoffPlaceDescription": {
          "type": "string"
        },
        "linksToExternalProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntegratedSystemProductLinkDto"
          }
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDetailsDto"
          }
        },
        "bookingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingFieldDto"
          }
        },
        "supplierContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sellerContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flexible": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "invoice": {
          "$ref": "#/definitions/ProductInvoiceDto"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingNote"
          }
        },
        "paidType": {
          "$ref": "#/definitions/PaymentPaidTypeEnum"
        },
        "parentBooking": {
          "$ref": "#/definitions/BookingDetailsDto"
        },
        "parentBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "pickup": {
          "type": "boolean"
        },
        "pickupPlace": {
          "$ref": "#/definitions/PickupPlaceDto"
        },
        "pickupPlaceDescription": {
          "type": "string"
        },
        "pickupPlaceRoomNumber": {
          "type": "string"
        },
        "pickupTime": {
          "type": "string"
        },
        "priceWithDiscount": {
          "type": "number"
        },
        "pricingCategoryBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityPricingCategoryBookingDto"
          }
        },
        "product": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "quantityByPricingCategory": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "int32"
          }
        },
        "savedAmount": {
          "type": "number"
        },
        "selectedFlexDayOption": {
          "type": "string"
        },
        "seller": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "sellerCommission": {
          "type": "number",
          "format": "double"
        },
        "startTime": {
          "type": "string"
        },
        "startTimeId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/BookingStatusEnum"
        },
        "supplier": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "totalParticipants": {
          "type": "integer",
          "format": "int32"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "ActivityPricingCategoryBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AgentBookingDetailsDto": {
      "properties": {
        "contractId": {
          "type": "integer",
          "format": "int64"
        },
        "contractType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AppliedTaxDto": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "tax": {
          "type": "number"
        },
        "taxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "taxAsText": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "BookingAgentUserDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BookingAgentWithLinksDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "idNumber": {
          "type": "string"
        },
        "linkedExternalCustomers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedExternalCustomerDto"
          }
        },
        "referenceCode": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "OldBookingAnswersDto": {
      "properties": {
        "accommodationsBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OldAccommodationBookingAnswersDto"
          }
        },
        "activityBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OldActivityBookingAnswersDto"
          }
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "carRentalBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarRentalBookingAnswersDto"
          }
        },
        "routeBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteBookingAnswersDto"
          }
        }
      }
    },
    "BookingConfirmationDto": {
      "properties": {
        "externalBookingReference": {
          "type": "string"
        },
        "externalBookingEntityName": {
          "type": "string"
        },
        "externalBookingEntityCode": {
          "type": "string"
        },
        "bookingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingFieldDto"
          }
        },
        "payment": {
          "$ref": "#/definitions/CustomerPaymentDto"
        }
      }
    },
    "BookingEditResult": {
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      }
    },
    "BookingFieldDto": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BookingReservationRequestDto": {
      "properties": {
        "answers": {
          "$ref": "#/definitions/OldBookingAnswersDto"
        },
        "bookingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingFieldDto"
          }
        },
        "chargeRequest": {
          "$ref": "#/definitions/ChargeRequestDto"
        },
        "createPaymentsAutomatically": {
          "type": "boolean"
        },
        "deposit": {
          "type": "boolean"
        },
        "depositAmount": {
          "type": "number"
        },
        "depositPercentage": {
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "type": "number"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "paymentInfo": {
          "$ref": "#/definitions/CustomerPaymentDto"
        }
      }
    },
    "CarBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingAnswersDto"
          }
        }
      }
    },
    "CarBookingDetailsDto": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "carType": {
          "$ref": "#/definitions/CarTypeDto"
        },
        "dayCount": {
          "type": "integer",
          "format": "int32"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDetailsDto"
          }
        },
        "bookingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingFieldDto"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "unitCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CarRentalBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "carBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarBookingAnswersDto"
          }
        }
      }
    },
    "CarRentalBookingDetailsDto": {
      "properties": {
        "affiliateCommission": {
          "type": "number",
          "format": "double"
        },
        "agent": {
          "$ref": "#/definitions/BookingAgentWithLinksDto"
        },
        "agentCommission": {
          "type": "number",
          "format": "double"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        },
        "boxBooking": {
          "type": "boolean"
        },
        "boxProduct": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "cancelNote": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledBy": {
          "type": "string"
        },
        "carBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarBookingDetailsDto"
          }
        },
        "carRental": {
          "$ref": "#/definitions/CarRentalDto"
        },
        "confirmationCode": {
          "type": "string"
        },
        "dayCount": {
          "type": "integer",
          "format": "int32"
        },
        "discountAmount": {
          "type": "number"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "dropoffLocation": {
          "$ref": "#/definitions/CarRentalLocationDto"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "linksToExternalProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntegratedSystemProductLinkDto"
          }
        },
        "supplierContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sellerContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "invoice": {
          "$ref": "#/definitions/ProductInvoiceDto"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingNote"
          }
        },
        "paidType": {
          "$ref": "#/definitions/PaymentPaidTypeEnum"
        },
        "parentBooking": {
          "$ref": "#/definitions/BookingDetailsDto"
        },
        "parentBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "pickupLocation": {
          "$ref": "#/definitions/CarRentalLocationDto"
        },
        "priceWithDiscount": {
          "type": "number"
        },
        "product": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "savedAmount": {
          "type": "number"
        },
        "seller": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "sellerCommission": {
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/BookingStatusEnum"
        },
        "supplier": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "CardDto": {
      "properties": {
        "addressCity": {
          "type": "string"
        },
        "addressCountry": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressPostCode": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "cvc": {
          "type": "string"
        },
        "expMonth": {
          "type": "string"
        },
        "expYear": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ChargeRequest": {
      "properties": {
        "amount": {
          "type": "number"
        },
        "approvePageURL": {
          "type": "string"
        },
        "cancelPageURL": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "contractId": {
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "cvc": {
          "type": "string"
        },
        "errorPageURL": {
          "type": "string"
        },
        "expMonth": {
          "type": "string"
        },
        "expYear": {
          "type": "string"
        },
        "formLanguage": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ChargeRequestDto": {
      "properties": {
        "card": {
          "$ref": "#/definitions/CardDto"
        },
        "confirmBookingOnSuccess": {
          "type": "boolean"
        }
      }
    },
    "CustomLineItemDto": {
      "properties": {
        "calculatedDiscount": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "customDiscount": {
          "type": "number",
          "format": "double"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lineItemType": {
          "$ref": "#/definitions/CustomLineItemTypeEnum"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "tax": {
          "$ref": "#/definitions/TaxDto"
        },
        "taxAmount": {
          "type": "number"
        },
        "taxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "taxAsText": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "total": {
          "type": "number"
        },
        "totalAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalAsText": {
          "type": "string"
        },
        "totalDiscounted": {
          "type": "number"
        },
        "totalDiscountedAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsText": {
          "type": "string"
        },
        "totalDue": {
          "type": "number"
        },
        "totalDueAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDueAsText": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "unitPriceAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "unitPriceAsText": {
          "type": "string"
        },
        "unitPriceDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerCredentialsDto": {
      "properties": {
        "username": {
          "type": "string"
        }
      }
    },
    "CustomerDto": {
      "properties": {
        "address": {
          "type": "string"
        },
        "contactDetailsHidden": {
          "type": "boolean"
        },
        "contactDetailsHiddenUntil": {
          "type": "string",
          "format": "date-time"
        },
        "country": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "credentials": {
          "$ref": "#/definitions/CustomerCredentialsDto"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "language": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "passportExpMonth": {
          "type": "string"
        },
        "passportExpYear": {
          "type": "string"
        },
        "passportId": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneNumberCountryCode": {
          "type": "string"
        },
        "place": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "CustomerFieldReferenceDto": {
      "properties": {
        "field": {
          "$ref": "#/definitions/CustomerFieldEnum",
          "description": "Specifies customer information field name."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies if corresponding field is required in this form."
        }
      }
    },
    "CustomerFieldEnum": {
      "type": "string",
      "enum": [
        "TITLE",
        "FIRST_NAME",
        "LAST_NAME",
        "PERSONAL_ID_NUMBER",
        "EMAIL",
        "PHONE_NUMBER",
        "NATIONALITY",
        "GENDER",
        "ORGANIZATION",
        "PASSPORT_ID",
        "PASSPORT_EXPIRY",
        "ADDRESS",
        "DATE_OF_BIRTH",
        "LANGUAGE"
      ]
    },
    "CustomerInvoiceDto": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "customLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDto"
          }
        },
        "excludedAppliedTaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppliedTaxDto"
          }
        },
        "excludedTaxes": {
          "type": "boolean"
        },
        "free": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedAppliedTaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppliedTaxDto"
          }
        },
        "includedTaxes": {
          "type": "boolean"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "$ref": "#/definitions/ItemDto"
        },
        "issuerName": {
          "type": "string"
        },
        "lodgingTaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppliedTaxDto"
          }
        },
        "paidAmountAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "paidAmountAsText": {
          "type": "string"
        },
        "productInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductInvoiceDto"
          }
        },
        "recipient": {
          "$ref": "#/definitions/CustomerDto"
        },
        "recipientName": {
          "type": "string"
        },
        "remainingAmountAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "remainingAmountAsText": {
          "type": "string"
        },
        "totalAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalAsText": {
          "type": "string"
        },
        "totalDiscountAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsText": {
          "type": "string"
        },
        "totalDueAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDueAsText": {
          "type": "string"
        },
        "totalExcludedTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalExcludedTaxAsText": {
          "type": "string"
        },
        "totalIncludedTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalIncludedTaxAsText": {
          "type": "string"
        },
        "totalTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalTaxAsText": {
          "type": "string"
        }
      }
    },
    "CustomerPaymentDto": {
      "properties": {
        "activeCustomerInvoiceId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number"
        },
        "amountAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "amountAsText": {
          "type": "string"
        },
        "authorizationCode": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "paymentContractId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentId": {
          "type": "integer",
          "format": "int64"
        },
        "paymentProviderType": {
          "type": "string"
        },
        "paymentReferenceId": {
          "type": "string"
        },
        "paymentType": {
          "$ref": "#/definitions/PaymentTypeEnum"
        },
        "transactionDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DateRangeFilter": {
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "includeLower": {
          "type": "boolean"
        },
        "includeUpper": {
          "type": "boolean"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ErrorDto": {
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        }
      }
    },
    "ExtraBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerWithIdGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "extraId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ExtranetUserDto": {
      "properties": {
        "agent": {
          "$ref": "#/definitions/agent"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstName": {
          "type": "string"
        },
        "fullNameShort": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastLoginDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/ExtranetUserRoleEnum"
        },
        "termsOfServiceAgreedDate": {
          "type": "string",
          "format": "date-time"
        },
        "username": {
          "type": "string"
        },
        "vendorRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorRoleEnum"
          }
        }
      }
    },
    "IntegratedSystemConfigDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "systemType": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "IntegratedSystemProductLinkDto": {
      "properties": {
        "externalProductId": {
          "type": "string"
        },
        "externalProductTitle": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemConfigId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvoiceDto": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "total": {
          "type": "number"
        },
        "totalCommission": {
          "type": "number"
        },
        "totalDiscount": {
          "type": "number"
        },
        "totalSansCommission": {
          "type": "number"
        },
        "totalSansDiscount": {
          "type": "number"
        }
      }
    },
    "LightweightRoomTypeDto": {
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "defaultRate": {
          "$ref": "#/definitions/RoomRateDto"
        },
        "externalId": {
          "type": "string"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookableExtraDto"
          }
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "roomRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoomRateDto"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "LinkedExternalCustomerDto": {
      "properties": {
        "externalCustomerId": {
          "type": "string"
        },
        "externalCustomerTitle": {
          "type": "string"
        },
        "externalDepartmentId": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemConfigId": {
          "type": "integer",
          "format": "int64"
        },
        "systemType": {
          "type": "string"
        }
      }
    },
    "PaymentLineItemDto": {
      "properties": {
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductBookingBasicsDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "product": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "productConfirmationCode": {
          "type": "string"
        }
      }
    },
    "ProductBookingQuery": {
      "properties": {
        "bookedExtrasIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "bookingRole": {
          "$ref": "#/definitions/BookingRoleEnum"
        },
        "bookingStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmationCode": {
          "type": "string"
        },
        "creationDateRange": {
          "$ref": "#/definitions/DateRangeFilter"
        },
        "excludeComboBookings": {
          "type": "boolean"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "noteQuery": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "productExternalId": {
          "type": "string"
        },
        "productIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productTitle": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "sortFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortField"
          }
        },
        "startDateRange": {
          "$ref": "#/definitions/DateRangeFilter"
        },
        "textFilter": {
          "type": "string"
        }
      }
    },
    "ProductBookingSearchResultItem": {
      "properties": {
        "affiliate": {
          "$ref": "#/definitions/affiliate"
        },
        "affiliateCommission": {
          "type": "number",
          "format": "double"
        },
        "agent": {
          "$ref": "#/definitions/AgentBookingDetailsDto"
        },
        "agentCommission": {
          "type": "number",
          "format": "double"
        },
        "agentUser": {
          "$ref": "#/definitions/BookingAgentUserDto"
        },
        "assignedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDto"
          }
        },
        "boxBooking": {
          "type": "boolean"
        },
        "boxProduct": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "boxSupplier": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "cancelNote": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledBy": {
          "type": "string"
        },
        "channel": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "confirmationCode": {
          "type": "string"
        },
        "contactDetailsHidden": {
          "type": "boolean"
        },
        "contactDetailsHiddenUntil": {
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "currency": {
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "customerInvoice": {
          "$ref": "#/definitions/InvoiceDto"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "extranetUser": {
          "$ref": "#/definitions/ExtranetUserDto"
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "harbour": {
          "$ref": "#/definitions/HarbourDto"
        },
        "hasNotes": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingNote"
          }
        },
        "paidAmount": {
          "type": "number",
          "format": "double"
        },
        "paidType": {
          "type": "string"
        },
        "parentBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "prepaid": {
          "type": "boolean"
        },
        "product": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryEnum",
          "description": "The product category, will be one of: ACTIVITIES, ACCOMMODATION, TRANSPORT, CAR_RENTALS"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "productExternalId": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "resellerInvoice": {
          "$ref": "#/definitions/InvoiceDto"
        },
        "resellerPaidType": {
          "type": "string"
        },
        "resold": {
          "type": "boolean"
        },
        "saleSource": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "seller": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "sellerCommission": {
          "type": "number",
          "format": "double"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "totalPrice": {
          "type": "integer",
          "format": "int32"
        },
        "unconfirmedPayments": {
          "type": "boolean"
        },
        "vendor": {
          "$ref": "#/definitions/BookingItemInfoDto"
        },
        "vessel": {
          "$ref": "#/definitions/VesselDto"
        }
      }
    },
    "ProductBookingSearchResultsDto": {
      "properties": {
        "query": {
          "$ref": "#/definitions/ProductBookingQuery"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBookingSearchResultItem"
          }
        },
        "tookInMillis": {
          "type": "integer",
          "format": "int64"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ProductInvoiceDto": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "customLineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomLineItemDto"
          }
        },
        "dates": {
          "type": "string"
        },
        "excludedAppliedTaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppliedTaxDto"
          }
        },
        "excludedTaxes": {
          "type": "boolean"
        },
        "free": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedAppliedTaxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppliedTaxDto"
          }
        },
        "includedTaxes": {
          "type": "boolean"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductInvoiceLineItemDto"
          }
        },
        "lodgingTax": {
          "$ref": "#/definitions/AppliedTaxDto"
        },
        "product": {
          "$ref": "#/definitions/ItemDto"
        },
        "productBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryEnum",
          "description": "The product category, will be one of: ACTIVITIES, ACCOMMODATION, TRANSPORT, CAR_RENTALS"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "totalAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalAsText": {
          "type": "string"
        },
        "totalDiscountAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsText": {
          "type": "string"
        },
        "totalDueAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDueAsText": {
          "type": "string"
        },
        "totalExcludedTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalExcludedTaxAsText": {
          "type": "string"
        },
        "totalIncludedTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalIncludedTaxAsText": {
          "type": "string"
        },
        "totalTaxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalTaxAsText": {
          "type": "string"
        }
      }
    },
    "ProductInvoiceLineItemDto": {
      "properties": {
        "calculatedDiscount": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "customDiscount": {
          "type": "number",
          "format": "double"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "itemBookingId": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "tax": {
          "$ref": "#/definitions/TaxDto"
        },
        "taxAmount": {
          "type": "number"
        },
        "taxAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "taxAsText": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "total": {
          "type": "number"
        },
        "totalAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalAsText": {
          "type": "string"
        },
        "totalDiscounted": {
          "type": "number"
        },
        "totalDiscountedAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDiscountedAsText": {
          "type": "string"
        },
        "totalDue": {
          "type": "number"
        },
        "totalDueAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "totalDueAsText": {
          "type": "string"
        },
        "unitPrice": {
          "type": "number"
        },
        "unitPriceAsMoney": {
          "$ref": "#/definitions/Money"
        },
        "unitPriceAsText": {
          "type": "string"
        },
        "unitPriceDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResourceDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ResourceTypeEnum"
        }
      }
    },
    "RoomBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        },
        "extraBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingAnswersDto"
          }
        },
        "roomId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RoomBookingDetailsDto": {
      "properties": {
        "adults": {
          "type": "integer",
          "format": "int32"
        },
        "children": {
          "type": "integer",
          "format": "int32"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "extras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtraBookingDetailsDto"
          }
        },
        "bookingFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingFieldDto"
          }
        },
        "guests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDto"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "infants": {
          "type": "integer",
          "format": "int32"
        },
        "nightCount": {
          "type": "integer",
          "format": "int32"
        },
        "roomRate": {
          "$ref": "#/definitions/RoomRateDto"
        },
        "roomType": {
          "$ref": "#/definitions/LightweightRoomTypeDto"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/RoomBookingStatusEnum"
        }
      }
    },
    "RouteBookingAnswersDto": {
      "properties": {
        "answerGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerGroupDto"
          }
        },
        "bookingId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RouteBookingDetailsDto": {
      "properties": {
        "affiliateCommission": {
          "type": "number",
          "format": "double"
        },
        "agent": {
          "$ref": "#/definitions/BookingAgentWithLinksDto"
        },
        "agentCommission": {
          "type": "number",
          "format": "double"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingAnswerDto"
          }
        },
        "barcode": {
          "$ref": "#/definitions/BarcodeValueDto"
        },
        "boxBooking": {
          "type": "boolean"
        },
        "boxProduct": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "cancelNote": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelledBy": {
          "type": "string"
        },
        "confirmationCode": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "discountAmount": {
          "type": "number"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "linksToExternalProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntegratedSystemProductLinkDto"
          }
        },
        "supplierContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sellerContractFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flexible": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "includedOnCustomerInvoice": {
          "type": "boolean"
        },
        "invoice": {
          "$ref": "#/definitions/ProductInvoiceDto"
        },
        "legBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteLegBookingDto"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingNote"
          }
        },
        "paidType": {
          "$ref": "#/definitions/PaymentPaidTypeEnum"
        },
        "parentBooking": {
          "$ref": "#/definitions/BookingDetailsDto"
        },
        "parentBookingId": {
          "type": "integer",
          "format": "int64"
        },
        "passengerBookings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutePassengerBookingDto"
          }
        },
        "passengerSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteBookingLineItemSpecDto"
          }
        },
        "priceWithDiscount": {
          "type": "number"
        },
        "product": {
          "$ref": "#/definitions/ProductInfoDto"
        },
        "productConfirmationCode": {
          "type": "string"
        },
        "returnBooking": {
          "$ref": "#/definitions/RouteBookingDetailsDto"
        },
        "route": {
          "$ref": "#/definitions/RouteDto"
        },
        "savedAmount": {
          "type": "number"
        },
        "seller": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "sellerCommission": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "$ref": "#/definitions/BookingStatusEnum"
        },
        "supplier": {
          "$ref": "#/definitions/VendorWithLinksDto"
        },
        "totalPrice": {
          "type": "number"
        }
      }
    },
    "SingleAccommodationBookingRequestDto": {
      "properties": {
        "accommodationRequest": {
          "$ref": "#/definitions/AccommodationBookingRequestDto"
        },
        "chargeRequest": {
          "$ref": "#/definitions/ChargeRequest"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "harbourId": {
          "type": "integer",
          "format": "int64"
        },
        "manualPayment": {
          "$ref": "#/definitions/CustomerPaymentDto"
        },
        "note": {
          "type": "string"
        },
        "paymentOption": {
          "$ref": "#/definitions/BookingPaymentOption"
        },
        "roomBookingStatus": {
          "$ref": "#/definitions/RoomBookingStatusEnum"
        },
        "sendCustomerNotification": {
          "type": "boolean"
        },
        "tokenChargeRequest": {
          "$ref": "#/definitions/TokenChargeRequest"
        },
        "vesselId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SingleActivityBookingRequestDto": {
      "properties": {
        "activityRequest": {
          "$ref": "#/definitions/ActivityBookingRequestDto"
        },
        "chargeRequest": {
          "$ref": "#/definitions/ChargeRequest"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "harbourId": {
          "type": "integer",
          "format": "int64"
        },
        "manualPayment": {
          "$ref": "#/definitions/CustomerPaymentDto"
        },
        "note": {
          "type": "string"
        },
        "paymentOption": {
          "$ref": "#/definitions/BookingPaymentOption"
        },
        "sendCustomerNotification": {
          "type": "boolean"
        },
        "tokenChargeRequest": {
          "$ref": "#/definitions/TokenChargeRequest"
        },
        "vesselId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SingleCarRentalBookingRequestDto": {
      "properties": {
        "carRentalRequest": {
          "$ref": "#/definitions/CarRentalBookingRequestDto"
        },
        "chargeRequest": {
          "$ref": "#/definitions/ChargeRequest"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "harbourId": {
          "type": "integer",
          "format": "int64"
        },
        "manualPayment": {
          "$ref": "#/definitions/CustomerPaymentDto"
        },
        "note": {
          "type": "string"
        },
        "paymentOption": {
          "$ref": "#/definitions/BookingPaymentOption"
        },
        "sendCustomerNotification": {
          "type": "boolean"
        },
        "tokenChargeRequest": {
          "$ref": "#/definitions/TokenChargeRequest"
        },
        "vesselId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SingleTransportBookingRequestDto": {
      "properties": {
        "routeRequest": {
          "$ref": "#/definitions/TransportBookingRequestDto"
        },
        "chargeRequest": {
          "$ref": "#/definitions/ChargeRequest"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "discountPercentage": {
          "type": "number",
          "format": "double"
        },
        "externalBookingReference": {
          "type": "string"
        },
        "harbourId": {
          "type": "integer",
          "format": "int64"
        },
        "manualPayment": {
          "$ref": "#/definitions/CustomerPaymentDto"
        },
        "note": {
          "type": "string"
        },
        "paymentOption": {
          "$ref": "#/definitions/BookingPaymentOption"
        },
        "sendCustomerNotification": {
          "type": "boolean"
        },
        "tokenChargeRequest": {
          "$ref": "#/definitions/TokenChargeRequest"
        },
        "vesselId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SortField": {
      "properties": {
        "name": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/SortOrder"
        }
      }
    },
    "TaxDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "included": {
          "type": "boolean"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "Tax": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Tax id"
        },
        "created": {
          "type": "array",
          "description": "Tax creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": {
          "type": "string",
          "description": "Current tax title (e.g. \"11% VAT\")."
        },
        "included": {
          "type": "boolean",
          "description": "True if tax is included in the operations."
        },
        "roundingMode": {
          "$ref": "#/definitions/RoundingMode"
        },
        "currency": {
          "type": "string"
        },
        "percentages": {
          "type": "array",
          "description": "The list of percentages applied for this tax during time.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Id of percentage applied for the particular period."
              },
              "created": {
                "type": "array",
                "description": "Percentage applied to this tax creation date and time (array of year, month, day, hours, minutes, seconds).",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "title": {
                "type": "string",
                "description": "Percentage title for the particular period (e.g. \"8% VAT\")."
              },
              "percentage": {
                "type": "number",
                "format": "double",
                "description": "Percentage value applied to this tax on the particular period."
              },
              "compounding": {
                "type": "boolean",
                "description": "True if this is compound (stacked) tax."
              }
            }
          }
        }
      }
    },
    "TokenChargeRequest": {
      "properties": {
        "amount": {
          "type": "number"
        },
        "currency": {
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentLineItemDto"
          }
        },
        "paymentToken": {
          "type": "string"
        },
        "providerPaymentParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uti": {
          "type": "string"
        }
      }
    },
    "VendorWithLinksDto": {
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceIdNumber": {
          "type": "string"
        },
        "linkedExternalCustomers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkedExternalCustomerDto"
          }
        },
        "logo": {
          "$ref": "#/definitions/PhotoDto"
        },
        "logoStyle": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "showAgentDetailsOnTicket": {
          "type": "boolean"
        },
        "showInvoiceIdOnTicket": {
          "type": "boolean"
        },
        "showPaymentsOnInvoice": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "agent": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "idNumber": {
          "type": "string"
        },
        "referenceCode": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "bookingNote": {
      "properties": {
        "author": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "ownerId": {
          "type": "integer",
          "format": "int64"
        },
        "recipient": {
          "type": "string"
        },
        "sentAsEmail": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/BookingNoteTypeEnum"
        },
        "voucherAttached": {
          "type": "boolean"
        },
        "voucherPricesShown": {
          "type": "boolean"
        }
      }
    },
    "cancelBooking": {
      "required": [
        "refund",
        "notify",
        "note"
      ],
      "properties": {
        "note": {
          "type": "string",
          "description": "Cancellation notes"
        },
        "notify": {
          "type": "boolean",
          "description": "Send notification"
        },
        "refund": {
          "type": "boolean",
          "description": "Refund the booking"
        }
      }
    },
    "cancelProductBooking": {
      "required": [
        "refund",
        "notify",
        "refundAmount",
        "note"
      ],
      "properties": {
        "note": {
          "type": "string",
          "description": "Cancellation notes"
        },
        "notify": {
          "type": "boolean",
          "description": "Send notification"
        },
        "refund": {
          "type": "boolean",
          "description": "Refund the product booking"
        },
        "refundAmount": {
          "type": "number",
          "description": "Refund amount (if 0 and refund == true, then full amount is refunded)"
        },
        "remainInvoiced": {
          "type": "boolean",
          "description": "Specify whether the product should remain on customer invoice after being cancelled"
        }
      }
    },
    "ProductListDescriptionDto": {
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductListDescriptionDto"
          }
        },
        "description": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "parent": {
          "$ref": "#/definitions/ProductListDescriptionDto"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ProductListDto": {
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductListDescriptionDto"
          }
        },
        "description": {
          "type": "string"
        },
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductListItemDto"
          }
        },
        "parent": {
          "$ref": "#/definitions/ProductListDescriptionDto"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "slug": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ProductListItemDto": {
      "properties": {
        "accommodation": {
          "$ref": "#/definitions/AccommodationDto"
        },
        "activity": {
          "$ref": "#/definitions/ActivityDto"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryEnum",
          "description": "The product category, will be one of: ACTIVITIES, ACCOMMODATION, TRANSPORT, CAR_RENTALS"
        },
        "vehicle": {
          "$ref": "#/definitions/CarTypeDto"
        }
      }
    },
    "CountryDto": {
      "properties": {
        "isoCode": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "CancellationPolicyDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Cancellation policy id."
        },
        "title": {
          "type": "string",
          "description": "Cancellation policy title."
        },
        "penaltyRules": {
          "type": "array",
          "description": "The list of penalty rules applied for this cancellation policy.",
          "items": {
            "$ref": "#/definitions/PenaltyRuleDto"
          }
        },
        "tax": {
          "$ref": "#/definitions/TaxDto"
        },
        "defaultPolicy": {
          "type": "boolean",
          "description": ""
        }
      }
    },
    "CancellationPolicy": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Cancellation policy id."
        },
        "created": {
          "type": "array",
          "description": "Cancellation policy creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "title": {
          "type": "string",
          "description": "Cancellation policy title."
        },
        "tax": {
          "$ref": "#/definitions/Tax"
        },
        "penaltyRules": {
          "type": "array",
          "description": "The list of penalty rules applied for this cancellation policy.",
          "items": {
            "$ref": "#/definitions/PenaltyRule"
          }
        }
      }
    },
    "PenaltyRuleDto": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the penalty rule."
        },
        "cutoffHours": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies cutoff hours for this penalty rule to apply. E.g. this number would be 24 in penalty rule \"if less than 24 hours then 100% charge\"."
        },
        "charge": {
          "type": "number",
          "format": "double",
          "description": "Specifies value which is used in combination with chargeType for calculating penalty charge."
        },
        "chargeType": {
          "type": "string",
          "description": "Penalty charge calculation type, can either be PERCENTAGE or AMOUNT. If AMOUNT is used, the currency is taken from the sale."
        }
      }
    },
    "PenaltyRule": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the penalty rule."
        },
        "created": {
          "type": "array",
          "description": "Penalty rule creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "cutoffHours": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies cutoff hours for this penalty rule to apply. E.g. this number would be 24 in penalty rule \"if less than 24 hours then 100% charge\"."
        },
        "percentage": {
          "type": "number",
          "description": "Specifies penalty percentage of the cancelled booking total price."
        }
      }
    },
    "Guidance": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Not used"
        },
        "created": {
          "type": "array",
          "description": "Guidance creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "guidanceType": {
          "$ref": "#/definitions/GuidanceType"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Address": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "mapZoomLevel": {
          "type": "integer",
          "format": "int32"
        },
        "geoPoint": {
          "$ref": "#/definitions/BomGeoPoint"
        },
        "unLocode": {
          "$ref": "#/definitions/UnLocode"
        }
      }
    },
    "BomGeoPoint": {
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "UnLocode": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "Place": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Specifies ID of this place."
        },
        "created": {
          "type": "array",
          "description": "Place creation date and time (array of year, month, day, hours, minutes, seconds).",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the place (airport/station/hotel, etc.)."
        },
        "title": {
          "type": "string",
          "description": "Specifies the title of this place."
        },
        "code": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "pickupTicketDescription": {
          "type": "string",
          "description": "Text that appears on the ticket if this place is used as pickup place."
        },
        "dropoffTicketDescription": {
          "type": "string",
          "description": "Text that appears on the ticket if this place is used as pickup place."
        },
        "labels": {
          "type": "array",
          "description": "The list of labels added to this place.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ActivityType": {
      "type": "string",
      "enum": [
        "DAY_TOUR_OR_ACTIVITY",
        "MULTI_DAY_TOUR",
        "ATTRACTION",
        "EVENT"
      ]
    },
    "ActivityBookingType": {
      "type": "string",
      "enum": [
        "PASS",
        "DATE",
        "DATE_AND_TIME"
      ]
    },
    "ActivityScheduleType": {
      "type": "string",
      "enum": [
        "FIXED",
        "RECURRING"
      ]
    },
    "ActivityCapacityType": {
      "type": "string",
      "enum": [
        "FREE_SALE",
        "LIMITED",
        "ON_REQUEST"
      ]
    },
    "AccessibilityType": {
      "type": "string",
      "enum": [
        "LIMITED_MOBILITY",
        "LIMITED_SIGHT",
        "WHEELCHAIR",
        "STROLLER_OR_PRAM"
      ]
    },
    "ActivityMeetingType": {
      "type": "string",
      "enum": [
        "MEET_ON_LOCATION",
        "PICK_UP",
        "MEET_ON_LOCATION_OR_PICK_UP"
      ]
    },
    "GuidanceType": {
      "type": "string",
      "enum": [
        "GUIDED",
        "HEADPHONES",
        "READING_MATERIAL"
      ]
    },
    "ActivityAttribute": {
      "type": "string",
      "enum": [
        "FAMILY_FRIENDLY",
        "ECO_FRIENDLY",
        "ROMANTIC",
        "LUXURY",
        "RAINY_DAY",
        "SKIP_THE_LINE",
        "GROUP_FRIENDLY",
        "INDOOR",
        "OUTDOOR",
        "PRIVATE_ACTIVITY",
        "TAILOR_MADE",
        "BEACH",
        "ADULTS_ONLY",
        "COUPLES",
        "SENIOR",
        "YOUTH",
        "VOLUNTEERS"
      ]
    },
    "ActivityCategory": {
      "type": "string",
      "enum": [
        "WALKING_TOUR",
        "BUS_OR_MINIVAN_TOUR",
        "AIR_OR_HELICOPTER_TOUR",
        "SAILING_OR_BOAT_TOUR",
        "PRIVATE_CAR_TOUR",
        "SEGWAY_TOUR",
        "SNOWMOBILE_TOUR",
        "ATV_OR_QUAD_TOUR",
        "BIKE_TOUR",
        "HOP_ON_HOP_OFF_TOUR",
        "TOURIST_PASS",
        "RAIL_PASS",
        "AMUSEMENT_PARK",
        "AIRPORT_LOUNGE",
        "SHOWS_AND_MUSICALS",
        "SPECTATOR_SPORTS",
        "FESTIVAL",
        "MUSEUMS_AND_EXHIBITIONS",
        "SIGHTSEEING_ATTRACTION",
        "ZOOS_AND_AQUARIUMS",
        "SIGHTSEEING",
        "ARTS_AND_CULTURE",
        "CLASSES_AND_WORKSHOPS",
        "CULINARY",
        "NIGHTLIFE",
        "SHOPPING",
        "PHOTOGRAPHY",
        "TV_AND_MOVIES",
        "ESCAPE_GAME",
        "SPA_AND_WELLNESS",
        "ADVENTURE",
        "WATER",
        "NATURE",
        "SAFARI_AND_WILDLIFE",
        "BIRDWATCHING",
        "DOLPHIN_OR_WHALEWATCHING",
        "SURFING",
        "CANOEING",
        "CAVING",
        "CLIMBING",
        "DIVING",
        "GLACIER_HIKING",
        "HIKING",
        "HORSEBACK_RIDING",
        "ICE_CLIMBING",
        "KAYAKING",
        "RAFTING",
        "SEA_ANGLING",
        "HUNTING",
        "FISHING",
        "SKIING",
        "SNORKELING"
      ]
    },
    "PassExpiryType": {
      "type": "string",
      "enum": [
        "NEVER",
        "FIXED_DATE",
        "RELATIVE_DATE"
      ]
    },
    "AddonSelectionType": {
      "type": "string",
      "enum": [
        "OPTIONAL",
        "PRESELECTED",
        "UNAVAILABLE"
      ]
    },
    "AddonPricingType": {
      "type": "string",
      "enum": [
        "INCLUDED_IN_PRICE",
        "PRICED_SEPARATELY"
      ]
    },
    "ExtraSelectionType": {
      "type": "string",
      "enum": [
        "OPTIONAL",
        "PRESELECTED"
      ]
    },
    "ProductCategoryEnum": {
      "type": "string",
      "enum": [
        "ACCOMMODATION",
        "ACTIVITIES",
        "CAR_RENTALS",
        "TRANSPORT"
      ]
    },
    "TagGroupSubcategoryEnum": {
      "type": "string",
      "enum": [
        "NONE",
        "ITEM"
      ]
    },
    "RentalPricingModeEnum": {
      "type": "string",
      "enum": [
        "USE_PRICE_OF_FIRST_UNIT_FOR_ALL",
        "CALCULATE_EACH_UNIT"
      ]
    },
    "AddonPricingTypeEnum": {
      "type": "string",
      "enum": [
        "FREE",
        "PER_BOOKING",
        "PER_PERSON"
      ]
    },
    "ActivitySortField": {
      "type": "string",
      "enum": [
        "BEST_SELLING_GLOBAL",
        "BEST_SELLING_IN_CHANNEL",
        "ALPHABETIC",
        "RANDOM"
      ]
    },
    "TravelTypeEnum": {
      "type": "string",
      "enum": [
        "BUSINESS",
        "LEISURE",
        "CONFERENCE"
      ]
    },
    "RoomBookingStatusEnum": {
      "type": "string",
      "enum": [
        "RESERVED",
        "CHECKED_IN",
        "CHECKED_OUT",
        "NO_SHOW"
      ]
    },
    "DistanceUnitEnum": {
      "type": "string",
      "enum": [
        "METERS",
        "KILOMETERS"
      ]
    },
    "RouteResultsType": {
      "type": "string",
      "enum": [
        "MULTIPLE_ROUTES",
        "SINGLE_ROUTE",
        "SINGLE_ROUTE_FLEX"
      ]
    },
    "CapacityTypeEnum": {
      "type": "string",
      "enum": [
        "LIMITED",
        "UNLIMITED"
      ]
    },
    "CostItemTypeEnum": {
      "type": "string",
      "enum": [
        "ROOM_TYPE",
        "ROOM_RATE",
        "PRICING_CATEGORY",
        "DEPARTURE_PRICING_CATEGORY",
        "VEHICLE_TYPE",
        "PICKUP",
        "DEPARTURE_PICKUP",
        "DROPOFF",
        "DEPARTURE_DROPOFF",
        "PICKUP_AND_DROPOFF",
        "PRICING_CATEGORY_PEAK",
        "EXTRA"
      ]
    },
    "RouteWeightType": {
      "type": "string",
      "enum": [
        "LEGS",
        "DURATION",
        "PRICE"
      ]
    },
    "PaymentPaidTypeEnum": {
      "type": "string",
      "enum": [
        "PAID_IN_FULL",
        "DEPOSIT",
        "FREE",
        "NOT_PAID",
        "OVERPAID",
        "REFUND",
        "INVOICED",
        "GIFT_CARD"
      ]
    },
    "BookingStatusEnum": {
      "type": "string",
      "enum": [
        "CART",
        "REQUESTED",
        "RESERVED",
        "CONFIRMED",
        "TIMEOUT",
        "ABORTED",
        "CANCELLED",
        "ERROR",
        "ARRIVED",
        "NO_SHOW",
        "REJECTED"
      ]
    },
    "Status": {
      "type": "string",
      "enum": [
        "NEW",
        "FINISHED",
        "FAILED",
        "NOT_FOUND",
        "ERROR"
      ]
    },
    "CustomLineItemTypeEnum": {
      "type": "string",
      "enum": [
        "BOOKING_FEE",
        "CUSTOM_PRICE",
        "DISCOUNT",
        "OTHER"
      ]
    },
    "PaymentTypeEnum": {
      "type": "string",
      "enum": [
        "WEB_PAYMENT",
        "POINT_OF_SALE",
        "CASH",
        "VOUCHER"
      ]
    },
    "ExtranetUserRoleEnum": {
      "type": "string",
      "enum": [
        "VENDOR",
        "BOOKING_AGENT",
        "ADMIN"
      ]
    },
    "VendorRoleEnum": {
      "type": "string",
      "enum": [
        "CONTENT_EDITOR",
        "INVENTORY",
        "PRICING",
        "CONTRACTS",
        "USER_MANAGER",
        "FINANCE",
        "DISTRIBUTION",
        "SALES",
        "SALES_MANAGER",
        "INTEGRATION_MANAGER",
        "SUPPLIER_MANAGER",
        "TRANSLATOR",
        "DRIVER",
        "GUIDE"
      ]
    },
    "BookingRoleEnum": {
      "type": "string",
      "enum": [
        "SUPPLIER",
        "SELLER"
      ]
    },
    "ResourceTypeEnum": {
      "type": "string",
      "enum": [
        "DRIVER",
        "VEHICLE",
        "GUIDE",
        "ROOM",
        "EQUIPMENT"
      ]
    },
    "BookingPaymentOption": {
      "type": "string",
      "enum": [
        "NOT_PAID",
        "ENTER_MANUALLY",
        "PROCESS_ONLINE"
      ]
    },
    "SortOrder": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ]
    },
    "BookingNoteTypeEnum": {
      "type": "string",
      "enum": [
        "GENERAL",
        "FINANCE",
        "OPERATIONS"
      ]
    },
    "LocationOriginEnum": {
      "type": "string",
      "enum": [
        "GOOGLE_PLACES",
        "TRIPADVISOR_API",
        "FREETEXT_LOCATION"
      ]
    },
    "RoundingMode": {
      "type": "string",
      "description": "RoundingMode enum from java.math package.",
      "enum": [
        "UP",
        "DOWN",
        "CEILING",
        "FLOOR",
        "HALF_UP",
        "HALF_DOWN",
        "EVEN"
      ]
    },
    "InclusionExclusionType": {
      "type": "string",
      "description": "Activity Inclusions/Exclusions.",
      "enum": [
        "ENTRY_OR_ADMISSION_FEE",
        "FUEL_SURCHARGE",
        "LANDING_AND_FACILITY_FEES",
        "PARKING_FEES",
        "ENTRY_TAX",
        "DEPARTURE_TAX",
        "NATIONAL_PARK_ENTRANCE_FEE",
        "GOODS_AND_SERVICES_TAX",
        "TIP_OR_GRATUITY",
        "FOOD_AND_DRINKS",
        "WIFI",
        "BUS_FARE"
      ]
    }
  }
}
